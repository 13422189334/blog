import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,f as i,a as n,d as e,b as t,e as s,r as l}from"./app.d2d9f17b.js";const u={},r=n("p",null,[n("em",null,"HTML \u4F5C\u4E3A\u63CF\u8FF0\u7F51\u9875\u7ED3\u6784\u7684\u8D85\u6587\u672C\u6807\u8BB0\u8BED\u8A00\uFF0C\u672C\u6587\u6863\u7684\u76EE\u6807\u662F\u4F7F HTML \u4EE3\u7801\u98CE\u683C\u4FDD\u6301\u4E00\u81F4\uFF0C\u5BB9\u6613\u88AB\u7406\u89E3\u548C\u88AB\u7EF4\u62A4\u3002")],-1),d=t(`<h2 id="\u901A\u7528" tabindex="-1"><a class="header-anchor" href="#\u901A\u7528" aria-hidden="true">#</a> \u901A\u7528</h2><h3 id="\u3010\u5F3A\u5236\u3011-\u4F7F\u7528-html5-\u7684-doctype-\u6765\u542F\u7528\u6807\u51C6\u6A21\u5F0F-\u5EFA\u8BAE\u4F7F\u7528\u5927\u5199\u7684-doctype\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4F7F\u7528-html5-\u7684-doctype-\u6765\u542F\u7528\u6807\u51C6\u6A21\u5F0F-\u5EFA\u8BAE\u4F7F\u7528\u5927\u5199\u7684-doctype\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4F7F\u7528 HTML5 \u7684 doctype \u6765\u542F\u7528\u6807\u51C6\u6A21\u5F0F\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u5927\u5199\u7684 DOCTYPE\u3002</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u3010\u63A8\u8350\u3011\u5728-html-\u6807\u7B7E\u4E0A\u8BBE\u7F6E\u6B63\u786E\u7684-lang-\u5C5E\u6027\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5728-html-\u6807\u7B7E\u4E0A\u8BBE\u7F6E\u6B63\u786E\u7684-lang-\u5C5E\u6027\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5728 html \u6807\u7B7E\u4E0A\u8BBE\u7F6E\u6B63\u786E\u7684 <strong>lang</strong> \u5C5E\u6027\u3002</h3><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u6709\u52A9\u4E8E\u63D0\u9AD8\u9875\u9762\u7684\u53EF\u8BBF\u95EE\u6027\uFF0C\u5982\uFF1A\u8BA9\u8BED\u97F3\u5408\u6210\u5DE5\u5177\u786E\u5B9A\u5176\u6240\u5E94\u8BE5\u91C7\u7528\u7684\u53D1\u97F3\uFF0C\u4EE4\u7FFB\u8BD1\u5DE5\u5177\u786E\u5B9A\u5176\u7FFB\u8BD1\u8BED\u8A00\u7B49\u3002</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh-CN<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u3010\u5F3A\u5236\u3011-\u9875\u9762\u5FC5\u987B\u4F7F\u7528\u7CBE\u7B80\u5F62\u5F0F-\u660E\u786E\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u3002\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u7684-meta-\u5FC5\u987B\u662F-head-\u7684\u7B2C\u4E00\u4E2A\u76F4\u63A5\u5B50\u5143\u7D20\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u9875\u9762\u5FC5\u987B\u4F7F\u7528\u7CBE\u7B80\u5F62\u5F0F-\u660E\u786E\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u3002\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u7684-meta-\u5FC5\u987B\u662F-head-\u7684\u7B2C\u4E00\u4E2A\u76F4\u63A5\u5B50\u5143\u7D20\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u9875\u9762\u5FC5\u987B\u4F7F\u7528\u7CBE\u7B80\u5F62\u5F0F\uFF0C\u660E\u786E\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u3002\u6307\u5B9A\u5B57\u7B26\u7F16\u7801\u7684 <code>meta</code> \u5FC5\u987B\u662F <code>head</code> \u7684\u7B2C\u4E00\u4E2A\u76F4\u63A5\u5B50\u5143\u7D20\u3002</h3>`,7),k=s("\u4E3A\u4EC0\u4E48\uFF1F\u89C1 "),v={href:"https://www.w3school.com.cn/html5/att_script_charset.asp",target:"_blank",rel:"noopener noreferrer"},m=s("HTML5 Charset\u80FD\u7528\u5417"),b=s("\u4E00\u6587\u3002"),h=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    ......
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    ......
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u3010\u5F3A\u5236\u3011-css-\u548C-javascript-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-css-\u548C-javascript-\u5F15\u5165" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> CSS \u548C JavaScript \u5F15\u5165</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u3010\u5EFA\u8BAE\u3011-\u5F15\u5165-css-\u548C-javascript-\u65F6\u65E0\u987B\u6307\u660E-type-\u5C5E\u6027\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5EFA\u8BAE\u3011-\u5F15\u5165-css-\u548C-javascript-\u65F6\u65E0\u987B\u6307\u660E-type-\u5C5E\u6027\u3002" aria-hidden="true">#</a> <code>\u3010\u5EFA\u8BAE\u3011</code> \u5F15\u5165 CSS \u548C JavaScript \u65F6\u65E0\u987B\u6307\u660E type \u5C5E\u6027\u3002</h3><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1Ftext/css \u548C text/javascript \u662F type \u7684\u9ED8\u8BA4\u503C\u3002</p></blockquote><h3 id="\u3010\u5EFA\u8BAE\u3011-javascript-\u5E94\u5F53\u653E\u5728\u9875\u9762\u672B\u5C3E-\u6216\u91C7\u7528\u5F02\u6B65\u52A0\u8F7D\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5EFA\u8BAE\u3011-javascript-\u5E94\u5F53\u653E\u5728\u9875\u9762\u672B\u5C3E-\u6216\u91C7\u7528\u5F02\u6B65\u52A0\u8F7D\u3002" aria-hidden="true">#</a> <code>\u3010\u5EFA\u8BAE\u3011</code> JavaScript \u5E94\u5F53\u653E\u5728\u9875\u9762\u672B\u5C3E\uFF0C\u6216\u91C7\u7528\u5F02\u6B65\u52A0\u8F7D\u3002</h3><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5C06 <code>script</code> \u653E\u5728\u9875\u9762\u4E2D\u95F4\u5C06\u963B\u65AD\u9875\u9762\u7684\u6E32\u67D3\u3002\u51FA\u4E8E\u6027\u80FD\u65B9\u9762\u7684\u8003\u8651\uFF0C\u5982\u975E\u5FC5\u8981\uFF0C\u8BF7\u9075\u5B88\u6B64\u6761\u5EFA\u8BAE\u3002</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
   <span class="token comment">&lt;!-- a lot of elements --&gt;</span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>init-behavior.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u3010\u5EFA\u8BAE\u3011-\u79FB\u52A8\u73AF\u5883\u6216\u53EA\u9488\u5BF9\u73B0\u4EE3\u6D4F\u89C8\u5668\u8BBE\u8BA1\u7684-web-\u5E94\u7528-\u5982\u679C\u5F15\u7528\u5916\u90E8\u8D44\u6E90\u7684-url-\u534F\u8BAE\u90E8\u5206\u4E0E\u9875\u9762\u76F8\u540C-\u5EFA\u8BAE\u7701\u7565\u534F\u8BAE\u524D\u7F00\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5EFA\u8BAE\u3011-\u79FB\u52A8\u73AF\u5883\u6216\u53EA\u9488\u5BF9\u73B0\u4EE3\u6D4F\u89C8\u5668\u8BBE\u8BA1\u7684-web-\u5E94\u7528-\u5982\u679C\u5F15\u7528\u5916\u90E8\u8D44\u6E90\u7684-url-\u534F\u8BAE\u90E8\u5206\u4E0E\u9875\u9762\u76F8\u540C-\u5EFA\u8BAE\u7701\u7565\u534F\u8BAE\u524D\u7F00\u3002" aria-hidden="true">#</a> <code>\u3010\u5EFA\u8BAE\u3011</code> \u79FB\u52A8\u73AF\u5883\u6216\u53EA\u9488\u5BF9\u73B0\u4EE3\u6D4F\u89C8\u5668\u8BBE\u8BA1\u7684 Web \u5E94\u7528\uFF0C\u5982\u679C\u5F15\u7528\u5916\u90E8\u8D44\u6E90\u7684 URL \u534F\u8BAE\u90E8\u5206\u4E0E\u9875\u9762\u76F8\u540C\uFF0C\u5EFA\u8BAE\u7701\u7565\u534F\u8BAE\u524D\u7F00\u3002</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//s1.bdstatic.com/cache/static/jquery-1.10.2.min_f2fb5194.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/cache/static/jquery-1.10.2.min_f2fb5194.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u3010\u5F3A\u5236\u3011-\u9875\u9762\u5FC5\u987B\u5305\u542B-title-\u6807\u7B7E\u58F0\u660E\u6807\u9898\u3002\u4E14-title-\u5FC5\u987B\u4F5C\u4E3A-head-\u7684\u76F4\u63A5\u5B50\u5143\u7D20-\u5E76\u7D27\u968F-charset-\u58F0\u660E\u4E4B\u540E\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u9875\u9762\u5FC5\u987B\u5305\u542B-title-\u6807\u7B7E\u58F0\u660E\u6807\u9898\u3002\u4E14-title-\u5FC5\u987B\u4F5C\u4E3A-head-\u7684\u76F4\u63A5\u5B50\u5143\u7D20-\u5E76\u7D27\u968F-charset-\u58F0\u660E\u4E4B\u540E\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u9875\u9762\u5FC5\u987B\u5305\u542B title \u6807\u7B7E\u58F0\u660E\u6807\u9898\u3002\u4E14 title \u5FC5\u987B\u4F5C\u4E3A head \u7684\u76F4\u63A5\u5B50\u5143\u7D20\uFF0C\u5E76\u7D27\u968F charset \u58F0\u660E\u4E4B\u540E\u3002</h3><blockquote><p>title \u4E2D\u5982\u679C\u5305\u542B ASCII \u4E4B\u5916\u7684\u5B57\u7B26\uFF0C\u6D4F\u89C8\u5668\u9700\u8981\u77E5\u9053\u5B57\u7B26\u7F16\u7801\u7C7B\u578B\u624D\u80FD\u8FDB\u884C\u89E3\u7801\uFF0C\u5426\u5219\u53EF\u80FD\u5BFC\u81F4\u4E71\u7801\u3002</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>\u9875\u9762\u6807\u9898<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u3010\u5F3A\u5236\u3011-\u4FDD\u8BC1-favicon-\u53EF\u8BBF\u95EE\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4FDD\u8BC1-favicon-\u53EF\u8BBF\u95EE\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4FDD\u8BC1 favicon \u53EF\u8BBF\u95EE\u3002</h3><blockquote><p>\u5728\u672A\u6307\u5B9A favicon \u65F6\uFF0C\u5927\u591A\u6570\u6D4F\u89C8\u5668\u4F1A\u8BF7\u6C42 Web Server \u6839\u76EE\u5F55\u4E0B\u7684 <code>favicon.ico</code> \u3002\u4E3A\u4E86\u4FDD\u8BC1 favicon \u53EF\u8BBF\u95EE\uFF0C\u907F\u514D 404\uFF0C\u5FC5\u987B\u9075\u5FAA\u4EE5\u4E0B\u4E24\u79CD\u65B9\u6CD5\u4E4B\u4E00\uFF1A</p><ol><li>\u5728 Web Server \u6839\u76EE\u5F55\u653E\u7F6E <code>favicon.ico</code> \u6587\u4EF6\u3002</li><li>\u4F7F\u7528 <code>link</code> \u6307\u5B9A favicon\u3002</li></ol></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shortcut icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>path/to/favicon.ico<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u3010\u5EFA\u8BAE\u3011-\u82E5\u9875\u9762\u6B32\u5BF9\u79FB\u52A8\u8BBE\u5907\u53CB\u597D-\u9700\u6307\u5B9A\u9875\u9762\u7684-viewport\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5EFA\u8BAE\u3011-\u82E5\u9875\u9762\u6B32\u5BF9\u79FB\u52A8\u8BBE\u5907\u53CB\u597D-\u9700\u6307\u5B9A\u9875\u9762\u7684-viewport\u3002" aria-hidden="true">#</a> <code>\u3010\u5EFA\u8BAE\u3011</code> \u82E5\u9875\u9762\u6B32\u5BF9\u79FB\u52A8\u8BBE\u5907\u53CB\u597D\uFF0C\u9700\u6307\u5B9A\u9875\u9762\u7684 <code>viewport</code>\u3002</h3>`,17),_=n("p",null,[s("viewport meta tag \u53EF\u4EE5\u8BBE\u7F6E\u53EF\u89C6\u533A\u57DF\u7684\u5BBD\u5EA6\u548C\u521D\u59CB\u7F29\u653E\u5927\u5C0F\uFF0C\u907F\u514D\u5728\u79FB\u52A8\u8BBE\u5907\u4E0A\u51FA\u73B0\u9875\u9762\u5C55\u793A\u4E0D\u6B63\u5E38\u3002 \u6BD4\u5982\uFF0C\u5728\u9875\u9762\u5BBD\u5EA6\u5C0F\u4E8E "),n("code",null,"980px"),s(" \u65F6\uFF0C\u82E5\u9700 iOS \u8BBE\u5907\u53CB\u597D\uFF0C\u5E94\u5F53\u8BBE\u7F6E viewport \u7684 "),n("code",null,"width"),s(" \u503C\u6765\u9002\u5E94\u4F60\u7684\u9875\u9762\u5BBD\u5EA6\u3002")],-1),g=n("p",null,[s("\u540C\u65F6\u56E0\u4E3A\u4E0D\u540C\u79FB\u52A8\u8BBE\u5907\u5206\u8FA8\u7387\u4E0D\u540C\uFF0C\u5728\u8BBE\u7F6E\u65F6\uFF0C\u5E94\u5F53\u4F7F\u7528 "),n("code",null,"device-width"),s(" \u548C "),n("code",null,"device-height"),s(" \u53D8\u91CF\u3002")],-1),f=s("\u53E6\u5916\uFF0C\u4E3A\u4E86\u4F7F viewport \u6B63\u5E38\u5DE5\u4F5C\uFF0C\u5728\u9875\u9762\u5185\u5BB9\u6837\u5F0F\u5E03\u5C40\u8BBE\u8BA1\u4E0A\u4E5F\u8981\u505A\u76F8\u5E94\u8C03\u6574\uFF0C\u5982\u907F\u514D\u7EDD\u5BF9\u5B9A\u4F4D\u7B49\u3002\u5173\u4E8E viewport \u7684\u66F4\u591A\u4ECB\u7ECD\uFF0C \u53EF\u4EE5\u53C2\u89C1 "),y={href:"https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html#//apple_ref/doc/uid/TP40006509-SW26",target:"_blank",rel:"noopener noreferrer"},w=s("Safari Web Content Guide\u7684\u4ECB\u7ECD"),x=s("\u3002"),j=n("h2",{id:"javascript\u89C4\u8303\u6307\u5357",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript\u89C4\u8303\u6307\u5357","aria-hidden":"true"},"#"),s(" JavaScript\u89C4\u8303\u6307\u5357")],-1),q=n("p",null,[n("em",null,"\u4F7F\u7528 JavaScript \u6700\u5408\u7406\u7684\u65B9\u5F0F\u3002\u57FA\u4E8EAirbnb JavaScript Style Guide \u7ED3\u5408\u5B9E\u9645\u7814\u53D1\u60C5\u51B5\uFF0C\u505A\u76F8\u5E94\u6539\u5199\u800C\u6210\u3002")],-1),S=n("strong",null,"\u6CE8\u610F",-1),N=s(": \u8FD9\u4E2A\u6307\u5357\u5047\u5B9A\u4F60\u6B63\u5728\u4F7F\u7528 "),A={href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"},O=s("Babel"),C=s("\uFF0C\u5E76\u4E14\u9700\u8981\u4F60\u4F7F\u7528 "),I={href:"https://npmjs.com/babel-preset-airbnb",target:"_blank",rel:"noopener noreferrer"},T=s("babel-preset-airbnb"),B=s("\u6216\u4E0E\u5176\u7B49\u6548\u7684\u9884\u8BBE\u3002\u540C\u65F6\u5047\u5B9A\u4F60\u5728\u4F60\u7684\u5E94\u7528\u91CC\u5B89\u88C5\u4E86 \u5E26\u6709 "),E={href:"https://npmjs.com/airbnb-browser-shims",target:"_blank",rel:"noopener noreferrer"},L=s("airbnb-browser-shims"),z=s("\u6216\u4E0E\u5176\u7B49\u6548\u7684\u63D2\u4EF6\u7684 "),P=n("code",null,"shims/polyfills",-1),D=s("\u3002"),J=n("blockquote",null,[n("p",null,[n("strong",null,"\u63D0\u793A"),s(": \u57FA\u4E8Ebabel-preset-airbnb \u4E8C\u6B21\u4FEE\u6539\u7684\u9884\u8BBE\u8FD8\u6CA1\u5B8C\u6210\uFF0C\u4EC5\u9650\u4E0E\u521D\u7248\u6587\u6863\u9636\u6BB5\u3002")])],-1),F=n("h3",{id:"\u5F15\u7528",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F15\u7528","aria-hidden":"true"},"#"),s(" \u5F15\u7528")],-1),M={id:"\u3010\u5F3A\u5236\u3011-\u6240\u6709\u7684\u8D4B\u503C\u90FD\u7528-const-\u907F\u514D\u4F7F\u7528-var\u3002eslint-prefer-const-no-const-assign",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u6240\u6709\u7684\u8D4B\u503C\u90FD\u7528-const-\u907F\u514D\u4F7F\u7528-var\u3002eslint-prefer-const-no-const-assign","aria-hidden":"true"},"#",-1),H=s(),R=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),V=s(" \u6240\u6709\u7684\u8D4B\u503C\u90FD\u7528 "),$=n("code",null,"const",-1),W=s("\uFF0C\u907F\u514D\u4F7F\u7528 "),U=n("code",null,"var",-1),Y=s("\u3002eslint: "),Q={href:"http://eslint.org/docs/rules/prefer-const.html",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"prefer-const",-1),K=s(", "),Z={href:"http://eslint.org/docs/rules/no-const-assign.html",target:"_blank",rel:"noopener noreferrer"},nn=n("code",null,"no-const-assign",-1),sn=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A\u8FD9\u4E2A\u80FD\u786E\u4FDD\u4F60\u4E0D\u4F1A\u6539\u53D8\u4F60\u7684\u521D\u59CB\u503C\uFF0C\u91CD\u590D\u5F15\u7528\u4F1A\u5BFC\u81F4 bug \u5E76\u4E14\u4F7F\u4EE3\u7801\u53D8\u5F97\u96BE\u4EE5\u7406\u89E3\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),an={id:"\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4F60\u4E00\u5B9A\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C-\u4F7F\u7528-let-\u800C\u4E0D\u662F-var\u3002eslint-no-var",tabindex:"-1"},en=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4F60\u4E00\u5B9A\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C-\u4F7F\u7528-let-\u800C\u4E0D\u662F-var\u3002eslint-no-var","aria-hidden":"true"},"#",-1),tn=s(),on=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),pn=s(" \u5982\u679C\u4F60\u4E00\u5B9A\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\uFF0C\u4F7F\u7528 "),cn=n("code",null,"let",-1),ln=s("\uFF0C\u800C\u4E0D\u662F "),un=n("code",null,"var",-1),rn=s("\u3002eslint: "),dn={href:"http://eslint.org/docs/rules/no-var.html",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"no-var",-1),vn=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A <code>let</code> \u662F\u5757\u7EA7\u4F5C\u7528\u57DF\uFF0C\u800C <code>var</code> \u662F\u51FD\u6570\u7EA7\u4F5C\u7528\u57DF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good, use the let.</span>
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6CE8\u610F-let-\u548C-const-\u90FD\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u3002" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F-let-\u548C-const-\u90FD\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u3002" aria-hidden="true">#</a> \u6CE8\u610F\uFF1A<code>let</code> \u548C <code>const</code> \u90FD\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const \u548C let \u90FD\u53EA\u5B58\u5728\u4E8E\u5B83\u88AB\u5B9A\u4E49\u7684\u90A3\u4E2A\u5757\u7EA7\u4F5C\u7528\u57DF\u3002</span>
<span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61</h3>`,5),mn={id:"\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u5B57\u9762\u503C\u521B\u5EFA\u5BF9\u8C61\u3002eslint-no-new-object",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u5B57\u9762\u503C\u521B\u5EFA\u5BF9\u8C61\u3002eslint-no-new-object","aria-hidden":"true"},"#",-1),hn=s(),_n=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),gn=s(" \u4F7F\u7528\u5B57\u9762\u503C\u521B\u5EFA\u5BF9\u8C61\u3002eslint: "),fn={href:"http://eslint.org/docs/rules/no-new-object.html",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"no-new-object",-1),wn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\u540D\u521B\u5EFA\u4E00\u4E2A\u5E26\u6709\u52A8\u6001\u5C5E\u6027\u540D\u7684\u5BF9\u8C61\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\u540D\u521B\u5EFA\u4E00\u4E2A\u5E26\u6709\u52A8\u6001\u5C5E\u6027\u540D\u7684\u5BF9\u8C61\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\u540D\u521B\u5EFA\u4E00\u4E2A\u5E26\u6709\u52A8\u6001\u5C5E\u6027\u540D\u7684\u5BF9\u8C61\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A\u8FD9\u53EF\u4EE5\u4F7F\u4F60\u5728\u540C\u4E00\u4E2A\u5730\u65B9\u5B9A\u4E49\u6240\u6709\u5BF9\u8C61\u5C5E\u6027\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">a key named </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;San Francisco&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;San Francisco&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),xn={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5BF9\u8C61\u65B9\u6CD5\u7B80\u5199\u3002eslint-object-shorthand",tabindex:"-1"},jn=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5BF9\u8C61\u65B9\u6CD5\u7B80\u5199\u3002eslint-object-shorthand","aria-hidden":"true"},"#",-1),qn=s(),Sn=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Nn=s(" \u7528\u5BF9\u8C61\u65B9\u6CD5\u7B80\u5199\u3002eslint: "),An={href:"http://eslint.org/docs/rules/object-shorthand.html",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"object-shorthand",-1),Cn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token function-variable function">addValue</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token comment">// \u5BF9\u8C61\u7684\u65B9\u6CD5</span>
  <span class="token function">addValue</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),In={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5C5E\u6027\u503C\u7F29\u5199\u3002eslint-object-shorthand",tabindex:"-1"},Tn=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5C5E\u6027\u503C\u7F29\u5199\u3002eslint-object-shorthand","aria-hidden":"true"},"#",-1),Bn=s(),En=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ln=s(" \u7528\u5C5E\u6027\u503C\u7F29\u5199\u3002eslint: "),zn={href:"http://eslint.org/docs/rules/object-shorthand.html",target:"_blank",rel:"noopener noreferrer"},Pn=n("code",null,"object-shorthand",-1),Dn=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A\u8FD9\u6837\u5199\u7684\u66F4\u5C11\u4E14\u53EF\u8BFB\u6027\u66F4\u9AD8\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> lukeSkywalker <span class="token operator">=</span> <span class="token string">&#39;Luke Skywalker&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">lukeSkywalker</span><span class="token operator">:</span> lukeSkywalker<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  lukeSkywalker<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u5C06\u4F60\u7684\u6240\u6709\u7F29\u5199\u653E\u5728\u5BF9\u8C61\u58F0\u660E\u7684\u524D\u9762\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5C06\u4F60\u7684\u6240\u6709\u7F29\u5199\u653E\u5728\u5BF9\u8C61\u58F0\u660E\u7684\u524D\u9762\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5C06\u4F60\u7684\u6240\u6709\u7F29\u5199\u653E\u5728\u5BF9\u8C61\u58F0\u660E\u7684\u524D\u9762\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A\u8FD9\u6837\u80FD\u66F4\u65B9\u4FBF\u5730\u77E5\u9053\u6709\u54EA\u4E9B\u5C5E\u6027\u7528\u4E86\u7F29\u5199\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> anakinSkywalker <span class="token operator">=</span> <span class="token string">&#39;Anakin Skywalker&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> lukeSkywalker <span class="token operator">=</span> <span class="token string">&#39;Luke Skywalker&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">episodeOne</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">twoJediWalkIntoACantina</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  lukeSkywalker<span class="token punctuation">,</span>
  <span class="token literal-property property">episodeThree</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mayTheFourth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  anakinSkywalker<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  lukeSkywalker<span class="token punctuation">,</span>
  anakinSkywalker<span class="token punctuation">,</span>
  <span class="token literal-property property">episodeOne</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">twoJediWalkIntoACantina</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">episodeThree</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mayTheFourth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Jn={id:"\u3010\u5F3A\u5236\u3011-\u53EA\u5BF9\u90A3\u4E9B\u65E0\u6548\u7684\u6807\u793A\u4F7F\u7528\u5F15\u53F7-\u3002eslint-quote-props",tabindex:"-1"},Fn=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u53EA\u5BF9\u90A3\u4E9B\u65E0\u6548\u7684\u6807\u793A\u4F7F\u7528\u5F15\u53F7-\u3002eslint-quote-props","aria-hidden":"true"},"#",-1),Mn=s(),Gn=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hn=s(" \u53EA\u5BF9\u90A3\u4E9B\u65E0\u6548\u7684\u6807\u793A\u4F7F\u7528\u5F15\u53F7 "),Rn=n("code",null,"''",-1),Vn=s("\u3002eslint: "),$n={href:"http://eslint.org/docs/rules/quote-props.html",target:"_blank",rel:"noopener noreferrer"},Wn=n("code",null,"quote-props",-1),Un=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u901A\u5E38\u6211\u4EEC\u8BA4\u4E3A\u8FD9\u79CD\u65B9\u5F0F\u4E3B\u89C2\u4E0A\u66F4\u6613\u8BFB\u3002\u4E0D\u4EC5\u4F18\u5316\u4E86\u4EE3\u7801\u9AD8\u4EAE\uFF0C\u800C\u4E14\u4E5F\u66F4\u5BB9\u6613\u88AB\u8BB8\u591A JS \u5F15\u64CE\u4F18\u5316\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> bad <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;foo&#39;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;bar&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;data-blah&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> good <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;data-blah&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u76F4\u63A5\u8C03\u7528-object-prototype\u4E0A\u7684\u65B9\u6CD5-\u5982-hasownproperty\u3001propertyisenumerable\u3001isprototypeof\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u76F4\u63A5\u8C03\u7528-object-prototype\u4E0A\u7684\u65B9\u6CD5-\u5982-hasownproperty\u3001propertyisenumerable\u3001isprototypeof\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4E0D\u8981\u76F4\u63A5\u8C03\u7528 <code>Object.prototype</code>\u4E0A\u7684\u65B9\u6CD5\uFF0C\u5982 <code>hasOwnProperty</code>\u3001<code>propertyIsEnumerable</code>\u3001<code>isPrototypeOf</code>\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5728\u4E00\u4E9B\u6709\u95EE\u9898\u7684\u5BF9\u8C61\u4E0A\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u80FD\u4F1A\u88AB\u5C4F\u853D\u6389\uFF0C\u5982\uFF1A<code>{ hasOwnProperty: false }</code> \u6216\u7A7A\u5BF9\u8C61 <code>Object.create(null)</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> has <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">;</span> <span class="token comment">// \u5728\u6A21\u5757\u4F5C\u7528\u57DF\u5185\u505A\u4E00\u6B21\u7F13\u5B58\u3002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* or */</span>
<span class="token keyword">import</span> has <span class="token keyword">from</span> <span class="token string">&#39;has&#39;</span><span class="token punctuation">;</span> <span class="token comment">// https://www.npmjs.com/package/has</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Yn={id:"\u3010\u5F3A\u5236\u3011-\u5BF9\u8C61\u6D45\u62F7\u8D1D\u65F6-\u66F4\u63A8\u8350\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26-\u5373-\u8FD0\u7B97\u7B26-\u800C\u4E0D\u662F-object-assign-\u3002\u83B7\u53D6\u5BF9\u8C61\u6307\u5B9A\u7684\u51E0\u4E2A\u5C5E\u6027\u65F6-\u7528\u5BF9\u8C61\u7684-rest-\u89E3\u6784\u8FD0\u7B97\u7B26-\u5373-\u8FD0\u7B97\u7B26-\u66F4\u597D\u3002eslint-prefer-object-spread",tabindex:"-1"},Qn=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5BF9\u8C61\u6D45\u62F7\u8D1D\u65F6-\u66F4\u63A8\u8350\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26-\u5373-\u8FD0\u7B97\u7B26-\u800C\u4E0D\u662F-object-assign-\u3002\u83B7\u53D6\u5BF9\u8C61\u6307\u5B9A\u7684\u51E0\u4E2A\u5C5E\u6027\u65F6-\u7528\u5BF9\u8C61\u7684-rest-\u89E3\u6784\u8FD0\u7B97\u7B26-\u5373-\u8FD0\u7B97\u7B26-\u66F4\u597D\u3002eslint-prefer-object-spread","aria-hidden":"true"},"#",-1),Xn=s(),Kn=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Zn=s(" \u5BF9\u8C61\u6D45\u62F7\u8D1D\u65F6\uFF0C\u66F4\u63A8\u8350\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08\u5373 "),ns=n("code",null,"...",-1),ss=s(" \u8FD0\u7B97\u7B26\uFF09\uFF0C\u800C\u4E0D\u662F "),as={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",target:"_blank",rel:"noopener noreferrer"},es=n("code",null,"Object.assign",-1),ts=s(),os=s("\u3002\u83B7\u53D6\u5BF9\u8C61\u6307\u5B9A\u7684\u51E0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u7528\u5BF9\u8C61\u7684 rest \u89E3\u6784\u8FD0\u7B97\u7B26\uFF08\u5373 "),ps=n("code",null,"...",-1),cs=s(" \u8FD0\u7B97\u7B26\uFF09\u66F4\u597D\u3002eslint: "),is={href:"https://eslint.org/docs/rules/prefer-object-spread",target:"_blank",rel:"noopener noreferrer"},ls=n("code",null,"prefer-object-spread",-1),us=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// very bad</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// this mutates \`original\` \u0CA0_\u0CA0</span>
<span class="token keyword">delete</span> copy<span class="token punctuation">.</span>a<span class="token punctuation">;</span> <span class="token comment">// so does this</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> original<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// copy =&gt; { a: 1, b: 2, c: 3 }</span>

<span class="token comment">// good es6 \u6269\u5C55\u8FD0\u7B97\u7B26 ...</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6D45\u62F7\u8D1D</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>original<span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// copy =&gt; { a: 1, b: 2, c: 3 }</span>

<span class="token comment">// rest \u89E3\u6784\u8FD0\u7B97\u7B26</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> <span class="token operator">...</span>noA <span class="token punctuation">}</span> <span class="token operator">=</span> copy<span class="token punctuation">;</span> <span class="token comment">// noA =&gt; { b: 2, c: 3 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3>`,2),rs={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u6570\u7EC4\u3002eslint-no-array-constructor",tabindex:"-1"},ds=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u6570\u7EC4\u3002eslint-no-array-constructor","aria-hidden":"true"},"#",-1),ks=s(),vs=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ms=s(" \u7528\u5B57\u9762\u91CF\u521B\u5EFA\u6570\u7EC4\u3002eslint: "),bs={href:"http://eslint.org/docs/rules/no-array-constructor.html",target:"_blank",rel:"noopener noreferrer"},hs=n("code",null,"no-array-constructor",-1),_s=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),gs={id:"\u3010\u5F3A\u5236\u3011-\u7528-array-push\u4EE3\u66FF\u76F4\u63A5\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u503C\u3002",tabindex:"-1"},fs=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-array-push\u4EE3\u66FF\u76F4\u63A5\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u503C\u3002","aria-hidden":"true"},"#",-1),ys=s(),ws=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),xs=s(" \u7528 "),js={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push",target:"_blank",rel:"noopener noreferrer"},qs=s("Array#push"),Ss=s("\u4EE3\u66FF\u76F4\u63A5\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u503C\u3002"),Ns=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> someStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
someStack<span class="token punctuation">[</span>someStack<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;abracadabra&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
someStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;abracadabra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u505A\u6570\u7EC4\u6D45\u62F7\u8D1D-\u7C7B\u4F3C\u4E0A\u9762\u7684\u5BF9\u8C61\u6D45\u62F7\u8D1D\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u505A\u6570\u7EC4\u6D45\u62F7\u8D1D-\u7C7B\u4F3C\u4E0A\u9762\u7684\u5BF9\u8C61\u6D45\u62F7\u8D1D\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u505A\u6570\u7EC4\u6D45\u62F7\u8D1D\uFF0C\u7C7B\u4F3C\u4E0A\u9762\u7684\u5BF9\u8C61\u6D45\u62F7\u8D1D\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> len <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> i<span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  itemsCopy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),As={id:"\u3010\u5F3A\u5236\u3011-\u7528-\u8FD0\u7B97\u7B26\u800C\u4E0D\u662F-array-from\u6765\u5C06\u4E00\u4E2A\u53EF\u8FED\u4EE3\u7684\u5BF9\u8C61\u8F6C\u6362\u6210\u6570\u7EC4\u3002",tabindex:"-1"},Os=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-\u8FD0\u7B97\u7B26\u800C\u4E0D\u662F-array-from\u6765\u5C06\u4E00\u4E2A\u53EF\u8FED\u4EE3\u7684\u5BF9\u8C61\u8F6C\u6362\u6210\u6570\u7EC4\u3002","aria-hidden":"true"},"#",-1),Cs=s(),Is=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ts=s(" \u7528 "),Bs=n("code",null,"...",-1),Es=s(" \u8FD0\u7B97\u7B26\u800C\u4E0D\u662F "),Ls={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from",target:"_blank",rel:"noopener noreferrer"},zs=n("code",null,"Array.from",-1),Ps=s("\u6765\u5C06\u4E00\u4E2A\u53EF\u8FED\u4EE3\u7684\u5BF9\u8C61\u8F6C\u6362\u6210\u6570\u7EC4\u3002"),Ds=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Js={id:"\u3010\u5F3A\u5236\u3011-\u7528-array-from\u5C06\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6210\u4E00\u4E2A\u6570\u7EC4\u3002",tabindex:"-1"},Fs=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-array-from\u5C06\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6210\u4E00\u4E2A\u6570\u7EC4\u3002","aria-hidden":"true"},"#",-1),Ms=s(),Gs=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hs=s(" \u7528 "),Rs={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from",target:"_blank",rel:"noopener noreferrer"},Vs=n("code",null,"Array.from",-1),$s=s("\u5C06\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6210\u4E00\u4E2A\u6570\u7EC4\u3002"),Ws=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrLike <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arrLike<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrLike<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Us={id:"\u3010\u5F3A\u5236\u3011-\u7528-array-from\u800C\u4E0D\u662F-\u8FD0\u7B97\u7B26\u53BB\u505A-map-\u904D\u5386\u3002-\u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6570\u7EC4\u3002",tabindex:"-1"},Ys=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-array-from\u800C\u4E0D\u662F-\u8FD0\u7B97\u7B26\u53BB\u505A-map-\u904D\u5386\u3002-\u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6570\u7EC4\u3002","aria-hidden":"true"},"#",-1),Qs=s(),Xs=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ks=s(" \u7528 "),Zs={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from",target:"_blank",rel:"noopener noreferrer"},na=n("code",null,"Array.from",-1),sa=s("\u800C\u4E0D\u662F "),aa=n("code",null,"...",-1),ea=s(" \u8FD0\u7B97\u7B26\u53BB\u505A map \u904D\u5386\u3002 \u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6570\u7EC4\u3002"),ta=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),oa={id:"\u3010\u5F3A\u5236\u3011-\u5728\u6570\u7EC4\u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u4F7F\u7528-return-\u8BED\u53E5\u3002\u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u6761\u8FD4\u56DE\u4E00\u4E2A\u8868\u8FBE\u5F0F\u7684\u8BED\u53E5\u7EC4\u6210-\u5E76\u4E14\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u6CA1\u6709\u526F\u4F5C\u7528-\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u5FFD\u7565-return-\u8BE6\u89C1-7-2\u3002eslint-array-callback-return",tabindex:"-1"},pa=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5728\u6570\u7EC4\u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u4F7F\u7528-return-\u8BED\u53E5\u3002\u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u6761\u8FD4\u56DE\u4E00\u4E2A\u8868\u8FBE\u5F0F\u7684\u8BED\u53E5\u7EC4\u6210-\u5E76\u4E14\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u6CA1\u6709\u526F\u4F5C\u7528-\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u5FFD\u7565-return-\u8BE6\u89C1-7-2\u3002eslint-array-callback-return","aria-hidden":"true"},"#",-1),ca=s(),ia=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),la=s(" \u5728\u6570\u7EC4\u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u4F7F\u7528 return \u8BED\u53E5\u3002\u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u6761\u8FD4\u56DE\u4E00\u4E2A\u8868\u8FBE\u5F0F\u7684\u8BED\u53E5\u7EC4\u6210\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u6CA1\u6709\u526F\u4F5C\u7528\uFF0C \u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u5FFD\u7565 return\uFF0C\u8BE6\u89C1 "),ua={href:"http://fe.dev.kdshc.com/docs.html#arrows--implicit-return",target:"_blank",rel:"noopener noreferrer"},ra=s("7.2"),da=s("\u3002eslint: "),ka={href:"http://eslint.org/docs/rules/array-callback-return",target:"_blank",rel:"noopener noreferrer"},va=n("code",null,"array-callback-return",-1),ma=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good \u51FD\u6570\u53EA\u6709\u4E00\u4E2A\u8BED\u53E5</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad - \u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C \u56E0\u4E3A\u5728\u7B2C\u4E00\u6B21\u8FED\u4EE3\u540E acc \u5C31\u53D8\u6210 undefined \u4E86</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> flatten <span class="token operator">=</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  acc<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> flatten<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> flatten <span class="token operator">=</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  acc<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> flatten<span class="token punctuation">;</span>
  <span class="token keyword">return</span> flatten<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
inbox<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> subject<span class="token punctuation">,</span> author <span class="token punctuation">}</span> <span class="token operator">=</span> msg<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>subject <span class="token operator">===</span> <span class="token string">&#39;Mockingbird&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> author <span class="token operator">===</span> <span class="token string">&#39;Harper Lee&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
inbox<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> subject<span class="token punctuation">,</span> author <span class="token punctuation">}</span> <span class="token operator">=</span> msg<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>subject <span class="token operator">===</span> <span class="token string">&#39;Mockingbird&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> author <span class="token operator">===</span> <span class="token string">&#39;Harper Lee&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4E00\u4E2A\u6570\u7EC4\u6709\u5F88\u591A\u884C-\u5728\u6570\u7EC4\u7684-\u540E\u548C-\u524D\u65AD\u884C\u3002\u8BF7\u770B\u4E0B\u9762\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4E00\u4E2A\u6570\u7EC4\u6709\u5F88\u591A\u884C-\u5728\u6570\u7EC4\u7684-\u540E\u548C-\u524D\u65AD\u884C\u3002\u8BF7\u770B\u4E0B\u9762\u793A\u4F8B" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5982\u679C\u4E00\u4E2A\u6570\u7EC4\u6709\u5F88\u591A\u884C\uFF0C\u5728\u6570\u7EC4\u7684 <code>[</code> \u540E\u548C <code>]</code> \u524D\u65AD\u884C\u3002\u8BF7\u770B\u4E0B\u9762\u793A\u4F8B\uFF1A</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> objectInArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> numberInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> objectInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> numberInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784" aria-hidden="true">#</a> \u89E3\u6784</h3>`,4),ba={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\u6765\u83B7\u53D6\u548C\u4F7F\u7528\u5BF9\u8C61\u67D0\u4E2A\u6216\u591A\u4E2A\u5C5E\u6027\u503C\u3002eslint-prefer-destructuring",tabindex:"-1"},ha=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\u6765\u83B7\u53D6\u548C\u4F7F\u7528\u5BF9\u8C61\u67D0\u4E2A\u6216\u591A\u4E2A\u5C5E\u6027\u503C\u3002eslint-prefer-destructuring","aria-hidden":"true"},"#",-1),_a=s(),ga=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),fa=s(" \u7528\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\u6765\u83B7\u53D6\u548C\u4F7F\u7528\u5BF9\u8C61\u67D0\u4E2A\u6216\u591A\u4E2A\u5C5E\u6027\u503C\u3002eslint: "),ya={href:"https://eslint.org/docs/rules/prefer-destructuring",target:"_blank",rel:"noopener noreferrer"},wa=n("code",null,"prefer-destructuring",-1),xa=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u89E3\u6784\u4F7F\u60A8\u4E0D\u5FC5\u4E3A\u8FD9\u4E9B\u5C5E\u6027\u521B\u5EFA\u4E34\u65F6\u5F15\u7528\uFF0C\u5E76\u4E14\u907F\u514D\u91CD\u590D\u5F15\u7528\u5BF9\u8C61\u3002\u91CD\u590D\u5F15\u7528\u5BF9\u8C61\u5C06\u9020\u6210\u4EE3\u7801\u91CD\u590D\u3001\u589E\u52A0\u9605\u8BFB\u6B21\u6570\u3001\u63D0\u9AD8\u72AF\u9519\u6982\u7387\u3002 Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> firstName <span class="token operator">=</span> user<span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>
  <span class="token keyword">const</span> lastName <span class="token operator">=</span> user<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span> <span class="token operator">=</span> user<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// best</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),ja={id:"\u3010\u5F3A\u5236\u3011-\u7528\u6570\u7EC4\u89E3\u6784\u3002eslint-prefer-destructuring",tabindex:"-1"},qa=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u6570\u7EC4\u89E3\u6784\u3002eslint-prefer-destructuring","aria-hidden":"true"},"#",-1),Sa=s(),Na=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Aa=s(" \u7528\u6570\u7EC4\u89E3\u6784\u3002eslint: "),Oa={href:"https://eslint.org/docs/rules/prefer-destructuring",target:"_blank",rel:"noopener noreferrer"},Ca=n("code",null,"prefer-destructuring",-1),Ia=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> first <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> second <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>first<span class="token punctuation">,</span> second<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u591A\u4E2A\u8FD4\u56DE\u503C\u7528\u5BF9\u8C61\u7684\u89E3\u6784-\u800C\u4E0D\u662F\u6570\u7EC4\u89E3\u6784\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u591A\u4E2A\u8FD4\u56DE\u503C\u7528\u5BF9\u8C61\u7684\u89E3\u6784-\u800C\u4E0D\u662F\u6570\u7EC4\u89E3\u6784\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u591A\u4E2A\u8FD4\u56DE\u503C\u7528\u5BF9\u8C61\u7684\u89E3\u6784\uFF0C\u800C\u4E0D\u662F\u6570\u7EC4\u89E3\u6784\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4F60\u53EF\u4EE5\u5728\u540E\u671F\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\u6216\u8005\u53D8\u6362\u53D8\u91CF\u7684\u987A\u5E8F\u800C\u4E0D\u4F1A\u7834\u574F\u539F\u6709\u7684\u5F15\u7528\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7136\u540E\u5C31\u662F\u89C1\u8BC1\u5947\u8FF9\u7684\u65F6\u523B</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528\u8005\u9700\u8981\u60F3\u4E00\u60F3\u8FD4\u56DE\u503C\u7684\u987A\u5E8F</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>left<span class="token punctuation">,</span> __<span class="token punctuation">,</span> top<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// oops\uFF0C\u5947\u8FF9\u53C8\u53D1\u751F\u4E86</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528\u8005\u53EA\u9700\u8981\u9009\u62E9\u4ED6\u60F3\u7528\u7684\u503C\u5C31\u597D\u4E86</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> top <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h3>`,5),Ta={id:"\u3010\u5F3A\u5236\u3011-\u5B57\u7B26\u4E32\u5E94\u4F7F\u7528\u5355\u5F15\u53F7-\u3002eslint-quotes",tabindex:"-1"},Ba=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5B57\u7B26\u4E32\u5E94\u4F7F\u7528\u5355\u5F15\u53F7-\u3002eslint-quotes","aria-hidden":"true"},"#",-1),Ea=s(),La=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),za=s(" \u5B57\u7B26\u4E32\u5E94\u4F7F\u7528\u5355\u5F15\u53F7 "),Pa=n("code",null,"''",-1),Da=s(" \u3002eslint: "),Ja={href:"https://eslint.org/docs/rules/quotes.html",target:"_blank",rel:"noopener noreferrer"},Fa=n("code",null,"quotes",-1),Ma=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&quot;Capt. Janeway&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Capt. Janeway</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Capt. Janeway&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u8D85\u8FC7-100-\u4E2A\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\u4E0D\u5E94\u8BE5\u7528\u5B57\u7B26\u4E32\u8FDE\u63A5\u6210\u591A\u884C\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u8D85\u8FC7-100-\u4E2A\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\u4E0D\u5E94\u8BE5\u7528\u5B57\u7B26\u4E32\u8FDE\u63A5\u6210\u591A\u884C\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u8D85\u8FC7 100 \u4E2A\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\u4E0D\u5E94\u8BE5\u7528\u5B57\u7B26\u4E32\u8FDE\u63A5\u6210\u591A\u884C\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5B57\u7B26\u4E32\u6298\u884C\u589E\u52A0\u7F16\u5199\u96BE\u5EA6\u4E14\u4E0D\u6613\u88AB\u641C\u7D22\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">&#39;This is a super long error that was thrown because \\
    of Batman. When you stop to think about how Batman had anything to do \\
    with this, you would get nowhere \\
fast.&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">&#39;This is a super long error that was thrown because &#39;</span> <span class="token operator">+</span>
    <span class="token string">&#39;of Batman. When you stop to think about how Batman had anything to do &#39;</span> <span class="token operator">+</span>
<span class="token string">&#39;with this, you would get nowhere fast.&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">&#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ga={id:"\u3010\u63A8\u8350\u3011\u5F53\u9700\u8981\u52A8\u6001\u751F\u6210\u5B57\u7B26\u4E32\u65F6-\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\u800C\u4E0D\u662F\u5B57\u7B26\u4E32\u62FC\u63A5\u3002eslint-prefer-templatetemplate-curly-spacing",tabindex:"-1"},Ha=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5F53\u9700\u8981\u52A8\u6001\u751F\u6210\u5B57\u7B26\u4E32\u65F6-\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\u800C\u4E0D\u662F\u5B57\u7B26\u4E32\u62FC\u63A5\u3002eslint-prefer-templatetemplate-curly-spacing","aria-hidden":"true"},"#",-1),Ra=s(),Va=n("code",null,"\u3010\u63A8\u8350\u3011",-1),$a=s("\u5F53\u9700\u8981\u52A8\u6001\u751F\u6210\u5B57\u7B26\u4E32\u65F6\uFF0C\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\u800C\u4E0D\u662F\u5B57\u7B26\u4E32\u62FC\u63A5\u3002eslint: "),Wa={href:"https://eslint.org/docs/rules/prefer-template.html",target:"_blank",rel:"noopener noreferrer"},Ua=n("code",null,"prefer-template",-1),Ya={href:"https://eslint.org/docs/rules/template-curly-spacing",target:"_blank",rel:"noopener noreferrer"},Qa=n("code",null,"template-curly-spacing",-1),Xa=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u6A21\u677F\u5B57\u7B26\u4E32\u66F4\u5177\u53EF\u8BFB\u6027\u3001\u591A\u884C\u8BED\u6CD5\u66F4\u7B80\u6D01\u4EE5\u53CA\u66F4\u65B9\u4FBF\u63D2\u5165\u53D8\u91CF\u5230\u5B57\u7B26\u4E32\u91CC\u5934\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;How are you, &#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;?&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;How are you, &#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">&#39;?&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">How are you, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> name <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">How are you, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ka={id:"\u6C38\u8FDC\u4E0D\u8981\u4F7F\u7528-eval-\u8BE5\u65B9\u6CD5\u6709\u592A\u591A\u6F0F\u6D1E\u3002eslint-no-eval",tabindex:"-1"},Za=n("a",{class:"header-anchor",href:"#\u6C38\u8FDC\u4E0D\u8981\u4F7F\u7528-eval-\u8BE5\u65B9\u6CD5\u6709\u592A\u591A\u6F0F\u6D1E\u3002eslint-no-eval","aria-hidden":"true"},"#",-1),ne=s(" \u6C38\u8FDC\u4E0D\u8981\u4F7F\u7528 "),se=n("code",null,"eval()",-1),ae=s("\uFF0C\u8BE5\u65B9\u6CD5\u6709\u592A\u591A\u6F0F\u6D1E\u3002eslint: "),ee={href:"https://eslint.org/docs/rules/no-eval",target:"_blank",rel:"noopener noreferrer"},te=n("code",null,"no-eval",-1),oe={id:"\u4E0D\u8981\u4F7F\u7528\u4E0D\u5FC5\u8981\u7684\u8F6C\u4E49\u5B57\u7B26\u3002eslint-no-useless-escape",tabindex:"-1"},pe=n("a",{class:"header-anchor",href:"#\u4E0D\u8981\u4F7F\u7528\u4E0D\u5FC5\u8981\u7684\u8F6C\u4E49\u5B57\u7B26\u3002eslint-no-useless-escape","aria-hidden":"true"},"#",-1),ce=s(" \u4E0D\u8981\u4F7F\u7528\u4E0D\u5FC5\u8981\u7684\u8F6C\u4E49\u5B57\u7B26\u3002eslint: "),ie={href:"http://eslint.org/docs/rules/no-useless-escape",target:"_blank",rel:"noopener noreferrer"},le=n("code",null,"no-useless-escape",-1),ue=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u53CD\u659C\u7EBF\u53EF\u8BFB\u6027\u5DEE\uFF0C\u56E0\u6B64\u4EC5\u5F53\u5FC5\u8981\u65F6\u624D\u4F7F\u7528\u5B83\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;\\&#39;this\\&#39; \\i\\s \\&quot;quoted\\&quot;&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;\\&#39;this\\&#39; is &quot;quoted&quot;&#39;</span><span class="token punctuation">;</span>

<span class="token comment">//best</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">my name is &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h3>`,3),re={id:"\u3010\u63A8\u8350\u3011\u4F7F\u7528\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u51FD\u6570\u58F0\u660E\u3002eslint-func-style",tabindex:"-1"},de=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u4F7F\u7528\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u51FD\u6570\u58F0\u660E\u3002eslint-func-style","aria-hidden":"true"},"#",-1),ke=s(),ve=n("code",null,"\u3010\u63A8\u8350\u3011",-1),me=s("\u4F7F\u7528\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u51FD\u6570\u58F0\u660E\u3002eslint: "),be={href:"http://eslint.org/docs/rules/func-style",target:"_blank",rel:"noopener noreferrer"},he=n("code",null,"func-style",-1),_e=n("blockquote",null,[n("p",null,"\u51FD\u6570\u8868\u8FBE\u5F0F\uFF1A const func = function () {}")],-1),ge=n("blockquote",null,[n("p",null,"\u51FD\u6570\u58F0\u660E\uFF1A function func () {}")],-1),fe=s("\u4E3A\u4EC0\u4E48\uFF1F\u51FD\u6570\u58F0\u660E\u4F1A\u53D1\u751F\u63D0\u5347\uFF0C\u8FD9\u610F\u5473\u7740\u5728\u4E00\u4E2A\u6587\u4EF6\u91CC\u51FD\u6570\u5F88\u5BB9\u6613\u5728\u5176\u88AB\u5B9A\u4E49\u4E4B\u524D\u5C31\u88AB\u5F15\u7528\u4E86\u3002\u8FD9\u6837\u4F24\u5BB3\u4E86\u4EE3\u7801\u53EF\u8BFB\u6027\u548C\u53EF\u7EF4\u62A4\u6027\u3002\u5982\u679C\u4F60\u53D1\u73B0\u4E00\u4E2A\u51FD\u6570\u53C8\u5927\u53C8\u590D\u6742\uFF0C\u4E14\u8FD9\u4E2A\u51FD\u6570\u59A8\u788D\u4E86\u8FD9\u4E2A\u6587\u4EF6\u5176\u4ED6\u90E8\u5206\u7684\u7406\u89E3\u6027\uFF0C\u4F60\u5E94\u5F53\u5355\u72EC\u628A\u8FD9\u4E2A\u51FD\u6570\u63D0\u53D6\u6210\u4E00\u4E2A\u5355\u72EC\u7684\u6A21\u5757\u3002\u4E0D\u7BA1\u8FD9\u4E2A\u540D\u5B57\u662F\u4E0D\u662F\u7531\u4E00\u4E2A\u786E\u5B9A\u7684\u53D8\u91CF\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u522B\u5FD8\u4E86\u7ED9\u8868\u8FBE\u5F0F\u6E05\u6670\u7684\u547D\u540D\uFF08\u8FD9\u5728\u73B0\u4EE3\u6D4F\u89C8\u5668\u548C\u7C7B\u4F3C babel \u7F16\u8BD1\u5668\u4E2D\u5F88\u5E38\u89C1\uFF09\u3002\u8FD9\u6D88\u9664\u4E86\u7531\u533F\u540D\u51FD\u6570\u5728\u9519\u8BEF\u8C03\u7528\u6808\u4EA7\u751F\u7684\u6240\u6709\u5047\u8BBE\u3002 ("),ye={href:"https://github.com/airbnb/javascript/issues/794",target:"_blank",rel:"noopener noreferrer"},we=s("\u8BA8\u8BBA "),xe=s(")"),je=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&gt; \u8BD1\u8005\u6CE8\uFF1A\u8FD9\u4E00\u6BB5\u53EF\u80FD\u4E0D\u662F\u5F88\u597D\u7406\u89E3\uFF0C\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u4F7F\u7528\u51FD\u6570\u58F0\u660E\u4F1A\u53D1\u751F\u63D0\u5347\uFF08\u5373\u5728\u51FD\u6570\u88AB\u58F0\u660E\u4E4B\u524D\u5C31\u53EF\u4EE5\u4F7F\u7528\uFF09\uFF0C\u4F7F\u7528\u533F\u540D\u51FD\u6570\u4F1A\u5BFC\u81F4\u96BE\u4EE5\u8FFD\u8E2A\u9519\u8BEF\u3002[\u8FD9\u4E00\u6BB5\u82F1\u6587\u539F\u6587\u5728\u8FD9](https://github.com/airbnb/javascript#functions)\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token comment">// lexical name distinguished from the variable-referenced invocation(s)</span>
<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F\u540D\u548C\u58F0\u660E\u7684\u51FD\u6570\u540D\u662F\u4E0D\u4E00\u6837\u7684</span>
<span class="token keyword">const</span> <span class="token function-variable function">short</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">longUniqueMoreDescriptiveLexicalFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),qe={id:"\u3010\u5F3A\u5236\u3011-\u628A\u7ACB\u5373\u6267\u884C\u51FD\u6570\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u3002eslint-wrap-iife",tabindex:"-1"},Se=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u628A\u7ACB\u5373\u6267\u884C\u51FD\u6570\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u3002eslint-wrap-iife","aria-hidden":"true"},"#",-1),Ne=s(),Ae=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Oe=s(" \u628A\u7ACB\u5373\u6267\u884C\u51FD\u6570\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u3002eslint: "),Ce={href:"http://eslint.org/docs/rules/wrap-iife.html",target:"_blank",rel:"noopener noreferrer"},Ie=n("code",null,"wrap-iife",-1),Te=t(`<blockquote><p>\u7ACB\u5373\u6267\u884C\u51FD\u6570\uFF1AImmediately Invoked Function expression = IIFE\u3002 \u4E3A\u4EC0\u4E48\uFF1F\u4E00\u4E2A\u7ACB\u5373\u8C03\u7528\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u662F\u4E00\u4E2A\u5355\u5143 - \u628A\u5B83\u548C\u5B83\u7684\u8C03\u7528\u8005\uFF08\u5706\u62EC\u53F7\uFF09\u5305\u88F9\u8D77\u6765\uFF0C\u4F7F\u4EE3\u7801\u8BFB\u8D77\u6765\u66F4\u6E05\u6670\u3002 \u53E6\u5916\uFF0C\u5728\u6A21\u5757\u5316\u4E16\u754C\u91CC\uFF0C\u4F60\u51E0\u4E4E\u7528\u4E0D\u7740 IIFE\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// immediately-invoked function expression (IIFE)</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Welcome to the Internet. Please follow me.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Be={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5728\u975E\u51FD\u6570\u5757-if\u3001while-\u7B49-\u5185\u58F0\u660E\u51FD\u6570\u3002\u628A\u8FD9\u4E2A\u51FD\u6570\u5206\u914D\u7ED9\u4E00\u4E2A\u53D8\u91CF\u3002\u6D4F\u89C8\u5668\u4F1A\u5141\u8BB8\u4F60\u8FD9\u6837\u505A-\u4F46\u4E0D\u540C\u6D4F\u89C8\u5668\u7684\u89E3\u6790\u65B9\u5F0F\u4E0D\u540C-\u8FD9\u662F\u4E00\u4E2A\u574F\u6D88\u606F\u3002eslint-no-loop-func",tabindex:"-1"},Ee=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5728\u975E\u51FD\u6570\u5757-if\u3001while-\u7B49-\u5185\u58F0\u660E\u51FD\u6570\u3002\u628A\u8FD9\u4E2A\u51FD\u6570\u5206\u914D\u7ED9\u4E00\u4E2A\u53D8\u91CF\u3002\u6D4F\u89C8\u5668\u4F1A\u5141\u8BB8\u4F60\u8FD9\u6837\u505A-\u4F46\u4E0D\u540C\u6D4F\u89C8\u5668\u7684\u89E3\u6790\u65B9\u5F0F\u4E0D\u540C-\u8FD9\u662F\u4E00\u4E2A\u574F\u6D88\u606F\u3002eslint-no-loop-func","aria-hidden":"true"},"#",-1),Le=s(),ze=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Pe=s(" \u4E0D\u8981\u5728\u975E\u51FD\u6570\u5757\uFF08"),De=n("code",null,"if",-1),Je=s("\u3001"),Fe=n("code",null,"while",-1),Me=s(" \u7B49\uFF09\u5185\u58F0\u660E\u51FD\u6570\u3002\u628A\u8FD9\u4E2A\u51FD\u6570\u5206\u914D\u7ED9\u4E00\u4E2A\u53D8\u91CF\u3002\u6D4F\u89C8\u5668\u4F1A\u5141\u8BB8\u4F60\u8FD9\u6837\u505A\uFF0C\u4F46\u4E0D\u540C\u6D4F\u89C8\u5668\u7684\u89E3\u6790\u65B9\u5F0F\u4E0D\u540C\uFF0C\u8FD9\u662F\u4E00\u4E2A\u574F\u6D88\u606F\u3002eslint: "),Ge={href:"http://eslint.org/docs/rules/no-loop-func.html",target:"_blank",rel:"noopener noreferrer"},He=n("code",null,"no-loop-func",-1),Re=t(`<p><em>\u6CE8\u610F</em>*\uFF1AECMA-262 \u4E2D\u5BF9\u5757\uFF08<code>block</code>\uFF09\u7684\u5B9A\u4E49\u662F\uFF1A \u4E00\u7CFB\u5217\u7684\u8BED\u53E5\u3002\u4F46\u662F\u51FD\u6570\u58F0\u660E\u4E0D\u662F\u4E00\u4E2A\u8BED\u53E5\uFF0C \u51FD\u6570\u8868\u8FBE\u5F0F\u662F\u4E00\u4E2A\u8BED\u53E5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>currentUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Nope.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">let</span> test<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>currentUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Yup.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528-arguments-\u547D\u540D\u53C2\u6570\u3002\u4ED6\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6BCF\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u81EA\u5E26\u7684-arguments-\u5BF9\u8C61-\u8FD9\u4F1A\u5BFC\u81F4\u51FD\u6570\u81EA\u5E26\u7684-arguments-\u503C\u88AB\u8986\u76D6\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528-arguments-\u547D\u540D\u53C2\u6570\u3002\u4ED6\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6BCF\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u81EA\u5E26\u7684-arguments-\u5BF9\u8C61-\u8FD9\u4F1A\u5BFC\u81F4\u51FD\u6570\u81EA\u5E26\u7684-arguments-\u503C\u88AB\u8986\u76D6\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4E0D\u8981\u7528 <code>arguments</code> \u547D\u540D\u53C2\u6570\u3002\u4ED6\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6BCF\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u81EA\u5E26\u7684 <code>arguments</code> \u5BF9\u8C61\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u51FD\u6570\u81EA\u5E26\u7684 <code>arguments</code> \u503C\u88AB\u8986\u76D6\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> arguments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ve={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528-arguments-\u7528\u6536\u96C6\u53C2\u6570\u8BED\u6CD5-\u4EE3\u66FF\u3002eslint-prefer-rest-params",tabindex:"-1"},$e=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528-arguments-\u7528\u6536\u96C6\u53C2\u6570\u8BED\u6CD5-\u4EE3\u66FF\u3002eslint-prefer-rest-params","aria-hidden":"true"},"#",-1),We=s(),Ue=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ye=s(" \u4E0D\u8981\u4F7F\u7528 "),Qe=n("code",null,"arguments",-1),Xe=s("\uFF0C\u7528\u6536\u96C6\u53C2\u6570\u8BED\u6CD5 "),Ke=n("code",null,"...",-1),Ze=s(" \u4EE3\u66FF\u3002eslint: "),nt={href:"http://eslint.org/docs/rules/prefer-rest-params",target:"_blank",rel:"noopener noreferrer"},st=n("code",null,"prefer-rest-params",-1),at=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F<code>...</code> \u660E\u786E\u4F60\u60F3\u7528\u54EA\u4E2A\u53C2\u6570\u3002\u800C\u4E14\u6536\u96C6\u53C2\u6570\u662F\u771F\u6570\u7EC4\uFF0C\u800C\u4E0D\u662F\u7C7B\u4F3C\u6570\u7EC4\u7684 <code>arguments</code>\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u7528\u9ED8\u8BA4\u53C2\u6570\u8BED\u6CD5\u800C\u4E0D\u662F\u5728\u51FD\u6570\u91CC\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u7528\u9ED8\u8BA4\u53C2\u6570\u8BED\u6CD5\u800C\u4E0D\u662F\u5728\u51FD\u6570\u91CC\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u7528\u9ED8\u8BA4\u53C2\u6570\u8BED\u6CD5\u800C\u4E0D\u662F\u5728\u51FD\u6570\u91CC\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// really bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0D\uFF01\u6211\u4EEC\u4E0D\u8BE5\u4FEE\u6539 arguments</span>
  <span class="token comment">// \u7B2C\u4E8C\uFF1A\u5982\u679C opts \u7684\u503C\u4E3A false, \u5B83\u4F1A\u88AB\u8D4B\u503C\u4E3A {}</span>
  <span class="token comment">// \u867D\u7136\u4F60\u60F3\u8FD9\u4E48\u5199\uFF0C\u4F46\u662F\u8FD9\u4E2A\u4F1A\u5E26\u6765\u4E00\u4E9B\u5FAE\u5999\u7684 bug\u3002</span>
  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// still bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u907F\u514D\u9ED8\u8BA4\u53C2\u6570\u7684\u526F\u4F5C\u7528\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u9ED8\u8BA4\u53C2\u6570\u7684\u526F\u4F5C\u7528\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u907F\u514D\u9ED8\u8BA4\u53C2\u6570\u7684\u526F\u4F5C\u7528\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4ED6\u4F1A\u4EE4\u4EBA\u8FF7\u60D1\u4E0D\u89E3\uFF0C\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\uFF0Ca \u5230\u5E95\u7B49\u4E8E\u51E0\uFF0C\u8FD9\u4E2A\u9700\u8981\u60F3\u4E00\u4E0B\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token parameter">a <span class="token operator">=</span> b<span class="token operator">++</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),et={id:"\u3010\u63A8\u8350\u3011\u628A\u9ED8\u8BA4\u53C2\u6570\u8D4B\u503C\u653E\u5728\u6700\u540E\u3002eslint-default-param-last",tabindex:"-1"},tt=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u628A\u9ED8\u8BA4\u53C2\u6570\u8D4B\u503C\u653E\u5728\u6700\u540E\u3002eslint-default-param-last","aria-hidden":"true"},"#",-1),ot=s(),pt=n("code",null,"\u3010\u63A8\u8350\u3011",-1),ct=s("\u628A\u9ED8\u8BA4\u53C2\u6570\u8D4B\u503C\u653E\u5728\u6700\u540E\u3002eslint: "),it={href:"https://eslint.org/docs/rules/default-param-last",target:"_blank",rel:"noopener noreferrer"},lt=n("code",null,"default-param-last",-1),ut=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),rt={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u51FD\u6570\u6784\u9020\u5668\u521B\u5EFA\u51FD\u6570\u3002eslint-no-new-func",tabindex:"-1"},dt=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u51FD\u6570\u6784\u9020\u5668\u521B\u5EFA\u51FD\u6570\u3002eslint-no-new-func","aria-hidden":"true"},"#",-1),kt=s(),vt=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),mt=s(" \u4E0D\u8981\u7528\u51FD\u6570\u6784\u9020\u5668\u521B\u5EFA\u51FD\u6570\u3002eslint: "),bt={href:"http://eslint.org/docs/rules/no-new-func",target:"_blank",rel:"noopener noreferrer"},ht=n("code",null,"no-new-func",-1),_t=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u521B\u5EFA\u51FD\u6570\u5C06\u7C7B\u4F3C\u4E8E\u5B57\u7B26\u4E32 eval()\uFF0C\u5B58\u5728\u6F0F\u6D1E\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> add <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a + b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// still bad</span>
<span class="token keyword">var</span> subtract <span class="token operator">=</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a - b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),gt={id:"\u3010\u5F3A\u5236\u3011-\u51FD\u6570\u5B9A\u4E49\u90E8\u5206\u8981\u6709\u7A7A\u683C\u3002eslint-space-before-function-parenspace-before-blocks",tabindex:"-1"},ft=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u51FD\u6570\u5B9A\u4E49\u90E8\u5206\u8981\u6709\u7A7A\u683C\u3002eslint-space-before-function-parenspace-before-blocks","aria-hidden":"true"},"#",-1),yt=s(),wt=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),xt=s(" \u51FD\u6570\u5B9A\u4E49\u90E8\u5206\u8981\u6709\u7A7A\u683C\u3002eslint: "),jt={href:"http://eslint.org/docs/rules/space-before-function-paren",target:"_blank",rel:"noopener noreferrer"},qt=n("code",null,"space-before-function-paren",-1),St={href:"http://eslint.org/docs/rules/space-before-blocks",target:"_blank",rel:"noopener noreferrer"},Nt=n("code",null,"space-before-blocks",-1),At=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u7EDF\u4E00\u6027\u597D\uFF0C\u800C\u4E14\u5728\u4F60\u6DFB\u52A0/\u5220\u9664\u4E00\u4E2A\u540D\u5B57\u7684\u65F6\u5019\u4E0D\u9700\u8981\u6DFB\u52A0/\u5220\u9664\u7A7A\u683C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">h</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ot={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4FEE\u6539\u53C2\u6570-eslint-no-param-reassign",tabindex:"-1"},Ct=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4FEE\u6539\u53C2\u6570-eslint-no-param-reassign","aria-hidden":"true"},"#",-1),It=s(),Tt=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Bt=s(" \u4E0D\u8981\u4FEE\u6539\u53C2\u6570. eslint: "),Et={href:"http://eslint.org/docs/rules/no-param-reassign.html",target:"_blank",rel:"noopener noreferrer"},Lt=n("code",null,"no-param-reassign",-1),zt=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u64CD\u4F5C\u53C2\u6570\u5BF9\u8C61\u5BF9\u539F\u59CB\u8C03\u7528\u8005\u4F1A\u5BFC\u81F4\u610F\u60F3\u4E0D\u5230\u7684\u526F\u4F5C\u7528\u3002\u5C31\u662F\u4E0D\u8981\u6539\u53C2\u6570\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4FDD\u7559\u53C2\u6570\u539F\u59CB\u503C\u548C\u6570\u636E\u7ED3\u6784\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  obj<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> obj<span class="token punctuation">.</span>key <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Pt={id:"\u3010\u63A8\u8350\u3011\u4E0D\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002eslint-no-param-reassign",tabindex:"-1"},Dt=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u4E0D\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002eslint-no-param-reassign","aria-hidden":"true"},"#",-1),Jt=s(),Ft=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Mt=s("\u4E0D\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002eslint: "),Gt={href:"http://eslint.org/docs/rules/no-param-reassign.html",target:"_blank",rel:"noopener noreferrer"},Ht=n("code",null,"no-param-reassign",-1),Rt=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u4F1A\u5BFC\u81F4\u610F\u5916\u884C\u4E3A\uFF0C\u5C24\u5176\u662F\u5BF9 <code>arguments</code>\u3002\u8FD9\u4E5F\u4F1A\u5BFC\u81F4\u4F18\u5316\u95EE\u9898\uFF0C\u7279\u522B\u662F\u5728 V8 \u5F15\u64CE\u91CC\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> a <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f4</span><span class="token punctuation">(</span><span class="token parameter">a <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Vt={id:"\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u62D3\u5C55\u8FD0\u7B97\u7B26\u8C03\u7528\u591A\u53C2\u6570\u7684\u51FD\u6570\u3002eslint-prefer-spread",tabindex:"-1"},$t=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4F7F\u7528\u62D3\u5C55\u8FD0\u7B97\u7B26\u8C03\u7528\u591A\u53C2\u6570\u7684\u51FD\u6570\u3002eslint-prefer-spread","aria-hidden":"true"},"#",-1),Wt=s(),Ut=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Yt=s(" \u4F7F\u7528\u62D3\u5C55\u8FD0\u7B97\u7B26\u8C03\u7528\u591A\u53C2\u6570\u7684\u51FD\u6570\u3002eslint: "),Qt={href:"http://eslint.org/docs/rules/prefer-spread",target:"_blank",rel:"noopener noreferrer"},Xt=n("code",null,"prefer-spread",-1),Kt=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u6837\u66F4\u6E05\u6670\uFF0C\u4F60\u4E0D\u5FC5\u63D0\u4F9B\u4E0A\u4E0B\u6587\uFF08\u5373\u6307\u5B9A this \u503C\uFF09\uFF0C\u800C\u4E14\u4F60\u4E0D\u80FD\u8F7B\u6613\u5730\u7528 <code>apply</code> \u6765\u7EC4\u6210 <code>new</code>\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Date<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u8C03\u7528\u6216\u8005\u7F16\u5199\u4E00\u4E2A\u5305\u542B\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u7684\u7F29\u8FDB-\u5E94\u8BE5\u50CF\u8FD9\u4E2A\u6307\u5357\u91CC\u7684\u5176\u4ED6\u591A\u884C\u4EE3\u7801\u5199\u6CD5\u4E00\u6837\u2014\u2014\u5373\u6BCF\u884C\u53EA\u5305\u542B\u4E00\u4E2A\u53C2\u6570-\u6BCF\u884C\u9017\u53F7\u7ED3\u5C3E\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u8C03\u7528\u6216\u8005\u7F16\u5199\u4E00\u4E2A\u5305\u542B\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u7684\u7F29\u8FDB-\u5E94\u8BE5\u50CF\u8FD9\u4E2A\u6307\u5357\u91CC\u7684\u5176\u4ED6\u591A\u884C\u4EE3\u7801\u5199\u6CD5\u4E00\u6837\u2014\u2014\u5373\u6BCF\u884C\u53EA\u5305\u542B\u4E00\u4E2A\u53C2\u6570-\u6BCF\u884C\u9017\u53F7\u7ED3\u5C3E\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u8C03\u7528\u6216\u8005\u7F16\u5199\u4E00\u4E2A\u5305\u542B\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u7684\u7F29\u8FDB\uFF0C\u5E94\u8BE5\u50CF\u8FD9\u4E2A\u6307\u5357\u91CC\u7684\u5176\u4ED6\u591A\u884C\u4EE3\u7801\u5199\u6CD5\u4E00\u6837\u2014\u2014\u5373\u6BCF\u884C\u53EA\u5305\u542B\u4E00\u4E2A\u53C2\u6570\uFF0C\u6BCF\u884C\u9017\u53F7\u7ED3\u5C3E\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">bar<span class="token punctuation">,</span>
             baz<span class="token punctuation">,</span>
             quux</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good \u7F29\u8FDB\u4E0D\u8981\u592A\u8FC7\u5206</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>
  <span class="token parameter">bar<span class="token punctuation">,</span>
  baz<span class="token punctuation">,</span>
  quux<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span>
  bar<span class="token punctuation">,</span>
  baz<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  foo<span class="token punctuation">,</span>
  bar<span class="token punctuation">,</span>
  baz<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h3>`,5),Zt={id:"\u3010\u5F3A\u5236\u3011-\u5F53\u4F60\u4E00\u5B9A\u8981\u7528\u51FD\u6570\u8868\u8FBE\u5F0F-\u5728\u56DE\u8C03\u51FD\u6570\u91CC-\u7684\u65F6\u5019-\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u3002-eslint-prefer-arrow-callback-arrow-spacing",tabindex:"-1"},no=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5F53\u4F60\u4E00\u5B9A\u8981\u7528\u51FD\u6570\u8868\u8FBE\u5F0F-\u5728\u56DE\u8C03\u51FD\u6570\u91CC-\u7684\u65F6\u5019-\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u3002-eslint-prefer-arrow-callback-arrow-spacing","aria-hidden":"true"},"#",-1),so=s(),ao=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),eo=s(" \u5F53\u4F60\u4E00\u5B9A\u8981\u7528\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08\u5728\u56DE\u8C03\u51FD\u6570\u91CC\uFF09\u7684\u65F6\u5019\uFF0C\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u3002 eslint: "),to={href:"http://eslint.org/docs/rules/prefer-arrow-callback.html",target:"_blank",rel:"noopener noreferrer"},oo=n("code",null,"prefer-arrow-callback",-1),po=s(", "),co={href:"http://eslint.org/docs/rules/arrow-spacing.html",target:"_blank",rel:"noopener noreferrer"},io=n("code",null,"arrow-spacing",-1),lo=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u7BAD\u5934\u51FD\u6570\u4E2D\u7684 <code>this</code> \u4E0E\u5B9A\u4E49\u8BE5\u51FD\u6570\u7684\u4E0A\u4E0B\u6587\u4E2D\u7684 <code>this</code> \u4E00\u81F4\uFF0C\u8FD9\u901A\u5E38\u624D\u662F\u4F60\u60F3\u8981\u7684\u3002\u800C\u4E14\u7BAD\u5934\u51FD\u6570\u662F\u66F4\u7B80\u6D01\u7684\u8BED\u6CD5\u3002</p></blockquote><blockquote><p>\u4EC0\u4E48\u65F6\u5019\u4E0D\u7528\u7BAD\u5934\u51FD\u6570\uFF1A\u5982\u679C\u4F60\u7684\u51FD\u6570\u903B\u8F91\u8F83\u590D\u6742\uFF0C\u4F60\u5E94\u8BE5\u628A\u5B83\u5355\u72EC\u5199\u5165\u4E00\u4E2A\u547D\u540D\u51FD\u6570\u91CC\u5934\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),uo={id:"\u3010\u5F3A\u5236\u3011-\u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u4E2A\u6CA1\u6709\u526F\u4F5C\u7528\u7684-\u8868\u8FBE\u5F0F\u8BED\u53E5\u7EC4\u6210-\u5220\u9664\u5927\u62EC\u53F7\u548C-return\u3002\u5426\u5219-\u4F7F\u7528\u5927\u62EC\u53F7\u548C-return-\u8BED\u53E5\u3002-eslint-arrow-parens-arrow-body-style",tabindex:"-1"},ro=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u4E2A\u6CA1\u6709\u526F\u4F5C\u7528\u7684-\u8868\u8FBE\u5F0F\u8BED\u53E5\u7EC4\u6210-\u5220\u9664\u5927\u62EC\u53F7\u548C-return\u3002\u5426\u5219-\u4F7F\u7528\u5927\u62EC\u53F7\u548C-return-\u8BED\u53E5\u3002-eslint-arrow-parens-arrow-body-style","aria-hidden":"true"},"#",-1),ko=s(),vo=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),mo=s(" \u5982\u679C\u51FD\u6570\u4F53\u7531\u4E00\u4E2A\u6CA1\u6709\u526F\u4F5C\u7528\u7684 "),bo={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions",target:"_blank",rel:"noopener noreferrer"},ho=s("\u8868\u8FBE\u5F0F"),_o=s("\u8BED\u53E5\u7EC4\u6210\uFF0C\u5220\u9664\u5927\u62EC\u53F7\u548C return\u3002\u5426\u5219\uFF0C\u4F7F\u7528\u5927\u62EC\u53F7\u548C "),go=n("code",null,"return",-1),fo=s(" \u8BED\u53E5\u3002 eslint: "),yo={href:"https://eslint.org/docs/rules/arrow-parens.html",target:"_blank",rel:"noopener noreferrer"},wo=n("code",null,"arrow-parens",-1),xo=s(),jo=s(", "),qo={href:"https://eslint.org/docs/rules/arrow-body-style.html",target:"_blank",rel:"noopener noreferrer"},So=n("code",null,"arrow-body-style",-1),No=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8BED\u6CD5\u7CD6\uFF0C\u5F53\u591A\u4E2A\u51FD\u6570\u94FE\u5728\u4E00\u8D77\u7684\u65F6\u5019\u597D\u8BFB\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextNumber <span class="token operator">=</span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nextNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextNumber <span class="token operator">=</span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nextNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CA1\u6709\u660E\u663E\u7684 return \u8BED\u53E5\uFF0C\u53EF\u80FD\u5B58\u5728\u526F\u4F5C\u7528\u3002</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53 callback \u8FD4\u56DE true \u65F6...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> bool <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// good</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5982\u679C\u8868\u8FBE\u5F0F\u6D89\u53CA\u591A\u884C-\u628A\u4ED6\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u4EE5\u63D0\u9AD8\u53EF\u8BFB\u6027\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u8868\u8FBE\u5F0F\u6D89\u53CA\u591A\u884C-\u628A\u4ED6\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u4EE5\u63D0\u9AD8\u53EF\u8BFB\u6027\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5982\u679C\u8868\u8FBE\u5F0F\u6D89\u53CA\u591A\u884C\uFF0C\u628A\u4ED6\u5305\u88F9\u5728\u5706\u62EC\u53F7\u91CC\u4EE5\u63D0\u9AD8\u53EF\u8BFB\u6027\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u6837\u80FD\u6E05\u6670\u5730\u663E\u793A\u51FD\u6570\u7684\u5F00\u59CB\u4F4D\u7F6E\u548C\u7ED3\u675F\u4F4D\u7F6E\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">httpMethod</span> <span class="token operator">=&gt;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    httpMagicObjectWithAVeryLongName<span class="token punctuation">,</span>
    httpMethod
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">httpMethod</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    httpMagicObjectWithAVeryLongName<span class="token punctuation">,</span>
    httpMethod
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Ao={id:"\u3010\u63A8\u8350\u3011\u5728\u7BAD\u5934\u51FD\u6570\u53C2\u6570\u4E24\u5934-\u603B\u662F\u4F7F\u7528\u5C0F\u62EC\u53F7\u5305\u88F9\u4F4F\u53C2\u6570-\u8FD9\u6837\u505A\u4F7F\u4EE3\u7801\u66F4\u6E05\u6670\u4E14\u4E00\u81F4-eslint-arrow-parens",tabindex:"-1"},Oo=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u7BAD\u5934\u51FD\u6570\u53C2\u6570\u4E24\u5934-\u603B\u662F\u4F7F\u7528\u5C0F\u62EC\u53F7\u5305\u88F9\u4F4F\u53C2\u6570-\u8FD9\u6837\u505A\u4F7F\u4EE3\u7801\u66F4\u6E05\u6670\u4E14\u4E00\u81F4-eslint-arrow-parens","aria-hidden":"true"},"#",-1),Co=s(),Io=n("code",null,"\u3010\u63A8\u8350\u3011",-1),To=s("\u5728\u7BAD\u5934\u51FD\u6570\u53C2\u6570\u4E24\u5934\uFF0C\u603B\u662F\u4F7F\u7528\u5C0F\u62EC\u53F7\u5305\u88F9\u4F4F\u53C2\u6570\uFF0C\u8FD9\u6837\u505A\u4F7F\u4EE3\u7801\u66F4\u6E05\u6670\u4E14\u4E00\u81F4. eslint: "),Bo={href:"https://eslint.org/docs/rules/arrow-parens.html",target:"_blank",rel:"noopener noreferrer"},Eo=n("code",null,"arrow-parens",-1),Lo=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5F53\u4F60\u60F3\u8981\u6DFB\u52A0\u6216\u5220\u9664\u53C2\u6570\u65F6\u80FD\u6BD4\u8F83\u7701\u4E8B\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A long string with the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. It\u2019s so long that we don\u2019t want it to take up space on the .map line!</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A long string with the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. It\u2019s so long that we don\u2019t want it to take up space on the .map line!</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),zo={id:"\u3010\u63A8\u8350\u3011\u907F\u514D\u7BAD\u5934\u51FD\u6570-\u548C\u6BD4\u8F83\u64CD\u4F5C\u7B26-\u6DF7\u6DC6-eslint-no-confusing-arrow",tabindex:"-1"},Po=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u907F\u514D\u7BAD\u5934\u51FD\u6570-\u548C\u6BD4\u8F83\u64CD\u4F5C\u7B26-\u6DF7\u6DC6-eslint-no-confusing-arrow","aria-hidden":"true"},"#",-1),Do=s(),Jo=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Fo=s("\u907F\u514D\u7BAD\u5934\u51FD\u6570\uFF08"),Mo=n("code",null,"=>",-1),Go=s("\uFF09\u548C\u6BD4\u8F83\u64CD\u4F5C\u7B26\uFF08"),Ho=n("code",null,"<=",-1),Ro=s(", "),Vo=n("code",null,">=",-1),$o=s("\uFF09\u6DF7\u6DC6. eslint: "),Wo={href:"http://eslint.org/docs/rules/no-confusing-arrow",target:"_blank",rel:"noopener noreferrer"},Uo=n("code",null,"no-confusing-arrow",-1),Yo=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">itemHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>height <span class="token operator">&lt;=</span> <span class="token number">256</span> <span class="token operator">?</span> item<span class="token punctuation">.</span>largeSize <span class="token operator">:</span> item<span class="token punctuation">.</span>smallSize<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">itemHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>height <span class="token operator">&gt;=</span> <span class="token number">256</span> <span class="token operator">?</span> item<span class="token punctuation">.</span>largeSize <span class="token operator">:</span> item<span class="token punctuation">.</span>smallSize<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token function-variable function">itemHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>height <span class="token operator">&lt;=</span> <span class="token number">256</span> <span class="token operator">?</span> item<span class="token punctuation">.</span>largeSize <span class="token operator">:</span> item<span class="token punctuation">.</span>smallSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token function-variable function">itemHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> largeSize<span class="token punctuation">,</span> smallSize <span class="token punctuation">}</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
  <span class="token keyword">return</span> height <span class="token operator">&lt;=</span> <span class="token number">256</span> <span class="token operator">?</span> largeSize <span class="token operator">:</span> smallSize<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Qo={id:"\u3010\u63A8\u8350\u3011\u4F7F\u7BAD\u5934\u51FD\u6570\u4F53\u6709\u4E00\u4E2A\u6E05\u6670\u7684\u8FD4\u56DE\u3002-eslint-implicit-arrow-linebreak",tabindex:"-1"},Xo=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u4F7F\u7BAD\u5934\u51FD\u6570\u4F53\u6709\u4E00\u4E2A\u6E05\u6670\u7684\u8FD4\u56DE\u3002-eslint-implicit-arrow-linebreak","aria-hidden":"true"},"#",-1),Ko=s(),Zo=n("code",null,"\u3010\u63A8\u8350\u3011",-1),np=s("\u4F7F\u7BAD\u5934\u51FD\u6570\u4F53\u6709\u4E00\u4E2A\u6E05\u6670\u7684\u8FD4\u56DE\u3002 eslint: "),sp={href:"https://eslint.org/docs/rules/implicit-arrow-linebreak",target:"_blank",rel:"noopener noreferrer"},ap=n("code",null,"implicit-arrow-linebreak",-1),ep=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  bar<span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> bar<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
   bar
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u4E0E\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u4E0E\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u7C7B\u4E0E\u6784\u9020\u51FD\u6570</h3><h4 id="\u3010\u63A8\u8350\u3011\u4F7F\u7528-class-\u8BED\u6CD5\u3002\u907F\u514D\u76F4\u63A5\u64CD\u4F5C-prototype\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u4F7F\u7528-class-\u8BED\u6CD5\u3002\u907F\u514D\u76F4\u63A5\u64CD\u4F5C-prototype\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u4F7F\u7528 <code>class</code> \u8BED\u6CD5\u3002\u907F\u514D\u76F4\u63A5\u64CD\u4F5C <code>prototype</code>\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F<code>class</code> \u8BED\u6CD5\u66F4\u7B80\u6D01\u66F4\u6613\u7406\u89E3\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">Queue</span><span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u7528-extends-\u5B9E\u73B0\u7EE7\u627F\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u7528-extends-\u5B9E\u73B0\u7EE7\u627F\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u7528 <code>extends</code> \u5B9E\u73B0\u7EE7\u627F\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5B83\u662F\u4E00\u79CD\u5185\u7F6E\u7684\u65B9\u6CD5\u6765\u7EE7\u627F\u539F\u578B\u529F\u80FD\u800C\u4E0D\u7834\u574F <code>instanceof</code>\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> inherits <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inherits&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">PeekableQueue</span><span class="token punctuation">(</span><span class="token parameter">contents</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Queue</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">inherits</span><span class="token punctuation">(</span>PeekableQueue<span class="token punctuation">,</span> Queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">PeekableQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">peek</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">PeekableQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE-this-\u6765\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE-this-\u6765\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE <code>this</code> \u6765\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token class-name">Jedi</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">jump</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Jedi</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setHeight</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
luke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
luke<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

luke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u81EA\u5DF1\u5199-tostring-\u65B9\u6CD5\u662F\u53EF\u4EE5\u7684-\u4F46\u9700\u8981\u4FDD\u8BC1\u5B83\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C\u4E14\u6CA1\u6709\u526F\u4F5C\u7528\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u81EA\u5DF1\u5199-tostring-\u65B9\u6CD5\u662F\u53EF\u4EE5\u7684-\u4F46\u9700\u8981\u4FDD\u8BC1\u5B83\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C\u4E14\u6CA1\u6709\u526F\u4F5C\u7528\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u81EA\u5DF1\u5199 <code>toString()</code> \u65B9\u6CD5\u662F\u53EF\u4EE5\u7684\uFF0C\u4F46\u9700\u8981\u4FDD\u8BC1\u5B83\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C\u4E14\u6CA1\u6709\u526F\u4F5C\u7528\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;no name&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Jedi - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),tp={id:"\u3010\u5F3A\u5236\u3011-\u5982\u679C\u6CA1\u6709\u7279\u522B\u5B9A\u4E49-\u7C7B\u6709\u9ED8\u8BA4\u7684\u6784\u9020\u65B9\u6CD5\u3002\u4E00\u4E2A\u7A7A\u7684\u6784\u9020\u51FD\u6570\u6216\u53EA\u662F\u4EE3\u8868\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\u662F\u4E0D\u9700\u8981\u5199\u7684\u3002-eslint-no-useless-constructor",tabindex:"-1"},op=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u6CA1\u6709\u7279\u522B\u5B9A\u4E49-\u7C7B\u6709\u9ED8\u8BA4\u7684\u6784\u9020\u65B9\u6CD5\u3002\u4E00\u4E2A\u7A7A\u7684\u6784\u9020\u51FD\u6570\u6216\u53EA\u662F\u4EE3\u8868\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\u662F\u4E0D\u9700\u8981\u5199\u7684\u3002-eslint-no-useless-constructor","aria-hidden":"true"},"#",-1),pp=s(),cp=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ip=s(" \u5982\u679C\u6CA1\u6709\u7279\u522B\u5B9A\u4E49\uFF0C\u7C7B\u6709\u9ED8\u8BA4\u7684\u6784\u9020\u65B9\u6CD5\u3002\u4E00\u4E2A\u7A7A\u7684\u6784\u9020\u51FD\u6570\u6216\u53EA\u662F\u4EE3\u8868\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\u662F\u4E0D\u9700\u8981\u5199\u7684\u3002 eslint: "),lp={href:"http://eslint.org/docs/rules/no-useless-constructor",target:"_blank",rel:"noopener noreferrer"},up=n("code",null,"no-useless-constructor",-1),rp=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Rey</span> <span class="token keyword">extends</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u79CD\u6784\u9020\u51FD\u6570\u662F\u4E0D\u9700\u8981\u5199\u7684</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Rey</span> <span class="token keyword">extends</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Rey&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),dp={id:"\u3010\u5F3A\u5236\u3011-\u907F\u514D\u91CD\u590D\u5B9A\u4E49\u7C7B\u6210\u5458\u3002eslint-no-dupe-class-members",tabindex:"-1"},kp=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u91CD\u590D\u5B9A\u4E49\u7C7B\u6210\u5458\u3002eslint-no-dupe-class-members","aria-hidden":"true"},"#",-1),vp=s(),mp=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),bp=s(" \u907F\u514D\u91CD\u590D\u5B9A\u4E49\u7C7B\u6210\u5458\u3002eslint: "),hp={href:"http://eslint.org/docs/rules/no-dupe-class-members",target:"_blank",rel:"noopener noreferrer"},_p=n("code",null,"no-dupe-class-members",-1),gp=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u91CD\u590D\u5B9A\u4E49\u7C7B\u6210\u5458\u53EA\u4F1A\u4F7F\u7528\u6700\u540E\u4E00\u4E2A\u88AB\u5B9A\u4E49\u7684 \u2014\u2014 \u91CD\u590D\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2A bug.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),fp={id:"\u3010\u63A8\u8350\u3011\u9664\u975E\u5916\u90E8\u5E93\u6216\u6846\u67B6\u9700\u8981\u4F7F\u7528\u7279\u5B9A\u7684\u975E\u9759\u6001\u65B9\u6CD5-\u5426\u5219\u7C7B\u65B9\u6CD5\u5E94\u8BE5\u4F7F\u7528-this-\u6216\u88AB\u5199\u6210\u9759\u6001\u65B9\u6CD5\u3002-\u4F5C\u4E3A\u4E00\u4E2A\u5B9E\u4F8B\u65B9\u6CD5\u8868\u660E\u5B83\u5E94\u8BE5\u6839\u636E\u5B9E\u4F8B\u7684\u5C5E\u6027\u6709\u4E0D\u540C\u7684\u884C\u4E3A\u3002eslint-class-methods-use-this",tabindex:"-1"},yp=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u9664\u975E\u5916\u90E8\u5E93\u6216\u6846\u67B6\u9700\u8981\u4F7F\u7528\u7279\u5B9A\u7684\u975E\u9759\u6001\u65B9\u6CD5-\u5426\u5219\u7C7B\u65B9\u6CD5\u5E94\u8BE5\u4F7F\u7528-this-\u6216\u88AB\u5199\u6210\u9759\u6001\u65B9\u6CD5\u3002-\u4F5C\u4E3A\u4E00\u4E2A\u5B9E\u4F8B\u65B9\u6CD5\u8868\u660E\u5B83\u5E94\u8BE5\u6839\u636E\u5B9E\u4F8B\u7684\u5C5E\u6027\u6709\u4E0D\u540C\u7684\u884C\u4E3A\u3002eslint-class-methods-use-this","aria-hidden":"true"},"#",-1),wp=s(),xp=n("code",null,"\u3010\u63A8\u8350\u3011",-1),jp=s("\u9664\u975E\u5916\u90E8\u5E93\u6216\u6846\u67B6\u9700\u8981\u4F7F\u7528\u7279\u5B9A\u7684\u975E\u9759\u6001\u65B9\u6CD5\uFF0C\u5426\u5219\u7C7B\u65B9\u6CD5\u5E94\u8BE5\u4F7F\u7528 "),qp=n("code",null,"this",-1),Sp=s(" \u6216\u88AB\u5199\u6210\u9759\u6001\u65B9\u6CD5\u3002 \u4F5C\u4E3A\u4E00\u4E2A\u5B9E\u4F8B\u65B9\u6CD5\u8868\u660E\u5B83\u5E94\u8BE5\u6839\u636E\u5B9E\u4F8B\u7684\u5C5E\u6027\u6709\u4E0D\u540C\u7684\u884C\u4E3A\u3002eslint: "),Np={href:"https://eslint.org/docs/rules/class-methods-use-this",target:"_blank",rel:"noopener noreferrer"},Ap=n("code",null,"class-methods-use-this",-1),Op=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good - this \u88AB\u4F7F\u7528\u4E86</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good - constructor \u4E0D\u4E00\u5B9A\u8981\u4F7F\u7528 this</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good - \u9759\u6001\u65B9\u6CD5\u4E0D\u9700\u8981\u4F7F\u7528 this</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757" aria-hidden="true">#</a> \u6A21\u5757</h3><h4 id="\u3010\u63A8\u8350\u3011\u4F7F\u7528-import-export-\u6A21\u5757\u800C\u4E0D\u662F\u975E\u6807\u51C6\u7684\u6A21\u5757\u7CFB\u7EDF\u3002\u4F60\u53EF\u4EE5\u968F\u65F6\u8F6C\u5230\u4F60\u559C\u6B22\u7684\u6A21\u5757\u7CFB\u7EDF\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u4F7F\u7528-import-export-\u6A21\u5757\u800C\u4E0D\u662F\u975E\u6807\u51C6\u7684\u6A21\u5757\u7CFB\u7EDF\u3002\u4F60\u53EF\u4EE5\u968F\u65F6\u8F6C\u5230\u4F60\u559C\u6B22\u7684\u6A21\u5757\u7CFB\u7EDF\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u4F7F\u7528\uFF08<code>import</code>/<code>export</code>\uFF09\u6A21\u5757\u800C\u4E0D\u662F\u975E\u6807\u51C6\u7684\u6A21\u5757\u7CFB\u7EDF\u3002\u4F60\u53EF\u4EE5\u968F\u65F6\u8F6C\u5230\u4F60\u559C\u6B22\u7684\u6A21\u5757\u7CFB\u7EDF\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u6A21\u5757\u5316\u662F\u672A\u6765\uFF0C\u8BA9\u6211\u4EEC\u73B0\u5728\u5C31\u5F00\u542F\u672A\u6765\u5427\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> AirbnbStyleGuide <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>

<span class="token comment">// ok</span>
<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528-import-\u901A\u914D\u7B26-\u5373-\u8FD9\u79CD\u65B9\u5F0F\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528-import-\u901A\u914D\u7B26-\u5373-\u8FD9\u79CD\u65B9\u5F0F\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u4E0D\u8981\u7528 <code>import</code> \u901A\u914D\u7B26\uFF0C \u5373 <code>*</code> \u8FD9\u79CD\u65B9\u5F0F\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u786E\u4FDD\u4F60\u6709\u5355\u4E2A\u9ED8\u8BA4\u7684\u5BFC\u51FA\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u4E0D\u8981\u76F4\u63A5\u4ECE-import-\u4E2D\u76F4\u63A5-export\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u4E0D\u8981\u76F4\u63A5\u4ECE-import-\u4E2D\u76F4\u63A5-export\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u4E0D\u8981\u76F4\u63A5\u4ECE <code>import</code> \u4E2D\u76F4\u63A5 <code>export</code>\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u867D\u7136\u53EA\u5199\u4E00\u884C\u5F88\u7B80\u6D01\uFF0C\u4F46\u662F\u4F7F\u7528\u660E\u786E <code>import</code> \u548C\u660E\u786E\u7684 <code>export</code> \u6765\u4FDD\u8BC1\u4E00\u81F4\u6027\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token comment">// filename es6.js</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> es6 <span class="token keyword">as</span> <span class="token keyword">default</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token comment">// filename es6.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),Cp={id:"\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u8DEF\u5F84\u53EA-import-\u4E00\u6B21\u3002eslint-no-duplicate-imports",tabindex:"-1"},Ip=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u8DEF\u5F84\u53EA-import-\u4E00\u6B21\u3002eslint-no-duplicate-imports","aria-hidden":"true"},"#",-1),Tp=s(),Bp=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ep=s(" \u4E00\u4E2A\u8DEF\u5F84\u53EA "),Lp=n("code",null,"import",-1),zp=s(" \u4E00\u6B21\u3002eslint: "),Pp={href:"http://eslint.org/docs/rules/no-duplicate-imports",target:"_blank",rel:"noopener noreferrer"},Dp=n("code",null,"no-duplicate-imports",-1),Jp=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u591A\u884C\u5BFC\u5165\u540C\u4E00\u8DEF\u5F84\u5C06\u4F7F\u4EE3\u7801\u53D8\u5F97\u96BE\u4EE5\u7EF4\u62A4\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u2026 \u5176\u4ED6\u5BFC\u5165 \u2026 //</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  named1<span class="token punctuation">,</span>
  named2<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Fp={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5BFC\u51FA\u53EF\u53D8\u7684\u4E1C\u897F\u3002eslint-import-no-mutable-exports",tabindex:"-1"},Mp=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5BFC\u51FA\u53EF\u53D8\u7684\u4E1C\u897F\u3002eslint-import-no-mutable-exports","aria-hidden":"true"},"#",-1),Gp=s(),Hp=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Rp=s(" \u4E0D\u8981\u5BFC\u51FA\u53EF\u53D8\u7684\u4E1C\u897F\u3002eslint: "),Vp={href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md",target:"_blank",rel:"noopener noreferrer"},$p=n("code",null,"import/no-mutable-exports",-1),Wp=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u53D8\u5316\u901A\u5E38\u90FD\u662F\u9700\u8981\u907F\u514D\uFF0C\u7279\u522B\u662F\u5F53\u4F60\u8981\u8F93\u51FA\u53EF\u53D8\u7684\u7ED1\u5B9A\u3002\u867D\u7136\u5728\u67D0\u4E9B\u573A\u666F\u4E0B\u53EF\u80FD\u9700\u8981\u8FD9\u79CD\u6280\u672F\uFF0C\u4F46\u603B\u7684\u6765\u8BF4\u5E94\u8BE5\u5BFC\u51FA\u5E38\u91CF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Up={id:"\u3010\u63A8\u8350\u3011\u5728\u4E00\u4E2A\u5355\u4E00\u5BFC\u51FA\u6A21\u5757\u91CC-\u7528-export-default-\u66F4\u597D\u3002eslint-import-prefer-default-export",tabindex:"-1"},Yp=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u4E00\u4E2A\u5355\u4E00\u5BFC\u51FA\u6A21\u5757\u91CC-\u7528-export-default-\u66F4\u597D\u3002eslint-import-prefer-default-export","aria-hidden":"true"},"#",-1),Qp=s(),Xp=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Kp=s("\u5728\u4E00\u4E2A\u5355\u4E00\u5BFC\u51FA\u6A21\u5757\u91CC\uFF0C\u7528 "),Zp=n("code",null,"export default",-1),nc=s(" \u66F4\u597D\u3002eslint: "),sc={href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md",target:"_blank",rel:"noopener noreferrer"},ac=n("code",null,"import/prefer-default-export",-1),ec=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u9F13\u52B1\u4F7F\u7528\u66F4\u591A\u6587\u4EF6\uFF0C\u6BCF\u4E2A\u6587\u4EF6\u53EA\u5BFC\u51FA\u4E00\u6B21\uFF0C\u8FD9\u6837\u53EF\u8BFB\u6027\u548C\u53EF\u7EF4\u62A4\u6027\u66F4\u597D\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),tc={id:"\u3010\u5F3A\u5236\u3011-\u628A-import-\u653E\u5728\u5176\u4ED6\u6240\u6709\u8BED\u53E5\u4E4B\u524D\u3002eslint-import-first",tabindex:"-1"},oc=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u628A-import-\u653E\u5728\u5176\u4ED6\u6240\u6709\u8BED\u53E5\u4E4B\u524D\u3002eslint-import-first","aria-hidden":"true"},"#",-1),pc=s(),cc=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ic=s(" \u628A "),lc=n("code",null,"import",-1),uc=s(" \u653E\u5728\u5176\u4ED6\u6240\u6709\u8BED\u53E5\u4E4B\u524D\u3002eslint: "),rc={href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md",target:"_blank",rel:"noopener noreferrer"},dc=n("code",null,"import/first",-1),kc=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u56E0\u4E3A <code>import</code> \u4F1A\u88AB\u63D0\u5347\u5230\u4EE3\u7801\u6700\u524D\u9762\u8FD0\u884C\uFF0C\u56E0\u6B64\u5C06\u4ED6\u4EEC\u653E\u5728\u6700\u524D\u9762\u4EE5\u9632\u6B62\u53D1\u751F\u610F\u5916\u884C\u4E3A\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u591A\u884C-import-\u5E94\u8BE5\u7F29\u8FDB-\u5C31\u50CF\u591A\u884C\u6570\u7EC4\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u4E00\u6837\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u591A\u884C-import-\u5E94\u8BE5\u7F29\u8FDB-\u5C31\u50CF\u591A\u884C\u6570\u7EC4\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u4E00\u6837\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u591A\u884C <code>import</code> \u5E94\u8BE5\u7F29\u8FDB\uFF0C\u5C31\u50CF\u591A\u884C\u6570\u7EC4\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u4E00\u6837\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u82B1\u62EC\u53F7\u4E0E\u6837\u5F0F\u6307\u5357\u4E2D\u6BCF\u4E2A\u5176\u4ED6\u82B1\u62EC\u53F7\u5757\u9075\u5FAA\u76F8\u540C\u7684\u7F29\u8FDB\u89C4\u5219\uFF0C\u9017\u53F7\u4E5F\u662F\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>longNameA<span class="token punctuation">,</span> longNameB<span class="token punctuation">,</span> longNameC<span class="token punctuation">,</span> longNameD<span class="token punctuation">,</span> longNameE<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  longNameA<span class="token punctuation">,</span>
  longNameB<span class="token punctuation">,</span>
  longNameC<span class="token punctuation">,</span>
  longNameD<span class="token punctuation">,</span>
  longNameE<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),vc={id:"\u3010\u5F3A\u5236\u3011-\u5728-import-\u8BED\u53E5\u91CC\u4E0D\u5141\u8BB8-webpack-loader-\u8BED\u6CD5\u3002eslint-import-no-webpack-loader-syntax",tabindex:"-1"},mc=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5728-import-\u8BED\u53E5\u91CC\u4E0D\u5141\u8BB8-webpack-loader-\u8BED\u6CD5\u3002eslint-import-no-webpack-loader-syntax","aria-hidden":"true"},"#",-1),bc=s(),hc=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),_c=s(" \u5728 "),gc=n("code",null,"import",-1),fc=s(" \u8BED\u53E5\u91CC\u4E0D\u5141\u8BB8 Webpack loader \u8BED\u6CD5\u3002eslint: "),yc={href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md",target:"_blank",rel:"noopener noreferrer"},wc=n("code",null,"import/no-webpack-loader-syntax",-1),xc=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4E00\u65E6\u7528 Webpack \u8BED\u6CD5\u5728 import \u91CC\u4F1A\u628A\u4EE3\u7801\u8026\u5408\u5230\u6A21\u5757\u7ED1\u5B9A\u5668\u3002\u6700\u597D\u662F\u5728 <code>webpack.config.js</code> \u91CC\u5199 webpack loader \u8BED\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> fooSass <span class="token keyword">from</span> <span class="token string">&#39;css!sass!foo.scss&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> barCss <span class="token keyword">from</span> <span class="token string">&#39;style!css!bar.css&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> fooSass <span class="token keyword">from</span> <span class="token string">&#39;foo.scss&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> barCss <span class="token keyword">from</span> <span class="token string">&#39;bar.css&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668</h3>`,3),jc={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u8FED\u4EE3\u5668\u3002\u4F7F\u7528-javascript-\u9AD8\u7EA7\u51FD\u6570\u4EE3\u66FF-for-in\u3001-for-of\u3002eslint-no-iterator-no-restricted-syntax",tabindex:"-1"},qc=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u8FED\u4EE3\u5668\u3002\u4F7F\u7528-javascript-\u9AD8\u7EA7\u51FD\u6570\u4EE3\u66FF-for-in\u3001-for-of\u3002eslint-no-iterator-no-restricted-syntax","aria-hidden":"true"},"#",-1),Sc=s(),Nc=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ac=s(" \u4E0D\u8981\u7528\u8FED\u4EE3\u5668\u3002\u4F7F\u7528 JavaScript \u9AD8\u7EA7\u51FD\u6570\u4EE3\u66FF "),Oc=n("code",null,"for-in",-1),Cc=s("\u3001 "),Ic=n("code",null,"for-of",-1),Tc=s("\u3002eslint: "),Bc={href:"http://eslint.org/docs/rules/no-iterator.html",target:"_blank",rel:"noopener noreferrer"},Ec=n("code",null,"no-iterator",-1),Lc=s(),zc={href:"http://eslint.org/docs/rules/no-restricted-syntax",target:"_blank",rel:"noopener noreferrer"},Pc=n("code",null,"no-restricted-syntax",-1),Dc=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u5F3A\u8C03\u4E86\u6211\u4EEC\u4E0D\u53EF\u53D8\u7684\u89C4\u5219\u3002 \u5904\u7406\u8FD4\u56DE\u503C\u7684\u7EAF\u51FD\u6570\u6BD4\u5904\u7406\u526F\u4F5C\u7528\u66F4\u5BB9\u6613\u3002</p></blockquote><blockquote><p>\u7528\u6570\u7EC4\u7684\u8FD9\u4E9B\u8FED\u4EE3\u65B9\u6CD5\uFF1A <code>map()</code> / <code>every()</code> / <code>filter()</code> / <code>find()</code> / <code>findIndex()</code> / <code>reduce()</code> / <code>some()</code> / ... , \u7528\u5BF9\u8C61\u7684\u8FD9\u4E9B\u65B9\u6CD5 <code>Object.keys()</code> / <code>Object.values()</code> / <code>Object.entries()</code> \u53BB\u4EA7\u751F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u8FD9\u6837\u4F60\u5C31\u80FD\u53BB\u904D\u5386\u5BF9\u8C61\u4E86\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sum <span class="token operator">+=</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
sum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
numbers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+=</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
sum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>

<span class="token comment">// best (use the functional force)</span>
<span class="token keyword">const</span> sum <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> total <span class="token operator">+</span> num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> increasedByOne <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numbers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  increasedByOne<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> increasedByOne <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
numbers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> increasedByOne<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best (keeping it functional)</span>
<span class="token keyword">const</span> increasedByOne <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u73B0\u5728\u6682\u65F6\u4E0D\u8981\u4F7F\u7528\u751F\u6210\u5668\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u73B0\u5728\u6682\u65F6\u4E0D\u8981\u4F7F\u7528\u751F\u6210\u5668\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u73B0\u5728\u6682\u65F6\u4E0D\u8981\u4F7F\u7528\u751F\u6210\u5668\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u751F\u6210\u5668\u76EE\u524D\u4E0D\u80FD\u5F88\u597D\u5730\u8F6C\u6362\u4E3A ES5 \u8BED\u6CD5\u3002</p></blockquote>`,5),Jc={id:"\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4F60\u4E00\u5B9A\u8981\u7528\u751F\u6210\u5668-\u6216\u8005\u4F60\u5FFD\u7565\u6211\u4EEC\u7684\u5EFA\u8BAE-\u8BF7\u786E\u4FDD\u5B83\u4EEC\u7684\u51FD\u6570\u6807\u5FD7\u7A7A\u683C\u662F\u5F97\u5F53\u7684\u3002eslint-generator-star-spacing",tabindex:"-1"},Fc=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5982\u679C\u4F60\u4E00\u5B9A\u8981\u7528\u751F\u6210\u5668-\u6216\u8005\u4F60\u5FFD\u7565\u6211\u4EEC\u7684\u5EFA\u8BAE-\u8BF7\u786E\u4FDD\u5B83\u4EEC\u7684\u51FD\u6570\u6807\u5FD7\u7A7A\u683C\u662F\u5F97\u5F53\u7684\u3002eslint-generator-star-spacing","aria-hidden":"true"},"#",-1),Mc=s(),Gc=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hc=s(" \u5982\u679C\u4F60\u4E00\u5B9A\u8981\u7528\u751F\u6210\u5668\uFF0C\u6216\u8005\u4F60\u5FFD\u7565\u6211\u4EEC\u7684\u5EFA\u8BAE\uFF0C\u8BF7\u786E\u4FDD\u5B83\u4EEC\u7684\u51FD\u6570\u6807\u5FD7\u7A7A\u683C\u662F\u5F97\u5F53\u7684\u3002eslint: "),Rc={href:"http://eslint.org/docs/rules/generator-star-spacing",target:"_blank",rel:"noopener noreferrer"},Vc=n("code",null,"generator-star-spacing",-1),$c=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F<code>function</code> \u548C <code>*</code> \u662F\u540C\u4E00\u6982\u5FF5\u5173\u952E\u5B57 - <code>*</code>\u4E0D\u662F<code>function</code>\u7684\u4FEE\u9970\u7B26\uFF0C<code>function*</code> \u662F\u4E00\u4E2A\u548C<code>function</code> \u4E0D\u4E00\u6837\u7684\u72EC\u7279\u7ED3\u6784\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">baz</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">quux</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span><span class="token operator">*</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// very bad</span>
<span class="token keyword">function</span>
<span class="token operator">*</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// very bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">wat</span> <span class="token operator">=</span> <span class="token keyword">function</span>
<span class="token operator">*</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h3>`,3),Wc={id:"\u3010\u5F3A\u5236\u3011-\u8BBF\u95EE\u5C5E\u6027\u65F6\u4F7F\u7528\u70B9\u7B26\u53F7\u3002eslint-dot-notation",tabindex:"-1"},Uc=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u8BBF\u95EE\u5C5E\u6027\u65F6\u4F7F\u7528\u70B9\u7B26\u53F7\u3002eslint-dot-notation","aria-hidden":"true"},"#",-1),Yc=s(),Qc=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Xc=s(" \u8BBF\u95EE\u5C5E\u6027\u65F6\u4F7F\u7528\u70B9\u7B26\u53F7\u3002eslint: "),Kc={href:"http://eslint.org/docs/rules/dot-notation.html",target:"_blank",rel:"noopener noreferrer"},Zc=n("code",null,"dot-notation",-1),ni=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">jedi</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> isJedi <span class="token operator">=</span> luke<span class="token punctuation">[</span><span class="token string">&#39;jedi&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> isJedi <span class="token operator">=</span> luke<span class="token punctuation">.</span>jedi<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5F53\u4F7F\u7528\u53D8\u91CF\u83B7\u53D6\u5C5E\u6027\u65F6\u7528\u65B9\u62EC\u53F7-\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5F53\u4F7F\u7528\u53D8\u91CF\u83B7\u53D6\u5C5E\u6027\u65F6\u7528\u65B9\u62EC\u53F7-\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5F53\u4F7F\u7528\u53D8\u91CF\u83B7\u53D6\u5C5E\u6027\u65F6\u7528\u65B9\u62EC\u53F7 <code>[]</code>\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">jedi</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getProp</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> luke<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> isJedi <span class="token operator">=</span> <span class="token function">getProp</span><span class="token punctuation">(</span><span class="token string">&#39;jedi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),si={id:"\u3010\u5F3A\u5236\u3011-\u505A\u5E42\u8FD0\u7B97\u65F6\u7528\u5E42\u64CD\u4F5C\u7B26-\u3002eslint-no-restricted-properties",tabindex:"-1"},ai=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u505A\u5E42\u8FD0\u7B97\u65F6\u7528\u5E42\u64CD\u4F5C\u7B26-\u3002eslint-no-restricted-properties","aria-hidden":"true"},"#",-1),ei=s(),ti=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),oi=s(" \u505A\u5E42\u8FD0\u7B97\u65F6\u7528\u5E42\u64CD\u4F5C\u7B26 "),pi=n("code",null,"**",-1),ci=s(" \u3002eslint: "),ii={href:"https://eslint.org/docs/rules/no-restricted-properties",target:"_blank",rel:"noopener noreferrer"},li=n("code",null,"no-restricted-properties",-1),ui=s(),ri=s("."),di=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> binary <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> binary <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h3>`,2),ki={id:"\u3010\u5F3A\u5236\u3011-\u4F7F\u7528-const-\u6216-let-\u58F0\u660E\u53D8\u91CF\u3002\u4E0D\u8FD9\u6837\u505A\u4F1A\u5BFC\u81F4\u5168\u5C40\u53D8\u91CF\u3002\u6211\u4EEC\u60F3\u8981\u907F\u514D\u6C61\u67D3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u3002\u5730\u7403\u8D85\u4EBA\u4E5F\u8FD9\u6837\u8B66\u544A\u6211\u4EEC-\u8BD1\u8005\u6CE8-\u53EF\u80FD\u662F\u4E00\u4E2A\u51B7\u7B11\u8BDD-\u3002-eslint-no-undef-prefer-const",tabindex:"-1"},vi=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4F7F\u7528-const-\u6216-let-\u58F0\u660E\u53D8\u91CF\u3002\u4E0D\u8FD9\u6837\u505A\u4F1A\u5BFC\u81F4\u5168\u5C40\u53D8\u91CF\u3002\u6211\u4EEC\u60F3\u8981\u907F\u514D\u6C61\u67D3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u3002\u5730\u7403\u8D85\u4EBA\u4E5F\u8FD9\u6837\u8B66\u544A\u6211\u4EEC-\u8BD1\u8005\u6CE8-\u53EF\u80FD\u662F\u4E00\u4E2A\u51B7\u7B11\u8BDD-\u3002-eslint-no-undef-prefer-const","aria-hidden":"true"},"#",-1),mi=s(),bi=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),hi=s(" \u4F7F\u7528 "),_i=n("code",null,"const",-1),gi=s(" \u6216 "),fi=n("code",null,"let",-1),yi=s(" \u58F0\u660E\u53D8\u91CF\u3002\u4E0D\u8FD9\u6837\u505A\u4F1A\u5BFC\u81F4\u5168\u5C40\u53D8\u91CF\u3002\u6211\u4EEC\u60F3\u8981\u907F\u514D\u6C61\u67D3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u3002\u5730\u7403\u8D85\u4EBA\u4E5F\u8FD9\u6837\u8B66\u544A\u6211\u4EEC\uFF08\u8BD1\u8005\u6CE8\uFF1A\u53EF\u80FD\u662F\u4E00\u4E2A\u51B7\u7B11\u8BDD\uFF09\u3002 eslint: "),wi={href:"http://eslint.org/docs/rules/no-undef",target:"_blank",rel:"noopener noreferrer"},xi=n("code",null,"no-undef",-1),ji=s(),qi={href:"http://eslint.org/docs/rules/prefer-const",target:"_blank",rel:"noopener noreferrer"},Si=n("code",null,"prefer-const",-1),Ni=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
superPower <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> superPower <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ai={id:"\u3010\u63A8\u8350\u3011\u4E3A\u6BCF\u4E2A\u53D8\u91CF\u58F0\u660E\u90FD\u7528\u4E00\u4E2A-const-\u6216-let\u3002eslint-one-var",tabindex:"-1"},Oi=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u4E3A\u6BCF\u4E2A\u53D8\u91CF\u58F0\u660E\u90FD\u7528\u4E00\u4E2A-const-\u6216-let\u3002eslint-one-var","aria-hidden":"true"},"#",-1),Ci=s(),Ii=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Ti=s("\u4E3A\u6BCF\u4E2A\u53D8\u91CF\u58F0\u660E\u90FD\u7528\u4E00\u4E2A "),Bi=n("code",null,"const",-1),Ei=s(" \u6216 "),Li=n("code",null,"let",-1),zi=s("\u3002eslint: "),Pi={href:"http://eslint.org/docs/rules/one-var.html",target:"_blank",rel:"noopener noreferrer"},Di=n("code",null,"one-var",-1),Ji=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u79CD\u65B9\u5F0F\u5F88\u5BB9\u6613\u53BB\u58F0\u660E\u65B0\u7684\u53D8\u91CF\uFF0C\u4F60\u4E0D\u7528\u53BB\u8003\u8651\u628A <code>;</code> \u8C03\u6362\u6210 <code>,</code>\uFF0C\u6216\u8005\u5F15\u5165\u4E00\u4E2A\u53EA\u6709\u6807\u70B9\u7684\u4E0D\u540C\u7684\u53D8\u5316\uFF08\u8BD1\u8005\u6CE8\uFF1A\u8FD9\u91CC\u8BF4\u7684\u5E94\u8BE5\u662F\u5728 Git \u63D0\u4EA4\u4EE3\u7801\u65F6\u663E\u793A\u7684\u53D8\u5316\uFF09\u3002\u8FD9\u79CD\u505A\u6CD5\u4E5F\u53EF\u4EE5\u662F\u4F60\u5728\u8C03\u8BD5\u7684\u65F6\u5019\u5355\u6B65\u6BCF\u4E2A\u58F0\u660E\u8BED\u53E5\uFF0C\u800C\u4E0D\u662F\u4E00\u4E0B\u8DF3\u8FC7\u6240\u6709\u58F0\u660E\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    dragonball <span class="token operator">=</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token comment">// \uFF08\u4E0E\u524D\u9762\u7684\u6BD4\u8F83\uFF0C\u627E\u4E00\u627E\u9519\u8BEF\uFF09</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    dragonball <span class="token operator">=</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dragonball <span class="token operator">=</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u628Aconst-\u548C-let-\u5206\u522B\u653E\u4E00\u8D77\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u628Aconst-\u548C-let-\u5206\u522B\u653E\u4E00\u8D77\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u628A<code>const</code> \u548C <code>let</code> \u5206\u522B\u653E\u4E00\u8D77\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5728\u4F60\u9700\u8981\u5206\u914D\u4E00\u4E2A\u65B0\u7684\u53D8\u91CF\uFF0C\u800C\u8FD9\u4E2A\u53D8\u91CF\u4F9D\u8D56\u4E4B\u524D\u5206\u914D\u8FC7\u7684\u53D8\u91CF\u7684\u65F6\u5019\uFF0C\u8FD9\u79CD\u505A\u6CD5\u662F\u6709\u5E2E\u52A9\u7684\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">let</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span> dragonball<span class="token punctuation">,</span>
    items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">let</span> i<span class="token punctuation">;</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> dragonball<span class="token punctuation">;</span>
<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> len<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> dragonball<span class="token punctuation">;</span>
<span class="token keyword">let</span> i<span class="token punctuation">;</span>
<span class="token keyword">let</span> length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5728\u4F60\u9700\u8981\u7684\u5730\u65B9\u58F0\u660E\u53D8\u91CF-\u4F46\u662F\u8981\u653E\u5728\u5408\u7406\u7684\u4F4D\u7F6E\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5728\u4F60\u9700\u8981\u7684\u5730\u65B9\u58F0\u660E\u53D8\u91CF-\u4F46\u662F\u8981\u653E\u5728\u5408\u7406\u7684\u4F4D\u7F6E\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5728\u4F60\u9700\u8981\u7684\u5730\u65B9\u58F0\u660E\u53D8\u91CF\uFF0C\u4F46\u662F\u8981\u653E\u5728\u5408\u7406\u7684\u4F4D\u7F6E\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F<code>let</code> \u548C <code>const</code> \u90FD\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u800C\u4E0D\u662F\u51FD\u6570\u7EA7\u4F5C\u7528\u57DF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad - \u4E0D\u5FC5\u8981\u7684\u51FD\u6570\u8C03\u7528\u3002</span>
<span class="token keyword">function</span> <span class="token function">checkName</span><span class="token punctuation">(</span><span class="token parameter">hasName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasName <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">checkName</span><span class="token punctuation">(</span><span class="token parameter">hasName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasName <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728\u9700\u8981\u7684\u65F6\u5019\u5206\u914D</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Fi={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528\u94FE\u5F0F\u58F0\u660E\u53D8\u91CF\u3002-eslint-no-multi-assign",tabindex:"-1"},Mi=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528\u94FE\u5F0F\u58F0\u660E\u53D8\u91CF\u3002-eslint-no-multi-assign","aria-hidden":"true"},"#",-1),Gi=s(),Hi=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ri=s(" \u4E0D\u8981\u4F7F\u7528\u94FE\u5F0F\u58F0\u660E\u53D8\u91CF\u3002 eslint: "),Vi={href:"https://eslint.org/docs/rules/no-multi-assign",target:"_blank",rel:"noopener noreferrer"},$i=n("code",null,"no-multi-assign",-1),Wi=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u94FE\u5F0F\u58F0\u660E\u53D8\u91CF\u4F1A\u521B\u5EFA\u9690\u5F0F\u5168\u5C40\u53D8\u91CF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// JavaScript \u5C06\u8FD9\u4E00\u6BB5\u89E3\u91CA\u4E3A</span>
  <span class="token comment">// let a = ( b = ( c = 1 ) );</span>
  <span class="token comment">// let \u53EA\u5BF9\u53D8\u91CF a \u8D77\u4F5C\u7528; \u53D8\u91CF b \u548C c \u90FD\u53D8\u6210\u4E86\u5168\u5C40\u53D8\u91CF</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// good</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
  <span class="token keyword">let</span> c <span class="token operator">=</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>

<span class="token comment">// \`const\` \u4E5F\u662F\u5982\u6B64</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ui={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528\u4E00\u5143\u81EA\u589E\u81EA\u51CF\u8FD0\u7B97\u7B26-eslint-no-plusplus",tabindex:"-1"},Yi=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528\u4E00\u5143\u81EA\u589E\u81EA\u51CF\u8FD0\u7B97\u7B26-eslint-no-plusplus","aria-hidden":"true"},"#",-1),Qi=s(),Xi=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ki=s(" \u4E0D\u8981\u4F7F\u7528\u4E00\u5143\u81EA\u589E\u81EA\u51CF\u8FD0\u7B97\u7B26\uFF08"),Zi=n("code",null,"++",-1),nl=s("\uFF0C "),sl=n("code",null,"--",-1),al=s("\uFF09. eslint "),el={href:"http://eslint.org/docs/rules/no-plusplus",target:"_blank",rel:"noopener noreferrer"},tl=n("code",null,"no-plusplus",-1),ol=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u6839\u636E eslint \u6587\u6863\uFF0C\u4E00\u5143\u589E\u91CF\u548C\u51CF\u91CF\u8BED\u53E5\u53D7\u5230\u81EA\u52A8\u5206\u53F7\u63D2\u5165\u7684\u5F71\u54CD\uFF0C\u5E76\u4E14\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684\u503C\u9012\u589E\u6216\u9012\u51CF\u7684\u9759\u9ED8\u9519\u8BEF\u3002 \u4F7F\u7528 <code>num + = 1</code> \u800C\u4E0D\u662F <code>num ++</code> \u6216 <code>num ++</code> \u8BED\u53E5\u4E5F\u662F\u542B\u4E49\u6E05\u6670\u7684\u3002 \u7981\u6B62\u4E00\u5143\u589E\u91CF\u548C\u51CF\u91CF\u8BED\u53E5\u8FD8\u4F1A\u963B\u6B62\u60A8\u65E0\u610F\u5730\u9884\u589E/\u9884\u51CF\u503C\uFF0C\u8FD9\u4E5F\u4F1A\u5BFC\u81F4\u7A0B\u5E8F\u51FA\u73B0\u610F\u5916\u884C\u4E3A\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// bad</span>

  <span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  num<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token operator">--</span>num<span class="token punctuation">;</span>

  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> truthyCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    sum <span class="token operator">+=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      truthyCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// good</span>

  <span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  num <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  num <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> sum <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> truthyCount <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),pl={id:"\u3010\u63A8\u8350\u3011\u5728\u8D4B\u503C\u7684\u65F6\u5019\u907F\u514D\u5728-\u524D-\u540E\u6362\u884C\u3002-\u5982\u679C\u4F60\u7684\u8D4B\u503C\u8BED\u53E5\u8D85\u51FA-max-len-\u90A3\u5C31\u7528\u5C0F\u62EC\u53F7\u628A\u8FD9\u4E2A\u503C\u5305\u8D77\u6765\u518D\u6362\u884C\u3002eslint-operator-linebreak",tabindex:"-1"},cl=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u8D4B\u503C\u7684\u65F6\u5019\u907F\u514D\u5728-\u524D-\u540E\u6362\u884C\u3002-\u5982\u679C\u4F60\u7684\u8D4B\u503C\u8BED\u53E5\u8D85\u51FA-max-len-\u90A3\u5C31\u7528\u5C0F\u62EC\u53F7\u628A\u8FD9\u4E2A\u503C\u5305\u8D77\u6765\u518D\u6362\u884C\u3002eslint-operator-linebreak","aria-hidden":"true"},"#",-1),il=s(),ll=n("code",null,"\u3010\u63A8\u8350\u3011",-1),ul=s("\u5728\u8D4B\u503C\u7684\u65F6\u5019\u907F\u514D\u5728 "),rl=n("code",null,"=",-1),dl=s(" \u524D/\u540E\u6362\u884C\u3002 \u5982\u679C\u4F60\u7684\u8D4B\u503C\u8BED\u53E5\u8D85\u51FA "),kl={href:"https://eslint.org/docs/rules/max-len.html",target:"_blank",rel:"noopener noreferrer"},vl=n("code",null,"max-len",-1),ml=s(),bl=s("\uFF0C\u90A3\u5C31\u7528\u5C0F\u62EC\u53F7\u628A\u8FD9\u4E2A\u503C\u5305\u8D77\u6765\u518D\u6362\u884C\u3002eslint "),hl={href:"https://eslint.org/docs/rules/operator-linebreak.html",target:"_blank",rel:"noopener noreferrer"},_l=n("code",null,"operator-linebreak",-1),gl=s(),fl=s("."),yl=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5728 <code>=</code> \u9644\u8FD1\u6362\u884C\u5BB9\u6613\u6DF7\u6DC6\u8FD9\u4E2A\u8D4B\u503C\u8BED\u53E5\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span>
  <span class="token function">superLongLongLongLongLongLongLongLongFunctionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> foo
  <span class="token operator">=</span> <span class="token string">&#39;superLongLongLongLongLongLongLongLongString&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token function">superLongLongLongLongLongLongLongLongFunctionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;superLongLongLongLongLongLongLongLongString&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),wl={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u5141\u8BB8\u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u3002eslint-no-unused-vars",tabindex:"-1"},xl=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u5141\u8BB8\u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u3002eslint-no-unused-vars","aria-hidden":"true"},"#",-1),jl=s(),ql=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Sl=s(" \u4E0D\u5141\u8BB8\u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u3002eslint: "),Nl={href:"https://eslint.org/docs/rules/no-unused-vars",target:"_blank",rel:"noopener noreferrer"},Al=n("code",null,"no-unused-vars",-1),Ol=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4E00\u4E2A\u58F0\u660E\u4E86\u4F46\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u66F4\u50CF\u662F\u7531\u4E8E\u91CD\u6784\u672A\u5B8C\u6210\u4EA7\u751F\u7684\u9519\u8BEF\u3002\u8FD9\u79CD\u5728\u4EE3\u7801\u4E2D\u51FA\u73B0\u7684\u53D8\u91CF\u4F1A\u4F7F\u9605\u8BFB\u8005\u8FF7\u60D1\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>

<span class="token keyword">var</span> some_unused_var <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u4E86\u6CA1\u7528</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D8\u91CF\u6539\u4E86\u81EA\u5DF1\u7684\u503C\uFF0C\u4E5F\u6CA1\u6709\u7528\u8FD9\u4E2A\u53D8\u91CF</span>
<span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
z <span class="token operator">=</span> z <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// \u53C2\u6570\u5B9A\u4E49\u4E86\u4F46\u672A\u4F7F\u7528</span>
<span class="token keyword">function</span> <span class="token function">getX</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">getXPlusY</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">getXPlusY</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &#39;type&#39; \u5373\u4F7F\u6CA1\u6709\u4F7F\u7528\u4E5F\u53EF\u4EE5\u53EF\u4EE5\u88AB\u5FFD\u7565\uFF0C \u56E0\u4E3A\u8FD9\u4E2A\u6709\u4E00\u4E2A rest \u53D6\u503C\u7684\u5C5E\u6027\u3002</span>
<span class="token comment">// \u8FD9\u662F\u4ECE\u5BF9\u8C61\u4E2D\u62BD\u53D6\u4E00\u4E2A\u5FFD\u7565\u7279\u6B8A\u5B57\u6BB5\u7684\u5BF9\u8C61\u7684\u4E00\u79CD\u5F62\u5F0F</span>
<span class="token keyword">var</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>coords <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
<span class="token comment">// &#39;coords&#39; \u73B0\u5728\u5C31\u662F\u4E00\u4E2A\u6CA1\u6709 &#39;type&#39; \u5C5E\u6027\u7684 &#39;data&#39; \u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#\u63D0\u5347" aria-hidden="true">#</a> \u63D0\u5347</h3>`,3),Cl={id:"var-\u58F0\u660E\u4F1A\u88AB\u63D0\u524D\u5230\u79BB\u4ED6\u6700\u8FD1\u7684\u4F5C\u7528\u57DF\u7684\u6700\u524D\u9762-\u4F46\u662F\u5B83\u7684\u8D4B\u503C\u8BED\u53E5\u5E76\u6CA1\u6709\u63D0\u524D\u3002const-\u548C-let-\u88AB\u8D4B\u4E88\u4E86\u65B0\u7684\u6982\u5FF5-\u6682\u65F6\u6027\u6B7B\u533A-\u3002-\u91CD\u8981\u7684\u662F\u8981\u77E5\u9053\u4E3A\u4EC0\u4E48-typeof-\u4E0D\u518D\u5B89\u5168",tabindex:"-1"},Il=n("a",{class:"header-anchor",href:"#var-\u58F0\u660E\u4F1A\u88AB\u63D0\u524D\u5230\u79BB\u4ED6\u6700\u8FD1\u7684\u4F5C\u7528\u57DF\u7684\u6700\u524D\u9762-\u4F46\u662F\u5B83\u7684\u8D4B\u503C\u8BED\u53E5\u5E76\u6CA1\u6709\u63D0\u524D\u3002const-\u548C-let-\u88AB\u8D4B\u4E88\u4E86\u65B0\u7684\u6982\u5FF5-\u6682\u65F6\u6027\u6B7B\u533A-\u3002-\u91CD\u8981\u7684\u662F\u8981\u77E5\u9053\u4E3A\u4EC0\u4E48-typeof-\u4E0D\u518D\u5B89\u5168","aria-hidden":"true"},"#",-1),Tl=s(),Bl=n("code",null,"var",-1),El=s(" \u58F0\u660E\u4F1A\u88AB\u63D0\u524D\u5230\u79BB\u4ED6\u6700\u8FD1\u7684\u4F5C\u7528\u57DF\u7684\u6700\u524D\u9762\uFF0C\u4F46\u662F\u5B83\u7684\u8D4B\u503C\u8BED\u53E5\u5E76\u6CA1\u6709\u63D0\u524D\u3002"),Ll=n("code",null,"const",-1),zl=s(" \u548C "),Pl=n("code",null,"let",-1),Dl=s(" \u88AB\u8D4B\u4E88\u4E86\u65B0\u7684\u6982\u5FF5 "),Jl={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone_and_errors_with_let",target:"_blank",rel:"noopener noreferrer"},Fl=s("\u6682\u65F6\u6027\u6B7B\u533A "),Ml=s("\u3002 \u91CD\u8981\u7684\u662F\u8981\u77E5\u9053\u4E3A\u4EC0\u4E48 "),Gl={href:"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15",target:"_blank",rel:"noopener noreferrer"},Hl=s("typeof \u4E0D\u518D\u5B89\u5168 "),Rl=s("."),Vl=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6211\u4EEC\u77E5\u9053\u8FD9\u4E2A\u4E0D\u4F1A\u5DE5\u4F5C\uFF0C\u5047\u8BBE\u6CA1\u6709\u5B9A\u4E49\u5168\u5C40\u7684 notDefined</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>notDefined<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; throws a ReferenceError</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5728\u4F60\u5F15\u7528\u7684\u5730\u65B9\u4E4B\u540E\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\uFF0C\u4ED6\u4F1A\u6B63\u5E38\u8F93\u51FA\u662F\u56E0\u4E3A\u53D8\u91CF\u63D0\u5347\u3002</span>
<span class="token comment">// \u6CE8\u610F\uFF1A declaredButNotAssigned \u7684\u503C true \u6CA1\u6709\u88AB\u63D0\u5347\u3002</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>
  <span class="token keyword">var</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u89E3\u91CA\u5668\u628A\u53D8\u91CF\u58F0\u660E\u63D0\u5347\u5230\u4F5C\u7528\u57DF\u6700\u524D\u9762\uFF0C</span>
<span class="token comment">// \u53EF\u4EE5\u91CD\u5199\u6210\u5982\u4E0B\u4F8B\u5B50\uFF0C \u4E8C\u8005\u610F\u4E49\u76F8\u540C\u3002</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> declaredButNotAssigned<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>
  declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7528 const\uFF0Clet\u5C31\u4E0D\u4E00\u6837\u4E86\u3002</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; throws a ReferenceError</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; throws a ReferenceError</span>
  <span class="token keyword">const</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u533F\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u548C-var-\u60C5\u51B5\u76F8\u540C\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u533F\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u548C-var-\u60C5\u51B5\u76F8\u540C\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u533F\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u548C <code>var</code> \u60C5\u51B5\u76F8\u540C\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>

  <span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; TypeError anonymous is not a function</span>

  <span class="token comment">// \u8BD1\u8005\u6CE8\uFF0C\u4E0D\u7BA1\u540E\u9762\u662F\u51FD\u6570\u3001\u6570\u5B57\u8FD8\u662F\u5B57\u7B26\u4E32\uFF0C\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u603B\u7ED3\u5C31\u662F\u5B9E\u9645\u4EE3\u7801\u4E2D\u6700\u597D\u4E0D\u8981\u7528 var\u3002</span>
  <span class="token keyword">var</span> <span class="token function-variable function">anonymous</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;anonymous function expression&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5DF2\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u63D0\u5347\u4ED6\u7684\u53D8\u91CF\u540D-\u4E0D\u662F\u51FD\u6570\u540D\u6216\u51FD\u6570\u4F53\u3002" tabindex="-1"><a class="header-anchor" href="#\u5DF2\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u63D0\u5347\u4ED6\u7684\u53D8\u91CF\u540D-\u4E0D\u662F\u51FD\u6570\u540D\u6216\u51FD\u6570\u4F53\u3002" aria-hidden="true">#</a> \u5DF2\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u63D0\u5347\u4ED6\u7684\u53D8\u91CF\u540D\uFF0C\u4E0D\u662F\u51FD\u6570\u540D\u6216\u51FD\u6570\u4F53\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>

  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; TypeError named is not a function</span>

  <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; ReferenceError superPower is not defined</span>

  <span class="token keyword">var</span> <span class="token function-variable function">named</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Flying&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u540D\u548C\u53D8\u91CF\u540D\u4E00\u6837\u662F\u4E5F\u5982\u6B64\u3002</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; undefined</span>

  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; TypeError named is not a function</span>

  <span class="token keyword">var</span> <span class="token function-variable function">named</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;named&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u51FD\u6570\u58F0\u660E\u5219\u63D0\u5347\u4E86\u51FD\u6570\u540D\u548C\u51FD\u6570\u4F53\u3002" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u58F0\u660E\u5219\u63D0\u5347\u4E86\u51FD\u6570\u540D\u548C\u51FD\u6570\u4F53\u3002" aria-hidden="true">#</a> \u51FD\u6570\u58F0\u660E\u5219\u63D0\u5347\u4E86\u51FD\u6570\u540D\u548C\u51FD\u6570\u4F53\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; Flying</span>

  <span class="token keyword">function</span> <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Flying&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),$l=s("\u8BE6\u60C5\u8BF7\u89C1 "),Wl={href:"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/",target:"_blank",rel:"noopener noreferrer"},Ul=s("JavaScript Scoping & Hoisting "),Yl=s("by "),Ql={href:"http://www.adequatelygood.com/",target:"_blank",rel:"noopener noreferrer"},Xl=s("Ben Cherry"),Kl=s("."),Zl=n("h3",{id:"\u6BD4\u8F83\u8FD0\u7B97\u7B26\u4E0E\u76F8\u7B49",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6BD4\u8F83\u8FD0\u7B97\u7B26\u4E0E\u76F8\u7B49","aria-hidden":"true"},"#"),s(" \u6BD4\u8F83\u8FD0\u7B97\u7B26\u4E0E\u76F8\u7B49")],-1),nu={id:"\u3010\u5F3A\u5236\u3011-\u7528-\u548C-\u800C\u4E0D\u662F-\u548C-eslint-eqeqeq",tabindex:"-1"},su=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-\u548C-\u800C\u4E0D\u662F-\u548C-eslint-eqeqeq","aria-hidden":"true"},"#",-1),au=s(),eu=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),tu=s(" \u7528 "),ou=n("code",null,"===",-1),pu=s(" \u548C "),cu=n("code",null,"!==",-1),iu=s(" \u800C\u4E0D\u662F "),lu=n("code",null,"==",-1),uu=s(" \u548C "),ru=n("code",null,"!=",-1),du=s(". eslint: "),ku={href:"http://eslint.org/docs/rules/eqeqeq.html",target:"_blank",rel:"noopener noreferrer"},vu=n("code",null,"eqeqeq",-1),mu=t(`<h4 id="\u3010\u5F3A\u5236\u3011-\u6761\u4EF6\u8BED\u53E5\u5982-if-\u8BED\u53E5\u4F7F\u7528\u5F3A\u5236-toboolean-\u62BD\u8C61\u65B9\u6CD5\u6765\u8BA1\u7B97\u5B83\u4EEC\u7684\u8868\u8FBE\u5F0F-\u5E76\u4E14\u59CB\u7EC8\u9075\u5FAA\u4EE5\u4E0B\u7B80\u5355\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u6761\u4EF6\u8BED\u53E5\u5982-if-\u8BED\u53E5\u4F7F\u7528\u5F3A\u5236-toboolean-\u62BD\u8C61\u65B9\u6CD5\u6765\u8BA1\u7B97\u5B83\u4EEC\u7684\u8868\u8FBE\u5F0F-\u5E76\u4E14\u59CB\u7EC8\u9075\u5FAA\u4EE5\u4E0B\u7B80\u5355\u89C4\u5219" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u6761\u4EF6\u8BED\u53E5\u5982 <code>if</code> \u8BED\u53E5\u4F7F\u7528\u5F3A\u5236 <code>ToBoolean</code> \u62BD\u8C61\u65B9\u6CD5\u6765\u8BA1\u7B97\u5B83\u4EEC\u7684\u8868\u8FBE\u5F0F\uFF0C\u5E76\u4E14\u59CB\u7EC8\u9075\u5FAA\u4EE5\u4E0B\u7B80\u5355\u89C4\u5219\uFF1A</h4><ul><li><p><strong>Objects</strong> \u8BA1\u7B97\u6210 <strong>true</strong></p></li><li><p><strong>Undefined</strong> \u8BA1\u7B97\u6210 <strong>false</strong></p></li><li><p><strong>Null</strong> \u8BA1\u7B97\u6210 <strong>false</strong></p></li><li><p><strong>Booleans</strong> \u8BA1\u7B97\u6210 <strong>the value of the boolean</strong></p></li><li><p><strong>Numbers</strong></p><ul><li><strong>+0, -0, or NaN</strong> \u8BA1\u7B97\u6210 <strong>false</strong></li><li>\u5176\u4ED6 <strong>true</strong></li></ul></li><li><p><strong>Strings</strong></p><ul><li><code>&#39;&#39;</code> \u8BA1\u7B97\u6210 <strong>false</strong></li><li>\u5176\u4ED6 <strong>true</strong></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// true</span>
  <span class="token comment">// \u6570\u7EC4\uFF08\u5373\u4F7F\u662F\u7A7A\u6570\u7EC4\uFF09\u662F\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u4F1A\u8BA1\u7B97\u6210 true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u5E03\u5C14\u503C\u8981\u7528\u7F29\u5199-\u800C\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u8981\u660E\u786E\u4F7F\u7528\u6BD4\u8F83\u64CD\u4F5C\u7B26\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5E03\u5C14\u503C\u8981\u7528\u7F29\u5199-\u800C\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u8981\u660E\u786E\u4F7F\u7528\u6BD4\u8F83\u64CD\u4F5C\u7B26\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5E03\u5C14\u503C\u8981\u7528\u7F29\u5199\uFF0C\u800C\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u8981\u660E\u786E\u4F7F\u7528\u6BD4\u8F83\u64CD\u4F5C\u7B26\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isValid <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),bu=s("\u66F4\u591A\u4FE1\u606F\u8BF7\u89C1 Angus Croll \u7684 "),hu={href:"https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108",target:"_blank",rel:"noopener noreferrer"},_u=s("Truth Equality and JavaScript"),gu=s("\u3002"),fu={id:"\u3010\u63A8\u8350\u3011\u5728-case-\u548C-default-\u5206\u53E5\u91CC\u7528\u5927\u62EC\u53F7\u521B\u5EFA\u4E00\u5757\u5305\u542B\u8BCD\u6CD5\u58F0\u660E\u7684\u533A\u57DF-\u4F8B\u5982-let\u3001const\u3001function-\u548C-class-\u3002eslint-rules-no-case-declarations",tabindex:"-1"},yu=t('<a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5728-case-\u548C-default-\u5206\u53E5\u91CC\u7528\u5927\u62EC\u53F7\u521B\u5EFA\u4E00\u5757\u5305\u542B\u8BCD\u6CD5\u58F0\u660E\u7684\u533A\u57DF-\u4F8B\u5982-let\u3001const\u3001function-\u548C-class-\u3002eslint-rules-no-case-declarations" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5728 <code>case</code> \u548C <code>default</code> \u5206\u53E5\u91CC\u7528\u5927\u62EC\u53F7\u521B\u5EFA\u4E00\u5757\u5305\u542B\u8BCD\u6CD5\u58F0\u660E\u7684\u533A\u57DF\uFF08\u4F8B\u5982\uFF1A<code>let</code>\u3001<code>const</code>\u3001<code>function</code> \u548C <code>class</code>\uFF09\u3002eslint rules: ',16),wu={href:"http://eslint.org/docs/rules/no-case-declarations.html",target:"_blank",rel:"noopener noreferrer"},xu=n("code",null,"no-case-declarations",-1),ju=s("."),qu=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8BCD\u6CD5\u58F0\u660E\u5728\u6574\u4E2A <code>switch</code> \u7684\u4EE3\u7801\u5757\u91CC\u90FD\u53EF\u89C1\uFF0C\u4F46\u662F\u53EA\u6709\u5F53\u5176\u88AB\u5206\u914D\u540E\u624D\u4F1A\u521D\u59CB\u5316\uFF0C\u4EC5\u5F53\u8FD9\u4E2A <code>case</code> \u88AB\u6267\u884C\u65F6\u624D\u88AB\u521D\u59CB\u5316\u3002\u5F53\u591A\u4E2A <code>case</code> \u5206\u53E5\u8BD5\u56FE\u5B9A\u4E49\u540C\u4E00\u4E2A\u5BF9\u8C61\u65F6\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
    <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
    <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Su={id:"\u3010\u5F3A\u5236\u3011-\u4E09\u5143\u8868\u8FBE\u5F0F\u4E0D\u5E94\u8BE5\u5D4C\u5957-\u901A\u5E38\u662F\u5355\u884C\u8868\u8FBE\u5F0F\u3002eslint-rules-no-nested-ternary",tabindex:"-1"},Nu=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E09\u5143\u8868\u8FBE\u5F0F\u4E0D\u5E94\u8BE5\u5D4C\u5957-\u901A\u5E38\u662F\u5355\u884C\u8868\u8FBE\u5F0F\u3002eslint-rules-no-nested-ternary","aria-hidden":"true"},"#",-1),Au=s(),Ou=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Cu=s(" \u4E09\u5143\u8868\u8FBE\u5F0F\u4E0D\u5E94\u8BE5\u5D4C\u5957\uFF0C\u901A\u5E38\u662F\u5355\u884C\u8868\u8FBE\u5F0F\u3002eslint rules: "),Iu={href:"http://eslint.org/docs/rules/no-nested-ternary.html",target:"_blank",rel:"noopener noreferrer"},Tu=n("code",null,"no-nested-ternary",-1),Bu=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> maybe1 <span class="token operator">&gt;</span> maybe2
  <span class="token operator">?</span> <span class="token string">&quot;bar&quot;</span>
  <span class="token operator">:</span> value1 <span class="token operator">&gt;</span> value2 <span class="token operator">?</span> <span class="token string">&quot;baz&quot;</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">// better</span>
<span class="token keyword">const</span> maybeNull <span class="token operator">=</span> value1 <span class="token operator">&gt;</span> value2 <span class="token operator">?</span> <span class="token string">&#39;baz&#39;</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> maybe1 <span class="token operator">&gt;</span> maybe2
<span class="token operator">?</span> <span class="token string">&#39;bar&#39;</span>
  <span class="token operator">:</span> maybeNull<span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> maybeNull <span class="token operator">=</span> value1 <span class="token operator">&gt;</span> value2 <span class="token operator">?</span> <span class="token string">&#39;baz&#39;</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> maybe1 <span class="token operator">&gt;</span> maybe2 <span class="token operator">?</span> <span class="token string">&#39;bar&#39;</span> <span class="token operator">:</span> maybeNull<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Eu={id:"\u3010\u5F3A\u5236\u3011-\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u4E09\u5143\u8868\u8FBE\u5F0F\u3002eslint-rules-no-unneeded-ternary",tabindex:"-1"},Lu=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u4E09\u5143\u8868\u8FBE\u5F0F\u3002eslint-rules-no-unneeded-ternary","aria-hidden":"true"},"#",-1),zu=s(),Pu=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Du=s(" \u907F\u514D\u4E0D\u5FC5\u8981\u7684\u4E09\u5143\u8868\u8FBE\u5F0F\u3002eslint rules: "),Ju={href:"http://eslint.org/docs/rules/no-unneeded-ternary.html",target:"_blank",rel:"noopener noreferrer"},Fu=n("code",null,"no-unneeded-ternary",-1),Mu=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> a <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> c <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> c <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> a <span class="token operator">||</span> b<span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>c<span class="token punctuation">;</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token operator">!</span>c<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Gu={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5706\u62EC\u53F7\u6765\u7EC4\u5408\u64CD\u4F5C\u7B26\u3002-\u53EA\u6709\u5F53\u6807\u51C6\u7684\u7B97\u672F\u8FD0\u7B97\u7B26-\u548C-\u5E76\u4E14\u5B83\u4EEC\u7684\u4F18\u5148\u7EA7\u663E\u800C\u6613\u89C1\u65F6-\u624D\u53EF\u4EE5\u4E0D\u7528\u5706\u62EC\u53F7\u62EC\u8D77\u6765\u3002eslint-no-mixed-operators",tabindex:"-1"},Hu=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5706\u62EC\u53F7\u6765\u7EC4\u5408\u64CD\u4F5C\u7B26\u3002-\u53EA\u6709\u5F53\u6807\u51C6\u7684\u7B97\u672F\u8FD0\u7B97\u7B26-\u548C-\u5E76\u4E14\u5B83\u4EEC\u7684\u4F18\u5148\u7EA7\u663E\u800C\u6613\u89C1\u65F6-\u624D\u53EF\u4EE5\u4E0D\u7528\u5706\u62EC\u53F7\u62EC\u8D77\u6765\u3002eslint-no-mixed-operators","aria-hidden":"true"},"#",-1),Ru=s(),Vu=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),$u=s(" \u7528\u5706\u62EC\u53F7\u6765\u7EC4\u5408\u64CD\u4F5C\u7B26\u3002 \u53EA\u6709\u5F53\u6807\u51C6\u7684\u7B97\u672F\u8FD0\u7B97\u7B26\uFF08"),Wu=n("code",null,"+",-1),Uu=s(", "),Yu=n("code",null,"-",-1),Qu=s(", "),Xu=n("code",null,"*",-1),Ku=s(", \u548C "),Zu=n("code",null,"/",-1),nr=s("\uFF09\uFF0C \u5E76\u4E14\u5B83\u4EEC\u7684\u4F18\u5148\u7EA7\u663E\u800C\u6613\u89C1\u65F6\uFF0C\u624D\u53EF\u4EE5\u4E0D\u7528\u5706\u62EC\u53F7\u62EC\u8D77\u6765\u3002eslint: "),sr={href:"https://eslint.org/docs/rules/no-mixed-operators.html",target:"_blank",rel:"noopener noreferrer"},ar=n("code",null,"no-mixed-operators",-1),er=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u63D0\u9AD8\u4E86\u53EF\u8BFB\u6027\uFF0C\u5E76\u4E14\u660E\u786E\u4E86\u5F00\u53D1\u8005\u7684\u610F\u56FE\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> a <span class="token operator">&amp;&amp;</span> b <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> d <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> a <span class="token operator">**</span> b <span class="token operator">-</span> <span class="token number">5</span> <span class="token operator">%</span> d<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token comment">// \u522B\u4EBA\u4F1A\u9677\u5165(a || b) &amp;&amp; c \u7684\u8FF7\u60D1\u4E2D</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">||</span> b <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> d<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> c <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>d <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">**</span> b<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">%</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">||</span> <span class="token punctuation">(</span>b <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> d<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token operator">/</span> c <span class="token operator">*</span> d<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5757" tabindex="-1"><a class="header-anchor" href="#\u5757" aria-hidden="true">#</a> \u5757</h3>`,3),tr={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5927\u62EC\u53F7\u5305\u88F9\u591A\u884C\u4EE3\u7801\u5757\u3002-eslint-nonblock-statement-body-position",tabindex:"-1"},or=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5927\u62EC\u53F7\u5305\u88F9\u591A\u884C\u4EE3\u7801\u5757\u3002-eslint-nonblock-statement-body-position","aria-hidden":"true"},"#",-1),pr=s(),cr=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ir=s(" \u7528\u5927\u62EC\u53F7\u5305\u88F9\u591A\u884C\u4EE3\u7801\u5757\u3002 eslint: "),lr={href:"https://eslint.org/docs/rules/nonblock-statement-body-position",target:"_blank",rel:"noopener noreferrer"},ur=n("code",null,"nonblock-statement-body-position",-1),rr=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),dr={id:"\u3010\u5F3A\u5236\u3011-if-\u8868\u8FBE\u5F0F\u7684-else\u548C-if-\u7684\u53F3\u5927\u62EC\u53F7\u5728\u4E00\u884C\u3002eslint-brace-style",tabindex:"-1"},kr=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-if-\u8868\u8FBE\u5F0F\u7684-else\u548C-if-\u7684\u53F3\u5927\u62EC\u53F7\u5728\u4E00\u884C\u3002eslint-brace-style","aria-hidden":"true"},"#",-1),vr=s(),mr=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),br=s(),hr=n("code",null,"if",-1),_r=s(" \u8868\u8FBE\u5F0F\u7684 "),gr=n("code",null,"else",-1),fr=s("\u548C "),yr=n("code",null,"if",-1),wr=s(" \u7684\u53F3\u5927\u62EC\u53F7\u5728\u4E00\u884C\u3002eslint: "),xr={href:"http://eslint.org/docs/rules/brace-style.html",target:"_blank",rel:"noopener noreferrer"},jr=n("code",null,"brace-style",-1),qr=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">thing2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">thing3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">thing2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">thing3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Sr={id:"\u3010\u5F3A\u5236\u3011-\u5982\u679C-if-\u8BED\u53E5\u4E2D\u603B\u662F\u9700\u8981\u7528-return-\u8FD4\u56DE-\u90A3\u540E\u7EED\u7684-else-\u5C31\u4E0D\u9700\u8981\u5199\u4E86\u3002-if-\u5757\u4E2D\u5305\u542B-return-\u5B83\u540E\u9762\u7684-else-if-\u5757\u4E2D\u4E5F\u5305\u542B\u4E86-return-\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u628A-return-\u5206\u5230\u591A\u4E2A-if-\u8BED\u53E5\u5757\u4E2D\u3002-eslint-no-else-return",tabindex:"-1"},Nr=t('<a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5982\u679C-if-\u8BED\u53E5\u4E2D\u603B\u662F\u9700\u8981\u7528-return-\u8FD4\u56DE-\u90A3\u540E\u7EED\u7684-else-\u5C31\u4E0D\u9700\u8981\u5199\u4E86\u3002-if-\u5757\u4E2D\u5305\u542B-return-\u5B83\u540E\u9762\u7684-else-if-\u5757\u4E2D\u4E5F\u5305\u542B\u4E86-return-\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u628A-return-\u5206\u5230\u591A\u4E2A-if-\u8BED\u53E5\u5757\u4E2D\u3002-eslint-no-else-return" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5982\u679C <code>if</code> \u8BED\u53E5\u4E2D\u603B\u662F\u9700\u8981\u7528 <code>return</code> \u8FD4\u56DE\uFF0C\u90A3\u540E\u7EED\u7684 <code>else</code> \u5C31\u4E0D\u9700\u8981\u5199\u4E86\u3002 <code>if</code> \u5757\u4E2D\u5305\u542B <code>return</code>\uFF0C \u5B83\u540E\u9762\u7684 <code>else if</code> \u5757\u4E2D\u4E5F\u5305\u542B\u4E86 <code>return</code>\uFF0C \u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u628A <code>return</code> \u5206\u5230\u591A\u4E2A <code>if</code> \u8BED\u53E5\u5757\u4E2D\u3002 eslint: ',22),Ar={href:"https://eslint.org/docs/rules/no-else-return",target:"_blank",rel:"noopener noreferrer"},Or=n("code",null,"no-else-return",-1),Cr=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">cats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">dogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">cats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">dogs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> z<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A7\u5236\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u8BED\u53E5" aria-hidden="true">#</a> \u63A7\u5236\u8BED\u53E5</h3><p>\u5F53\u4F60\u7684\u63A7\u5236\u8BED\u53E5\uFF08<code>if</code>, <code>while</code> \u7B49\uFF09\u592A\u957F\u6216\u8005\u8D85\u8FC7\u6700\u5927\u957F\u5EA6\u9650\u5236\u7684\u65F6\u5019\uFF0C\u628A\u6BCF\u4E00\u4E2A\uFF08\u7EC4\uFF09\u5224\u65AD\u6761\u4EF6\u653E\u5728\u5355\u72EC\u4E00\u884C\u91CC\u3002\u903B\u8F91\u64CD\u4F5C\u7B26\u653E\u5728\u884C\u9996\u3002</p><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u628A\u903B\u8F91\u64CD\u4F5C\u7B26\u653E\u5728\u884C\u9996\u662F\u8BA9\u64CD\u4F5C\u7B26\u7684\u5BF9\u9F50\u65B9\u5F0F\u548C\u94FE\u5F0F\u51FD\u6570\u4FDD\u6301\u4E00\u81F4\u3002\u8FD9\u63D0\u9AD8\u4E86\u53EF\u8BFB\u6027\uFF0C\u4E5F\u8BA9\u590D\u6742\u903B\u8F91\u66F4\u6E05\u6670\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">123</span> <span class="token operator">||</span> bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">doesItLookGoodWhenItBecomesThatLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isThisReallyHappening</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">123</span> <span class="token operator">&amp;&amp;</span>
  bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">123</span>
  <span class="token operator">&amp;&amp;</span> bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
  foo <span class="token operator">===</span> <span class="token number">123</span> <span class="token operator">&amp;&amp;</span>
  bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
  foo <span class="token operator">===</span> <span class="token number">123</span>
  <span class="token operator">&amp;&amp;</span> bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
  <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">123</span> <span class="token operator">||</span> bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">&amp;&amp;</span> <span class="token function">doesItLookGoodWhenItBecomesThatLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">&amp;&amp;</span> <span class="token function">isThisReallyHappening</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">123</span> <span class="token operator">&amp;&amp;</span> bar <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528\u9009\u62E9\u64CD\u4F5C\u7B26\u4EE3\u66FF\u63A7\u5236\u8BED\u53E5\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528\u9009\u62E9\u64CD\u4F5C\u7B26\u4EE3\u66FF\u63A7\u5236\u8BED\u53E5\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u4E0D\u8981\u7528\u9009\u62E9\u64CD\u4F5C\u7B26\u4EE3\u66FF\u63A7\u5236\u8BED\u53E5\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token operator">!</span>isRunning <span class="token operator">&amp;&amp;</span> <span class="token function">startRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">startRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u91CA" aria-hidden="true">#</a> \u6CE8\u91CA</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u591A\u884C\u6CE8\u91CA\u7528-\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u591A\u884C\u6CE8\u91CA\u7528-\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u591A\u884C\u6CE8\u91CA\u7528 <code>/** ... */</code>\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token comment">// make() returns a new element</span>
<span class="token comment">// based on the passed in tag name</span>
<span class="token comment">//</span>
<span class="token comment">// @param {String} tag</span>
<span class="token comment">// @return {Element} element</span>
<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token doc-comment comment">/**
 * make() returns a new element
 * based on the passed-in tag name
 */</span>
<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5355\u884C\u6CE8\u91CA\u7528-\u5C06\u5355\u884C\u6CE8\u91CA\u653E\u5728\u88AB\u6CE8\u91CA\u533A\u57DF\u4E0A\u9762\u3002\u5982\u679C\u6CE8\u91CA\u4E0D\u662F\u5728\u7B2C\u4E00\u884C-\u90A3\u4E48\u6CE8\u91CA\u524D\u9762\u5C31\u7A7A\u4E00\u884C\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5355\u884C\u6CE8\u91CA\u7528-\u5C06\u5355\u884C\u6CE8\u91CA\u653E\u5728\u88AB\u6CE8\u91CA\u533A\u57DF\u4E0A\u9762\u3002\u5982\u679C\u6CE8\u91CA\u4E0D\u662F\u5728\u7B2C\u4E00\u884C-\u90A3\u4E48\u6CE8\u91CA\u524D\u9762\u5C31\u7A7A\u4E00\u884C\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5355\u884C\u6CE8\u91CA\u7528 <code>//</code>\uFF0C\u5C06\u5355\u884C\u6CE8\u91CA\u653E\u5728\u88AB\u6CE8\u91CA\u533A\u57DF\u4E0A\u9762\u3002\u5982\u679C\u6CE8\u91CA\u4E0D\u662F\u5728\u7B2C\u4E00\u884C\uFF0C\u90A3\u4E48\u6CE8\u91CA\u524D\u9762\u5C31\u7A7A\u4E00\u884C\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// is current tab</span>

<span class="token comment">// good</span>
<span class="token comment">// is current tab</span>
<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetching type...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// set the default type to &#39;no type&#39;</span>
  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_type <span class="token operator">||</span> <span class="token string">&#39;no type&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> type<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetching type...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// set the default type to &#39;no type&#39;</span>
  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_type <span class="token operator">||</span> <span class="token string">&#39;no type&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> type<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// also good</span>
<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// set the default type to &#39;no type&#39;</span>
  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_type <span class="token operator">||</span> <span class="token string">&#39;no type&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> type<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),Ir={id:"\u3010\u5F3A\u5236\u3011-\u6240\u6709\u6CE8\u91CA\u5F00\u5934\u7A7A\u4E00\u683C-\u65B9\u4FBF\u9605\u8BFB\u3002eslint-spaced-comment",tabindex:"-1"},Tr=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u6240\u6709\u6CE8\u91CA\u5F00\u5934\u7A7A\u4E00\u683C-\u65B9\u4FBF\u9605\u8BFB\u3002eslint-spaced-comment","aria-hidden":"true"},"#",-1),Br=s(),Er=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Lr=s(" \u6240\u6709\u6CE8\u91CA\u5F00\u5934\u7A7A\u4E00\u683C\uFF0C\u65B9\u4FBF\u9605\u8BFB\u3002eslint: "),zr={href:"http://eslint.org/docs/rules/spaced-comment",target:"_blank",rel:"noopener noreferrer"},Pr=n("code",null,"spaced-comment",-1),Dr=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token comment">//is current tab</span>
<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token comment">// is current tab</span>
<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token doc-comment comment">/**
 *make() returns a new element
 *based on the passed-in tag name
 */</span>
<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token doc-comment comment">/**
 * make() returns a new element
 * based on the passed-in tag name
 */</span>
<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5728\u4F60\u7684\u6CE8\u91CA\u524D\u4F7F\u7528-fixme-\u6216-todo-\u524D\u7F00-\u8FD9\u6709\u52A9\u4E8E\u5176\u4ED6\u5F00\u53D1\u4EBA\u5458\u5FEB\u901F\u7406\u89E3\u4F60\u6307\u51FA\u7684\u9700\u8981\u4FEE\u590D\u7684\u95EE\u9898-\u6216\u8005\u60A8\u5EFA\u8BAE\u9700\u8981\u5B9E\u73B0\u7684\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002-\u8FD9\u4E9B\u4E0D\u540C\u4E8E\u5E38\u89C4\u6CE8\u91CA-\u5B83\u4EEC\u662F\u6709\u660E\u786E\u542B\u4E49\u7684\u3002fixme-\u9700\u8981\u4FEE\u590D\u8FD9\u4E2A\u95EE\u9898\u6216todo-\u9700\u8981\u5B9E\u73B0\u7684\u529F\u80FD\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5728\u4F60\u7684\u6CE8\u91CA\u524D\u4F7F\u7528-fixme-\u6216-todo-\u524D\u7F00-\u8FD9\u6709\u52A9\u4E8E\u5176\u4ED6\u5F00\u53D1\u4EBA\u5458\u5FEB\u901F\u7406\u89E3\u4F60\u6307\u51FA\u7684\u9700\u8981\u4FEE\u590D\u7684\u95EE\u9898-\u6216\u8005\u60A8\u5EFA\u8BAE\u9700\u8981\u5B9E\u73B0\u7684\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002-\u8FD9\u4E9B\u4E0D\u540C\u4E8E\u5E38\u89C4\u6CE8\u91CA-\u5B83\u4EEC\u662F\u6709\u660E\u786E\u542B\u4E49\u7684\u3002fixme-\u9700\u8981\u4FEE\u590D\u8FD9\u4E2A\u95EE\u9898\u6216todo-\u9700\u8981\u5B9E\u73B0\u7684\u529F\u80FD\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5728\u4F60\u7684\u6CE8\u91CA\u524D\u4F7F\u7528 <code>FIXME</code> \u6216 <code>TODO</code> \u524D\u7F00\uFF0C\u8FD9\u6709\u52A9\u4E8E\u5176\u4ED6\u5F00\u53D1\u4EBA\u5458\u5FEB\u901F\u7406\u89E3\u4F60\u6307\u51FA\u7684\u9700\u8981\u4FEE\u590D\u7684\u95EE\u9898\uFF0C \u6216\u8005\u60A8\u5EFA\u8BAE\u9700\u8981\u5B9E\u73B0\u7684\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002 \u8FD9\u4E9B\u4E0D\u540C\u4E8E\u5E38\u89C4\u6CE8\u91CA\uFF0C\u5B83\u4EEC\u662F\u6709\u660E\u786E\u542B\u4E49\u7684\u3002<code>FIXME\uFF1A\u9700\u8981\u4FEE\u590D\u8FD9\u4E2A\u95EE\u9898</code>\u6216<code>TODO\uFF1A\u9700\u8981\u5B9E\u73B0\u7684\u529F\u80FD</code>\u3002</h4><h4 id="\u3010\u5F3A\u5236\u3011-\u7528-fixme-\u7ED9\u95EE\u9898\u505A\u6CE8\u91CA\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u7528-fixme-\u7ED9\u95EE\u9898\u505A\u6CE8\u91CA\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u7528 <code>// FIXME:</code> \u7ED9\u95EE\u9898\u505A\u6CE8\u91CA\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token keyword">extends</span> <span class="token class-name">Abacus</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// FIXME: shouldn&#39;t use a global here</span>
    total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u7528-todo-\u53BB\u6CE8\u91CA\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u7528-todo-\u53BB\u6CE8\u91CA\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u7528 <code>// TODO:</code> \u53BB\u6CE8\u91CA\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token keyword">extends</span> <span class="token class-name">Abacus</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// TODO: total should be configurable by an options param</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u683C" aria-hidden="true">#</a> \u7A7A\u683C</h3>`,7),Jr={id:"\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u7F29\u8FDB\u4F7F\u7528\u4E24\u4E2A\u7A7A\u683C\u3002eslint-indent",tabindex:"-1"},Fr=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u7F29\u8FDB\u4F7F\u7528\u4E24\u4E2A\u7A7A\u683C\u3002eslint-indent","aria-hidden":"true"},"#",-1),Mr=s(),Gr=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hr=s(" \u4E00\u4E2A\u7F29\u8FDB\u4F7F\u7528\u4E24\u4E2A\u7A7A\u683C\u3002eslint: "),Rr={href:"http://eslint.org/docs/rules/indent.html",target:"_blank",rel:"noopener noreferrer"},Vr=n("code",null,"indent",-1),$r=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
\u2219\u2219\u2219\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
\u2219\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Wr={id:"\u3010\u63A8\u8350\u3011\u5728\u5927\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002eslint-space-before-blocks",tabindex:"-1"},Ur=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u5927\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002eslint-space-before-blocks","aria-hidden":"true"},"#",-1),Yr=s(),Qr=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Xr=s("\u5728\u5927\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002eslint: "),Kr={href:"http://eslint.org/docs/rules/space-before-blocks.html",target:"_blank",rel:"noopener noreferrer"},Zr=n("code",null,"space-before-blocks",-1),nd=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
dog<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;1 year&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">breed</span><span class="token operator">:</span> <span class="token string">&#39;Bernese Mountain Dog&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
dog<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;1 year&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">breed</span><span class="token operator">:</span> <span class="token string">&#39;Bernese Mountain Dog&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),sd={id:"\u3010\u63A8\u8350\u3011\u5728\u63A7\u5236\u8BED\u53E5-if-while-\u7B49-\u7684\u5706\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002\u5728\u51FD\u6570\u8C03\u7528\u548C\u5B9A\u4E49\u65F6-\u53C2\u6570\u5217\u8868\u548C\u51FD\u6570\u540D\u4E4B\u95F4\u4E0D\u7A7A\u683C\u3002-eslint-keyword-spacing",tabindex:"-1"},ad=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u63A7\u5236\u8BED\u53E5-if-while-\u7B49-\u7684\u5706\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002\u5728\u51FD\u6570\u8C03\u7528\u548C\u5B9A\u4E49\u65F6-\u53C2\u6570\u5217\u8868\u548C\u51FD\u6570\u540D\u4E4B\u95F4\u4E0D\u7A7A\u683C\u3002-eslint-keyword-spacing","aria-hidden":"true"},"#",-1),ed=s(),td=n("code",null,"\u3010\u63A8\u8350\u3011",-1),od=s("\u5728\u63A7\u5236\u8BED\u53E5\uFF08"),pd=n("code",null,"if",-1),cd=s(", "),id=n("code",null,"while",-1),ld=s(" \u7B49\uFF09\u7684\u5706\u62EC\u53F7\u524D\u7A7A\u4E00\u683C\u3002\u5728\u51FD\u6570\u8C03\u7528\u548C\u5B9A\u4E49\u65F6\uFF0C\u53C2\u6570\u5217\u8868\u548C\u51FD\u6570\u540D\u4E4B\u95F4\u4E0D\u7A7A\u683C\u3002 eslint: "),ud={href:"http://eslint.org/docs/rules/keyword-spacing.html",target:"_blank",rel:"noopener noreferrer"},rd=n("code",null,"keyword-spacing",-1),dd=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>isJedi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fight</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isJedi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">fight</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span> <span class="token punctuation">(</span><span class="token string">&#39;Swooosh!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Swooosh!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),kd={id:"\u3010\u63A8\u8350\u3011\u7528\u7A7A\u683C\u6765\u9694\u5F00\u8FD0\u7B97\u7B26\u3002eslint-space-infix-ops",tabindex:"-1"},vd=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u7528\u7A7A\u683C\u6765\u9694\u5F00\u8FD0\u7B97\u7B26\u3002eslint-space-infix-ops","aria-hidden":"true"},"#",-1),md=s(),bd=n("code",null,"\u3010\u63A8\u8350\u3011",-1),hd=s("\u7528\u7A7A\u683C\u6765\u9694\u5F00\u8FD0\u7B97\u7B26\u3002eslint: "),_d={href:"http://eslint.org/docs/rules/space-infix-ops.html",target:"_blank",rel:"noopener noreferrer"},gd=n("code",null,"space-infix-ops",-1),fd=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> x<span class="token operator">=</span>y<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> y <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),yd={id:"\u3010\u63A8\u8350\u3011\u6587\u4EF6\u7ED3\u5C3E\u7A7A\u4E00\u884C\u3002eslint-eol-last",tabindex:"-1"},wd=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u6587\u4EF6\u7ED3\u5C3E\u7A7A\u4E00\u884C\u3002eslint-eol-last","aria-hidden":"true"},"#",-1),xd=s(),jd=n("code",null,"\u3010\u63A8\u8350\u3011",-1),qd=s("\u6587\u4EF6\u7ED3\u5C3E\u7A7A\u4E00\u884C\u3002eslint: "),Sd={href:"https://github.com/eslint/eslint/blob/master/docs/rules/eol-last.md",target:"_blank",rel:"noopener noreferrer"},Nd=n("code",null,"eol-last",-1),Ad=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Od={id:"\u3010\u5F3A\u5236\u3011-\u5F53\u51FA\u73B0\u957F\u7684\u65B9\u6CD5\u94FE\u5F0F\u8C03\u7528\u65F6-2\u4E2A-\u7528\u7F29\u8FDB\u3002\u7528\u70B9\u5F00\u5934\u5F3A\u8C03\u8BE5\u884C\u662F\u4E00\u4E2A\u65B9\u6CD5\u8C03\u7528-\u800C\u4E0D\u662F\u4E00\u4E2A\u65B0\u7684\u8BED\u53E5\u3002eslint-newline-per-chained-callno-whitespace-before-property",tabindex:"-1"},Cd=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5F53\u51FA\u73B0\u957F\u7684\u65B9\u6CD5\u94FE\u5F0F\u8C03\u7528\u65F6-2\u4E2A-\u7528\u7F29\u8FDB\u3002\u7528\u70B9\u5F00\u5934\u5F3A\u8C03\u8BE5\u884C\u662F\u4E00\u4E2A\u65B9\u6CD5\u8C03\u7528-\u800C\u4E0D\u662F\u4E00\u4E2A\u65B0\u7684\u8BED\u53E5\u3002eslint-newline-per-chained-callno-whitespace-before-property","aria-hidden":"true"},"#",-1),Id=s(),Td=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Bd=s(" \u5F53\u51FA\u73B0\u957F\u7684\u65B9\u6CD5\u94FE\u5F0F\u8C03\u7528\u65F6\uFF08>2\u4E2A\uFF09\u7528\u7F29\u8FDB\u3002\u7528\u70B9\u5F00\u5934\u5F3A\u8C03\u8BE5\u884C\u662F\u4E00\u4E2A\u65B9\u6CD5\u8C03\u7528\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u65B0\u7684\u8BED\u53E5\u3002eslint: "),Ed={href:"http://eslint.org/docs/rules/newline-per-chained-call",target:"_blank",rel:"noopener noreferrer"},Ld=n("code",null,"newline-per-chained-call",-1),zd={href:"http://eslint.org/docs/rules/no-whitespace-before-property",target:"_blank",rel:"noopener noreferrer"},Pd=n("code",null,"no-whitespace-before-property",-1),Dd=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#items&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.selected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#items&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.selected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#items&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.selected&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.open&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> leds <span class="token operator">=</span> stage<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">&#39;.led&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;svg:svg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">classed</span><span class="token punctuation">(</span><span class="token string">&#39;led&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;svg:g&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>radius <span class="token operator">+</span> margin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>radius <span class="token operator">+</span> margin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>tron<span class="token punctuation">.</span>led<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> leds <span class="token operator">=</span> stage<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">&#39;.led&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;svg:svg&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">classed</span><span class="token punctuation">(</span><span class="token string">&#39;led&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;svg:g&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>radius <span class="token operator">+</span> margin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>radius <span class="token operator">+</span> margin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>tron<span class="token punctuation">.</span>led<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> leds <span class="token operator">=</span> stage<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">&#39;.led&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u5728\u4E00\u4E2A\u4EE3\u7801\u5757\u540E\u4E0B\u4E00\u6761\u8BED\u53E5\u524D\u7A7A\u4E00\u884C\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5728\u4E00\u4E2A\u4EE3\u7801\u5757\u540E\u4E0B\u4E00\u6761\u8BED\u53E5\u524D\u7A7A\u4E00\u884C\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5728\u4E00\u4E2A\u4EE3\u7801\u5757\u540E\u4E0B\u4E00\u6761\u8BED\u53E5\u524D\u7A7A\u4E00\u884C\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> baz<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">return</span> baz<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> obj<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> obj<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> arr<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> arr<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Jd={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u7A7A\u767D\u884C\u586B\u5145\u5757\u3002eslint-padded-blocks",tabindex:"-1"},Fd=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u7528\u7A7A\u767D\u884C\u586B\u5145\u5757\u3002eslint-padded-blocks","aria-hidden":"true"},"#",-1),Md=s(),Gd=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hd=s(" \u4E0D\u8981\u7528\u7A7A\u767D\u884C\u586B\u5145\u5757\u3002eslint: "),Rd={href:"http://eslint.org/docs/rules/padded-blocks.html",target:"_blank",rel:"noopener noreferrer"},Vd=n("code",null,"padded-blocks",-1),$d=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// also bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>qux<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>qux<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Wd={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5728\u4EE3\u7801\u4E4B\u95F4\u4F7F\u7528\u591A\u4E2A\u7A7A\u767D\u884C\u586B\u5145\u3002eslint-no-multiple-empty-lines",tabindex:"-1"},Ud=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u5728\u4EE3\u7801\u4E4B\u95F4\u4F7F\u7528\u591A\u4E2A\u7A7A\u767D\u884C\u586B\u5145\u3002eslint-no-multiple-empty-lines","aria-hidden":"true"},"#",-1),Yd=s(),Qd=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Xd=s(" \u4E0D\u8981\u5728\u4EE3\u7801\u4E4B\u95F4\u4F7F\u7528\u591A\u4E2A\u7A7A\u767D\u884C\u586B\u5145\u3002eslint: "),Kd={href:"https://eslint.org/docs/rules/no-multiple-empty-lines",target:"_blank",rel:"noopener noreferrer"},Zd=n("code",null,"no-multiple-empty-lines",-1),nk=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fullName<span class="token punctuation">,</span> email<span class="token punctuation">,</span> birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fullName <span class="token operator">=</span> fullName<span class="token punctuation">;</span>


    <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>


    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token parameter">birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span>today<span class="token punctuation">,</span> birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token parameter">today<span class="token punctuation">,</span> birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ..</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fullName<span class="token punctuation">,</span> email<span class="token punctuation">,</span> birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fullName <span class="token operator">=</span> fullName<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token parameter">birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token function">getAge</span><span class="token punctuation">(</span>today<span class="token punctuation">,</span> birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token parameter">today<span class="token punctuation">,</span> birthday</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ..</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),sk={id:"\u3010\u5F3A\u5236\u3011-\u5706\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002eslint-space-in-parens",tabindex:"-1"},ak=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5706\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002eslint-space-in-parens","aria-hidden":"true"},"#",-1),ek=s(),tk=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ok=s(" \u5706\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002eslint: "),pk={href:"http://eslint.org/docs/rules/space-in-parens.html",target:"_blank",rel:"noopener noreferrer"},ck=n("code",null,"space-in-parens",-1),ik=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span> <span class="token parameter">foo</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> foo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> foo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> foo <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),lk={id:"\u3010\u5F3A\u5236\u3011-\u65B9\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002-eslint-array-bracket-spacing",tabindex:"-1"},uk=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u65B9\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002-eslint-array-bracket-spacing","aria-hidden":"true"},"#",-1),rk=s(),dk=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),kk=s(" \u65B9\u62EC\u53F7\u91CC\u4E0D\u8981\u52A0\u7A7A\u683C\u3002 eslint: "),vk={href:"http://eslint.org/docs/rules/array-bracket-spacing.html",target:"_blank",rel:"noopener noreferrer"},mk=n("code",null,"array-bracket-spacing",-1),bk=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good\uFF0C\u9017\u53F7\u5206\u9694\u7B26\u540E\u8FD8\u662F\u8981\u7A7A\u683C\u7684\u3002</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),hk={id:"\u3010\u5F3A\u5236\u3011-\u82B1\u62EC\u53F7\u91CC\u52A0\u7A7A\u683C-\u3002eslint-object-curly-spacing",tabindex:"-1"},_k=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u82B1\u62EC\u53F7\u91CC\u52A0\u7A7A\u683C-\u3002eslint-object-curly-spacing","aria-hidden":"true"},"#",-1),gk=s(),fk=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),yk=s(" \u82B1\u62EC\u53F7\u91CC\u52A0\u7A7A\u683C \u3002eslint: "),wk={href:"http://eslint.org/docs/rules/object-curly-spacing.html",target:"_blank",rel:"noopener noreferrer"},xk=n("code",null,"object-curly-spacing",-1),jk=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">clark</span><span class="token operator">:</span> <span class="token string">&#39;kent&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">clark</span><span class="token operator">:</span> <span class="token string">&#39;kent&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),qk={id:"\u3010\u5F3A\u5236\u3011-\u907F\u514D\u4E00\u884C\u4EE3\u7801\u8D85\u8FC7100\u4E2A\u5B57\u7B26-\u5305\u542B\u7A7A\u683C-\u3002\u6CE8\u610F-\u5BF9\u4E8E-\u4E0A\u9762-\u957F\u5B57\u7B26\u4E32\u4E0D\u53D7\u6B64\u89C4\u5219\u9650\u5236-\u4E0D\u5E94\u6362\u884C\u3002-eslint-max-len",tabindex:"-1"},Sk=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u4E00\u884C\u4EE3\u7801\u8D85\u8FC7100\u4E2A\u5B57\u7B26-\u5305\u542B\u7A7A\u683C-\u3002\u6CE8\u610F-\u5BF9\u4E8E-\u4E0A\u9762-\u957F\u5B57\u7B26\u4E32\u4E0D\u53D7\u6B64\u89C4\u5219\u9650\u5236-\u4E0D\u5E94\u6362\u884C\u3002-eslint-max-len","aria-hidden":"true"},"#",-1),Nk=s(),Ak=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Ok=s(" \u907F\u514D\u4E00\u884C\u4EE3\u7801\u8D85\u8FC7100\u4E2A\u5B57\u7B26\uFF08\u5305\u542B\u7A7A\u683C\uFF09\u3002\u6CE8\u610F\uFF1A\u5BF9\u4E8E "),Ck={href:"http://fe.dev.kdshc.com/docs.html#strings--line-length",target:"_blank",rel:"noopener noreferrer"},Ik=s("\u4E0A\u9762"),Tk=s("\uFF0C\u957F\u5B57\u7B26\u4E32\u4E0D\u53D7\u6B64\u89C4\u5219\u9650\u5236\uFF0C\u4E0D\u5E94\u6362\u884C\u3002 eslint: "),Bk={href:"http://eslint.org/docs/rules/max-len.html",target:"_blank",rel:"noopener noreferrer"},Ek=n("code",null,"max-len",-1),Lk=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u6837\u786E\u4FDD\u53EF\u8BFB\u6027\u548C\u53EF\u7EF4\u62A4\u6027\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> jsonData <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">.</span>quux <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">.</span>quux<span class="token punctuation">.</span>xyzzy<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://airbnb.com/&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Congratulations!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You have failed this city.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> jsonData
  <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo
  <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar
  <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz
  <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">.</span>quux
  <span class="token operator">&amp;&amp;</span> jsonData<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">.</span>quux<span class="token punctuation">.</span>xyzzy<span class="token punctuation">;</span>

<span class="token comment">// good</span>
$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://airbnb.com/&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Congratulations!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You have failed this city.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),zk={id:"\u3010\u5F3A\u5236\u3011-\u4F5C\u4E3A\u8BED\u53E5\u7684\u82B1\u62EC\u53F7\u5185\u4E5F\u8981\u52A0\u7A7A\u683C-\u2014\u2014-\u540E\u548C-\u524D\u90FD\u9700\u8981\u7A7A\u683C\u3002-eslint-block-spacing",tabindex:"-1"},Pk=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4F5C\u4E3A\u8BED\u53E5\u7684\u82B1\u62EC\u53F7\u5185\u4E5F\u8981\u52A0\u7A7A\u683C-\u2014\u2014-\u540E\u548C-\u524D\u90FD\u9700\u8981\u7A7A\u683C\u3002-eslint-block-spacing","aria-hidden":"true"},"#",-1),Dk=s(),Jk=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Fk=s(" \u4F5C\u4E3A\u8BED\u53E5\u7684\u82B1\u62EC\u53F7\u5185\u4E5F\u8981\u52A0\u7A7A\u683C \u2014\u2014 "),Mk=n("code",null,"{",-1),Gk=s(" \u540E\u548C "),Hk=n("code",null,"}",-1),Rk=s(" \u524D\u90FD\u9700\u8981\u7A7A\u683C\u3002 eslint: "),Vk={href:"https://eslint.org/docs/rules/block-spacing",target:"_blank",rel:"noopener noreferrer"},$k=n("code",null,"block-spacing",-1),Wk=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span> bar <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span> bar <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Uk={id:"\u3010\u5F3A\u5236\u3011-\u524D\u4E0D\u8981\u7A7A\u683C-\u540E\u9700\u8981\u7A7A\u683C\u3002-eslint-comma-spacing",tabindex:"-1"},Yk=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u524D\u4E0D\u8981\u7A7A\u683C-\u540E\u9700\u8981\u7A7A\u683C\u3002-eslint-comma-spacing","aria-hidden":"true"},"#",-1),Qk=s(),Xk=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Kk=s(),Zk=n("code",null,",",-1),nv=s(" \u524D\u4E0D\u8981\u7A7A\u683C\uFF0C "),sv=n("code",null,",",-1),av=s(" \u540E\u9700\u8981\u7A7A\u683C\u3002 eslint: "),ev={href:"https://eslint.org/docs/rules/comma-spacing",target:"_blank",rel:"noopener noreferrer"},tv=n("code",null,"comma-spacing",-1),ov=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>bar <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> bar <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),pv={id:"\u3010\u5F3A\u5236\u3011-\u8BA1\u7B97\u5C5E\u6027\u5185\u8981\u7A7A\u683C\u3002\u53C2\u8003\u4E0A\u8FF0\u82B1\u62EC\u53F7\u548C\u4E2D\u62EC\u53F7\u7684\u89C4\u5219\u3002-eslint-computed-property-spacing",tabindex:"-1"},cv=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u8BA1\u7B97\u5C5E\u6027\u5185\u8981\u7A7A\u683C\u3002\u53C2\u8003\u4E0A\u8FF0\u82B1\u62EC\u53F7\u548C\u4E2D\u62EC\u53F7\u7684\u89C4\u5219\u3002-eslint-computed-property-spacing","aria-hidden":"true"},"#",-1),iv=s(),lv=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),uv=s(" \u8BA1\u7B97\u5C5E\u6027\u5185\u8981\u7A7A\u683C\u3002\u53C2\u8003\u4E0A\u8FF0\u82B1\u62EC\u53F7\u548C\u4E2D\u62EC\u53F7\u7684\u89C4\u5219\u3002 eslint: "),rv={href:"https://eslint.org/docs/rules/computed-property-spacing",target:"_blank",rel:"noopener noreferrer"},dv=n("code",null,"computed-property-spacing",-1),kv=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
obj<span class="token punctuation">[</span>foo <span class="token punctuation">]</span>
obj<span class="token punctuation">[</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span> b <span class="token punctuation">]</span><span class="token operator">:</span> a<span class="token punctuation">}</span>
obj<span class="token punctuation">[</span>foo<span class="token punctuation">[</span> bar <span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment">// good</span>
obj<span class="token punctuation">[</span>foo<span class="token punctuation">]</span>
obj<span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token operator">:</span> a <span class="token punctuation">}</span>
obj<span class="token punctuation">[</span>foo<span class="token punctuation">[</span>bar<span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),vv={id:"\u3010\u5F3A\u5236\u3011-\u8C03\u7528\u51FD\u6570\u65F6-\u51FD\u6570\u540D\u548C\u5C0F\u62EC\u53F7\u4E4B\u95F4\u4E0D\u8981\u7A7A\u683C\u3002-eslint-func-call-spacing",tabindex:"-1"},mv=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u8C03\u7528\u51FD\u6570\u65F6-\u51FD\u6570\u540D\u548C\u5C0F\u62EC\u53F7\u4E4B\u95F4\u4E0D\u8981\u7A7A\u683C\u3002-eslint-func-call-spacing","aria-hidden":"true"},"#",-1),bv=s(),hv=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),_v=s(" \u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u51FD\u6570\u540D\u548C\u5C0F\u62EC\u53F7\u4E4B\u95F4\u4E0D\u8981\u7A7A\u683C\u3002 eslint: "),gv={href:"https://eslint.org/docs/rules/func-call-spacing",target:"_blank",rel:"noopener noreferrer"},fv=n("code",null,"func-call-spacing",-1),yv=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token function">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">func</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),wv={id:"\u3010\u63A8\u8350\u3011\u5728\u5BF9\u8C61\u7684\u5B57\u9762\u91CF\u5C5E\u6027\u4E2D-key-\u548C-value-\u4E4B\u95F4\u8981\u6709\u7A7A\u683C\u3002-eslint-key-spacing",tabindex:"-1"},xv=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u5728\u5BF9\u8C61\u7684\u5B57\u9762\u91CF\u5C5E\u6027\u4E2D-key-\u548C-value-\u4E4B\u95F4\u8981\u6709\u7A7A\u683C\u3002-eslint-key-spacing","aria-hidden":"true"},"#",-1),jv=s(),qv=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Sv=s("\u5728\u5BF9\u8C61\u7684\u5B57\u9762\u91CF\u5C5E\u6027\u4E2D\uFF0C "),Nv=n("code",null,"key",-1),Av=s(" \u548C "),Ov=n("code",null,"value",-1),Cv=s(" \u4E4B\u95F4\u8981\u6709\u7A7A\u683C\u3002 eslint: "),Iv={href:"https://eslint.org/docs/rules/key-spacing",target:"_blank",rel:"noopener noreferrer"},Tv=n("code",null,"key-spacing",-1),Bv=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;foo&quot;</span> <span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;foo&quot;</span><span class="token operator">:</span><span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;foo&quot;</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ev={id:"\u3010\u5F3A\u5236\u3011-\u884C\u672B\u4E0D\u8981\u7A7A\u683C\u3002-eslint-no-trailing-spaces",tabindex:"-1"},Lv=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u884C\u672B\u4E0D\u8981\u7A7A\u683C\u3002-eslint-no-trailing-spaces","aria-hidden":"true"},"#",-1),zv=s(),Pv=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Dv=s(" \u884C\u672B\u4E0D\u8981\u7A7A\u683C\u3002 eslint: "),Jv={href:"https://eslint.org/docs/rules/no-trailing-spaces",target:"_blank",rel:"noopener noreferrer"},Fv=n("code",null,"no-trailing-spaces",-1),Mv={id:"\u3010\u5F3A\u5236\u3011-\u907F\u514D\u51FA\u73B0\u591A\u4E2A\u7A7A\u884C\u3002-\u5728\u6587\u4EF6\u672B\u5C3E\u53EA\u5141\u8BB8\u7A7A\u4E00\u884C\u3002\u907F\u514D\u5728\u6587\u4EF6\u5F00\u59CB\u5904\u51FA\u73B0\u7A7A\u884C\u3002eslint-no-multiple-empty-lines",tabindex:"-1"},Gv=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u51FA\u73B0\u591A\u4E2A\u7A7A\u884C\u3002-\u5728\u6587\u4EF6\u672B\u5C3E\u53EA\u5141\u8BB8\u7A7A\u4E00\u884C\u3002\u907F\u514D\u5728\u6587\u4EF6\u5F00\u59CB\u5904\u51FA\u73B0\u7A7A\u884C\u3002eslint-no-multiple-empty-lines","aria-hidden":"true"},"#",-1),Hv=s(),Rv=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Vv=s(" \u907F\u514D\u51FA\u73B0\u591A\u4E2A\u7A7A\u884C\u3002 \u5728\u6587\u4EF6\u672B\u5C3E\u53EA\u5141\u8BB8\u7A7A\u4E00\u884C\u3002\u907F\u514D\u5728\u6587\u4EF6\u5F00\u59CB\u5904\u51FA\u73B0\u7A7A\u884C\u3002eslint: "),$v={href:"https://eslint.org/docs/rules/no-multiple-empty-lines",target:"_blank",rel:"noopener noreferrer"},Wv=n("code",null,"no-multiple-empty-lines",-1),Uv=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad - multiple empty lines</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>


<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">// bad - 2+ newlines at end of file</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>


<span class="token comment">// bad - 1+ newline(s) at beginning of file</span>

<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9017\u53F7" tabindex="-1"><a class="header-anchor" href="#\u9017\u53F7" aria-hidden="true">#</a> \u9017\u53F7</h3>`,2),Yv={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u524D\u7F6E\u9017\u53F7\u3002eslint-comma-style",tabindex:"-1"},Qv=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u524D\u7F6E\u9017\u53F7\u3002eslint-comma-style","aria-hidden":"true"},"#",-1),Xv=s(),Kv=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Zv=s(" \u4E0D\u8981\u524D\u7F6E\u9017\u53F7\u3002eslint: "),nm={href:"http://eslint.org/docs/rules/comma-style.html",target:"_blank",rel:"noopener noreferrer"},sm=n("code",null,"comma-style",-1),am=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> story <span class="token operator">=</span> <span class="token punctuation">[</span>
    once
  <span class="token punctuation">,</span> upon
  <span class="token punctuation">,</span> aTime
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> story <span class="token operator">=</span> <span class="token punctuation">[</span>
  once<span class="token punctuation">,</span>
  upon<span class="token punctuation">,</span>
  aTime<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Ada&#39;</span>
  <span class="token punctuation">,</span> <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Lovelace&#39;</span>
  <span class="token punctuation">,</span> <span class="token literal-property property">birthYear</span><span class="token operator">:</span> <span class="token number">1815</span>
  <span class="token punctuation">,</span> <span class="token literal-property property">superPower</span><span class="token operator">:</span> <span class="token string">&#39;computers&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Ada&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Lovelace&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">birthYear</span><span class="token operator">:</span> <span class="token number">1815</span><span class="token punctuation">,</span>
  <span class="token literal-property property">superPower</span><span class="token operator">:</span> <span class="token string">&#39;computers&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),em={id:"\u3010\u5F3A\u5236\u3011-\u989D\u5916\u7ED3\u5C3E\u9017\u53F7-\u8981-eslint-comma-dangle",tabindex:"-1"},tm=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u989D\u5916\u7ED3\u5C3E\u9017\u53F7-\u8981-eslint-comma-dangle","aria-hidden":"true"},"#",-1),om=s(),pm=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),cm=s(" \u989D\u5916\u7ED3\u5C3E\u9017\u53F7: "),im=n("strong",null,"\u8981",-1),lm=s(" eslint: "),um={href:"http://eslint.org/docs/rules/comma-dangle.html",target:"_blank",rel:"noopener noreferrer"},rm=n("code",null,"comma-dangle",-1),dm=s("\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u4F7F git diffs \u66F4\u7B80\u6D01\u3002\u6B64\u5916\uFF0C\u50CFBabel\u8FD9\u6837\u7684\u8F6C\u6362\u5668\u4F1A\u5220\u9664\u8F6C\u6362\u4EE3\u7801\u4E2D\u7684\u989D\u5916\u7684\u9017\u53F7\uFF0C\u8FD9\u610F\u5473\u7740\u4F60\u4E0D\u5FC5\u62C5\u5FC3\u65E7\u7248\u6D4F\u89C8\u5668\u4E2D\u7684 "),km={href:"https://github.com/airbnb/javascript/blob/es5-deprecated/es5/README.md#commas",target:"_blank",rel:"noopener noreferrer"},vm=s("\u7ED3\u5C3E\u9017\u53F7\u95EE\u9898 "),mm=s("\u3002"),bm=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// bad - \u6CA1\u6709\u7ED3\u5C3E\u9017\u53F7\u7684 git diff
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - \u6709\u7ED3\u5C3E\u9017\u53F7\u7684 git diff
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Dana&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Scully&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> heroes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;Batman&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;Superman&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Dana&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Scully&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> heroes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;Batman&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;Superman&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">createHero</span><span class="token punctuation">(</span>
  <span class="token parameter">firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// does nothing</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">createHero</span><span class="token punctuation">(</span>
  <span class="token parameter">firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// does nothing</span>
<span class="token punctuation">}</span>

<span class="token comment">// good (\u6CE8\u610F\uFF0C\u9017\u53F7\u4E0D\u5E94\u51FA\u73B0\u5728\u4F7F\u7528\u4E86 ... \u64CD\u4F5C\u7B26\u540E\u7684\u53C2\u6570\u540E\u9762)</span>
<span class="token keyword">function</span> <span class="token function">createHero</span><span class="token punctuation">(</span>
  <span class="token parameter">firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf<span class="token punctuation">,</span>
  <span class="token operator">...</span>heroArgs</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// does nothing</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token function">createHero</span><span class="token punctuation">(</span>
  firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token function">createHero</span><span class="token punctuation">(</span>
  firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good  (\u6CE8\u610F\uFF0C\u9017\u53F7\u4E0D\u5E94\u51FA\u73B0\u5728\u4F7F\u7528\u4E86 ... \u64CD\u4F5C\u7B26\u540E\u7684\u53C2\u6570\u540E\u9762)</span>
<span class="token function">createHero</span><span class="token punctuation">(</span>
  firstName<span class="token punctuation">,</span>
  lastName<span class="token punctuation">,</span>
  inventorOf<span class="token punctuation">,</span>
  <span class="token operator">...</span>heroArgs
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u578B\u8F6C\u6362\u4E0E\u5F3A\u5236\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362\u4E0E\u5F3A\u5236\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362\u4E0E\u5F3A\u5236\u8F6C\u6362</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u5728\u8BED\u53E5\u5F00\u59CB\u6267\u884C\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5728\u8BED\u53E5\u5F00\u59CB\u6267\u884C\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5728\u8BED\u53E5\u5F00\u59CB\u6267\u884C\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u3002</h4>`,4),hm={id:"\u3010\u5F3A\u5236\u3011-\u5B57\u7B26\u4E32-eslint-no-new-wrappers",tabindex:"-1"},_m=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5B57\u7B26\u4E32-eslint-no-new-wrappers","aria-hidden":"true"},"#",-1),gm=s(),fm=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),ym=s(" \u5B57\u7B26\u4E32: eslint: "),wm={href:"https://eslint.org/docs/rules/no-new-wrappers",target:"_blank",rel:"noopener noreferrer"},xm=n("code",null,"no-new-wrappers",-1),jm=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// =&gt; this.reviewScore = 9;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// typeof totalScore is &quot;object&quot; not &quot;string&quot;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u4F1A\u6267\u884C this.reviewScore.valueOf()</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u4FDD\u8BC1\u8FD4\u56DE string</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),qm={id:"\u3010\u5F3A\u5236\u3011-\u6570\u5B57-\u7528-number-\u505A\u7C7B\u578B\u8F6C\u6362-parseint-\u8F6C\u6362-string-\u5E94\u603B\u662F\u5E26\u4E0A\u57FA\u6570\u3002-eslint-radix",tabindex:"-1"},Sm=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u6570\u5B57-\u7528-number-\u505A\u7C7B\u578B\u8F6C\u6362-parseint-\u8F6C\u6362-string-\u5E94\u603B\u662F\u5E26\u4E0A\u57FA\u6570\u3002-eslint-radix","aria-hidden":"true"},"#",-1),Nm=s(),Am=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Om=s(" \u6570\u5B57: \u7528 "),Cm=n("code",null,"Number",-1),Im=s(" \u505A\u7C7B\u578B\u8F6C\u6362\uFF0C"),Tm=n("code",null,"parseInt",-1),Bm=s(" \u8F6C\u6362 "),Em=n("code",null,"string",-1),Lm=s(" \u5E94\u603B\u662F\u5E26\u4E0A\u57FA\u6570\u3002 eslint: "),zm={href:"http://eslint.org/docs/rules/radix",target:"_blank",rel:"noopener noreferrer"},Pm=n("code",null,"radix",-1),Dm=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u51FD\u6570 <code>parseInt</code> \u4F1A\u6839\u636E\u6307\u5B9A\u7684\u57FA\u6570\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u5B57\u3002\u5B57\u7B26\u4E32\u5F00\u5934\u7684\u7A7A\u767D\u5B57\u7B26\u5C06\u4F1A\u88AB\u5FFD\u7565\uFF0C\u5982\u679C\u53C2\u6570\u57FA\u6570\uFF08\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF09\u4E3A <code>undefined</code> \u6216\u8005 <code>0</code> \uFF0C\u9664\u975E\u5B57\u7B26\u4E32\u5F00\u5934\u4E3A <code>0x</code> \u6216 <code>0X</code>\uFF08\u5341\u516D\u8FDB\u5236\uFF09\uFF0C\u4F1A\u9ED8\u8BA4\u5047\u8BBE\u4E3A <code>10</code>\u3002\u8FD9\u4E2A\u5DEE\u5F02\u6765\u81EA ECMAScript 3\uFF0C\u5B83\u4E0D\u9F13\u52B1\uFF08\u4F46\u662F\u5141\u8BB8\uFF09\u89E3\u91CA\u516B\u8FDB\u5236\u3002\u5728 2013 \u5E74\u4E4B\u524D\uFF0C\u4E00\u4E9B\u5B9E\u73B0\u4E0D\u517C\u5BB9\u8FD9\u79CD\u884C\u4E3A\u3002\u56E0\u4E3A\u6211\u4EEC\u9700\u8981\u652F\u6301\u65E7\u6D4F\u89C8\u5668\uFF0C\u6240\u4EE5\u5E94\u5F53\u59CB\u7EC8\u6307\u5B9A\u8FDB\u5236\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> inputValue <span class="token operator">=</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token operator">+</span>inputValue<span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> inputValue <span class="token operator">&gt;&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Jm={id:"\u3010\u5F3A\u5236\u3011-\u8BF7\u5728\u6CE8\u91CA\u4E2D\u89E3\u91CA\u4E3A\u4EC0\u4E48\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u548C\u4F60\u5728\u505A\u4EC0\u4E48\u3002\u65E0\u8BBA\u4F60\u505A\u4EC0\u4E48\u72C2\u91CE\u7684\u4E8B-\u6BD4\u5982\u7531\u4E8E-parseint-\u662F\u4F60\u7684\u6027\u80FD\u74F6\u9888\u5BFC\u81F4\u4F60\u4E00\u5B9A\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u3002\u8BF4\u660E\u8FD9\u4E2A\u662F\u56E0\u4E3A-\u6027\u80FD\u539F\u56E0-\u3002",tabindex:"-1"},Fm=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u8BF7\u5728\u6CE8\u91CA\u4E2D\u89E3\u91CA\u4E3A\u4EC0\u4E48\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u548C\u4F60\u5728\u505A\u4EC0\u4E48\u3002\u65E0\u8BBA\u4F60\u505A\u4EC0\u4E48\u72C2\u91CE\u7684\u4E8B-\u6BD4\u5982\u7531\u4E8E-parseint-\u662F\u4F60\u7684\u6027\u80FD\u74F6\u9888\u5BFC\u81F4\u4F60\u4E00\u5B9A\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u3002\u8BF4\u660E\u8FD9\u4E2A\u662F\u56E0\u4E3A-\u6027\u80FD\u539F\u56E0-\u3002","aria-hidden":"true"},"#",-1),Mm=s(),Gm=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Hm=s(" \u8BF7\u5728\u6CE8\u91CA\u4E2D\u89E3\u91CA\u4E3A\u4EC0\u4E48\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u548C\u4F60\u5728\u505A\u4EC0\u4E48\u3002\u65E0\u8BBA\u4F60\u505A\u4EC0\u4E48\u72C2\u91CE\u7684\u4E8B\uFF0C\u6BD4\u5982\u7531\u4E8E "),Rm=n("code",null,"parseInt",-1),Vm=s(" \u662F\u4F60\u7684\u6027\u80FD\u74F6\u9888\u5BFC\u81F4\u4F60\u4E00\u5B9A\u8981\u7528\u79FB\u4F4D\u8FD0\u7B97\u3002\u8BF4\u660E\u8FD9\u4E2A\u662F\u56E0\u4E3A "),$m={href:"https://jsperf.com/coercion-vs-casting/3",target:"_blank",rel:"noopener noreferrer"},Wm=s("\u6027\u80FD\u539F\u56E0 "),Um=s("\u3002"),Ym=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>
<span class="token doc-comment comment">/**
 * parseInt \u662F\u4EE3\u7801\u8FD0\u884C\u6162\u7684\u539F\u56E0
 * \u7528 Bitshifting \u5C06\u5B57\u7B26\u4E32\u8F6C\u6210\u6570\u5B57\u4F7F\u4EE3\u7801\u8FD0\u884C\u6548\u7387\u5927\u5E45\u63D0\u5347
 */</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> inputValue <span class="token operator">&gt;&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Qm={id:"\u3010\u5F3A\u5236\u3011-\u6CE8\u610F-\u7528\u79FB\u4F4D\u8FD0\u7B97\u8981\u5C0F\u5FC3\u3002\u6570\u5B57\u662F\u7528-64-\u4F4D-\u8868\u793A\u7684-\u4F46\u79FB\u4F4D\u8FD0\u7B97\u5E38\u5E38\u8FD4\u56DE\u7684\u662F32\u4E3A\u6574\u5F62source-\u3002\u79FB\u4F4D\u8FD0\u7B97\u5BF9\u5927\u4E8E-32-\u4F4D\u7684\u6574\u6570\u4F1A\u5BFC\u81F4\u610F\u5916\u884C\u4E3A\u3002discussion-\u6700\u5927\u7684-32-\u4F4D\u6574\u6570\u662F-2-147-483-647",tabindex:"-1"},Xm=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u6CE8\u610F-\u7528\u79FB\u4F4D\u8FD0\u7B97\u8981\u5C0F\u5FC3\u3002\u6570\u5B57\u662F\u7528-64-\u4F4D-\u8868\u793A\u7684-\u4F46\u79FB\u4F4D\u8FD0\u7B97\u5E38\u5E38\u8FD4\u56DE\u7684\u662F32\u4E3A\u6574\u5F62source-\u3002\u79FB\u4F4D\u8FD0\u7B97\u5BF9\u5927\u4E8E-32-\u4F4D\u7684\u6574\u6570\u4F1A\u5BFC\u81F4\u610F\u5916\u884C\u4E3A\u3002discussion-\u6700\u5927\u7684-32-\u4F4D\u6574\u6570\u662F-2-147-483-647","aria-hidden":"true"},"#",-1),Km=s(),Zm=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),nb=s(),sb=n("strong",null,"\u6CE8\u610F:",-1),ab=s(" \u7528\u79FB\u4F4D\u8FD0\u7B97\u8981\u5C0F\u5FC3\u3002\u6570\u5B57\u662F\u7528 "),eb={href:"https://es5.github.io/#x4.3.19",target:"_blank",rel:"noopener noreferrer"},tb=s("64-\u4F4D "),ob=s("\u8868\u793A\u7684\uFF0C\u4F46\u79FB\u4F4D\u8FD0\u7B97\u5E38\u5E38\u8FD4\u56DE\u7684\u662F32\u4E3A\u6574\u5F62"),pb={href:"https://es5.github.io/#x11.7",target:"_blank",rel:"noopener noreferrer"},cb=s("source "),ib=s(")\u3002\u79FB\u4F4D\u8FD0\u7B97\u5BF9\u5927\u4E8E 32 \u4F4D\u7684\u6574\u6570\u4F1A\u5BFC\u81F4\u610F\u5916\u884C\u4E3A\u3002"),lb={href:"https://github.com/airbnb/javascript/issues/109",target:"_blank",rel:"noopener noreferrer"},ub=s("Discussion "),rb=s(". \u6700\u5927\u7684 32 \u4F4D\u6574\u6570\u662F 2,147,483,647:"),db=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">2147483647</span> <span class="token operator">&gt;&gt;</span> <span class="token number">0</span> <span class="token comment">//=&gt; 2147483647</span>
<span class="token number">2147483648</span> <span class="token operator">&gt;&gt;</span> <span class="token number">0</span> <span class="token comment">//=&gt; -2147483648</span>
<span class="token number">2147483649</span> <span class="token operator">&gt;&gt;</span> <span class="token number">0</span> <span class="token comment">//=&gt; -2147483647</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),kb={id:"\u3010\u5F3A\u5236\u3011-\u5E03\u5C14-eslint-no-new-wrappers",tabindex:"-1"},vb=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u5E03\u5C14-eslint-no-new-wrappers","aria-hidden":"true"},"#",-1),mb=s(),bb=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),hb=s(" \u5E03\u5C14: eslint: "),_b={href:"https://eslint.org/docs/rules/no-new-wrappers",target:"_blank",rel:"noopener noreferrer"},gb=n("code",null,"no-new-wrappers",-1),fb=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>age<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u547D\u540D\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u89C4\u8303" aria-hidden="true">#</a> \u547D\u540D\u89C4\u8303</h3>`,2),yb={id:"\u3010\u5F3A\u5236\u3011-\u907F\u514D\u7528\u4E00\u4E2A\u5B57\u6BCD\u547D\u540D-\u8BA9\u4F60\u7684\u547D\u540D\u6709\u610F\u4E49\u3002eslint-id-length",tabindex:"-1"},wb=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u907F\u514D\u7528\u4E00\u4E2A\u5B57\u6BCD\u547D\u540D-\u8BA9\u4F60\u7684\u547D\u540D\u6709\u610F\u4E49\u3002eslint-id-length","aria-hidden":"true"},"#",-1),xb=s(),jb=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),qb=s(" \u907F\u514D\u7528\u4E00\u4E2A\u5B57\u6BCD\u547D\u540D\uFF0C\u8BA9\u4F60\u7684\u547D\u540D\u6709\u610F\u4E49\u3002eslint: "),Sb={href:"http://eslint.org/docs/rules/id-length",target:"_blank",rel:"noopener noreferrer"},Nb=n("code",null,"id-length",-1),Ab=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">q</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ob={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5C0F\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u4F60\u7684\u5BF9\u8C61\u3001\u51FD\u6570\u3001\u5B9E\u4F8B\u3002eslint-camelcase",tabindex:"-1"},Cb=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5C0F\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u4F60\u7684\u5BF9\u8C61\u3001\u51FD\u6570\u3001\u5B9E\u4F8B\u3002eslint-camelcase","aria-hidden":"true"},"#",-1),Ib=s(),Tb=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Bb=s(" \u7528\u5C0F\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u4F60\u7684\u5BF9\u8C61\u3001\u51FD\u6570\u3001\u5B9E\u4F8B\u3002eslint: "),Eb={href:"http://eslint.org/docs/rules/camelcase.html",target:"_blank",rel:"noopener noreferrer"},Lb=n("code",null,"camelcase",-1),zb=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> OBJEcttsssss <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> this_is_my_object <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> thisIsMyObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">thisIsMyFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Pb={id:"\u3010\u5F3A\u5236\u3011-\u7528\u5927\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u7C7B\u3002eslint-new-cap",tabindex:"-1"},Db=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528\u5927\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u7C7B\u3002eslint-new-cap","aria-hidden":"true"},"#",-1),Jb=s(),Fb=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Mb=s(" \u7528\u5927\u9A7C\u5CF0\u547D\u540D\u6CD5\u6765\u547D\u540D\u7C7B\u3002eslint: "),Gb={href:"http://eslint.org/docs/rules/new-cap.html",target:"_blank",rel:"noopener noreferrer"},Hb=n("code",null,"new-cap",-1),Rb=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bad <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">user</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;nope&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> good <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;yup&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Vb={id:"\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528\u524D\u7F6E\u6216\u540E\u7F6E\u4E0B\u5212\u7EBF\u3002eslint-no-underscore-dangle",tabindex:"-1"},$b=n("a",{class:"header-anchor",href:"#\u3010\u63A8\u8350\u3011\u4E0D\u8981\u7528\u524D\u7F6E\u6216\u540E\u7F6E\u4E0B\u5212\u7EBF\u3002eslint-no-underscore-dangle","aria-hidden":"true"},"#",-1),Wb=s(),Ub=n("code",null,"\u3010\u63A8\u8350\u3011",-1),Yb=s("\u4E0D\u8981\u7528\u524D\u7F6E\u6216\u540E\u7F6E\u4E0B\u5212\u7EBF\u3002eslint: "),Qb={href:"http://eslint.org/docs/rules/no-underscore-dangle.html",target:"_blank",rel:"noopener noreferrer"},Xb=n("code",null,"no-underscore-dangle",-1),Kb=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1FJavaScript \u6CA1\u6709\u79C1\u6709\u5C5E\u6027\u6216\u79C1\u6709\u65B9\u6CD5\u7684\u6982\u5FF5\u3002\u5C3D\u7BA1\u524D\u7F6E\u4E0B\u5212\u7EBF\u901A\u5E38\u7684\u6982\u5FF5\u4E0A\u610F\u5473\u7740\u79C1\u6709\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u662F\u5B8C\u5168\u516C\u6709\u7684\uFF0C\u56E0\u6B64\u8FD9\u90E8\u5206\u4E5F\u662F\u4F60\u7684 API \u7684\u5185\u5BB9\u3002\u8FD9\u4E00\u6982\u5FF5\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5F00\u53D1\u8005\u8BEF\u4EE5\u4E3A\u66F4\u6539\u8FD9\u4E2A\u4E0D\u4F1A\u5BFC\u81F4\u5D29\u6E83\u6216\u8005\u4E0D\u9700\u8981\u6D4B\u8BD5\u3002\u5982\u679C\u4F60\u60F3\u8981\u4EC0\u4E48\u4E1C\u897F\u53D8\u6210\u79C1\u6709\uFF0C\u90A3\u5C31\u4E0D\u8981\u8BA9\u5B83\u5728\u8FD9\u91CC\u51FA\u73B0\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>__firstName__ <span class="token operator">=</span> <span class="token string">&#39;Panda&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>firstName_ <span class="token operator">=</span> <span class="token string">&#39;Panda&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>_firstName <span class="token operator">=</span> <span class="token string">&#39;Panda&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> <span class="token string">&#39;Panda&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Zb={id:"\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4FDD\u5B58\u5F15\u7528-this-\u7528\u7BAD\u5934\u51FD\u6570\u6216-\u51FD\u6570\u7ED1\u5B9A\u2014\u2014function-bind\u3002",tabindex:"-1"},nh=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4FDD\u5B58\u5F15\u7528-this-\u7528\u7BAD\u5934\u51FD\u6570\u6216-\u51FD\u6570\u7ED1\u5B9A\u2014\u2014function-bind\u3002","aria-hidden":"true"},"#",-1),sh=s(),ah=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),eh=s(" \u4E0D\u8981\u4FDD\u5B58\u5F15\u7528 "),th=n("code",null,"this",-1),oh=s("\uFF0C\u7528\u7BAD\u5934\u51FD\u6570\u6216 "),ph={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",target:"_blank",rel:"noopener noreferrer"},ch=s("\u51FD\u6570\u7ED1\u5B9A\u2014\u2014Function#bind"),ih=s("\u3002"),lh=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-export-default-\u5BFC\u51FA\u6A21\u5757a-\u5219\u8FD9\u4E2A\u6587\u4EF6\u540D\u4E5F\u53EB-a-import-\u65F6\u5019\u7684\u53C2\u6570\u4E5F\u53EB-a\u3002-\u5927\u5C0F\u5199\u5B8C\u5168\u4E00\u81F4\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-export-default-\u5BFC\u51FA\u6A21\u5757a-\u5219\u8FD9\u4E2A\u6587\u4EF6\u540D\u4E5F\u53EB-a-import-\u65F6\u5019\u7684\u53C2\u6570\u4E5F\u53EB-a\u3002-\u5927\u5C0F\u5199\u5B8C\u5168\u4E00\u81F4\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> <code>export default</code> \u5BFC\u51FA\u6A21\u5757A\uFF0C\u5219\u8FD9\u4E2A\u6587\u4EF6\u540D\u4E5F\u53EB <code>A.*</code>\uFF0C <code>import</code> \u65F6\u5019\u7684\u53C2\u6570\u4E5F\u53EB <code>A</code>\u3002 \u5927\u5C0F\u5199\u5B8C\u5168\u4E00\u81F4\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// file 1 contents</span>
<span class="token keyword">class</span> <span class="token class-name">CheckBox</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> CheckBox<span class="token punctuation">;</span>

<span class="token comment">// file 2 contents</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">fortyTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">42</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">// file 3 contents</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">insideDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// in some other file</span>
<span class="token comment">// bad</span>
<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">&#39;./checkBox&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PascalCase import/export, camelCase filename</span>
<span class="token keyword">import</span> FortyTwo <span class="token keyword">from</span> <span class="token string">&#39;./FortyTwo&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PascalCase import/filename, camelCase export</span>
<span class="token keyword">import</span> InsideDirectory <span class="token keyword">from</span> <span class="token string">&#39;./InsideDirectory&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PascalCase import/filename, camelCase export</span>

<span class="token comment">// bad</span>
<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">&#39;./check_box&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PascalCase import/export, snake_case filename</span>
<span class="token keyword">import</span> forty_two <span class="token keyword">from</span> <span class="token string">&#39;./forty_two&#39;</span><span class="token punctuation">;</span> <span class="token comment">// snake_case import/filename, camelCase export</span>
<span class="token keyword">import</span> inside_directory <span class="token keyword">from</span> <span class="token string">&#39;./inside_directory&#39;</span><span class="token punctuation">;</span> <span class="token comment">// snake_case import, camelCase export</span>
<span class="token keyword">import</span> index <span class="token keyword">from</span> <span class="token string">&#39;./inside_directory/index&#39;</span><span class="token punctuation">;</span> <span class="token comment">// requiring the index file explicitly</span>
<span class="token keyword">import</span> insideDirectory <span class="token keyword">from</span> <span class="token string">&#39;./insideDirectory/index&#39;</span><span class="token punctuation">;</span> <span class="token comment">// requiring the index file explicitly</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">&#39;./CheckBox&#39;</span><span class="token punctuation">;</span> <span class="token comment">// PascalCase export/import/filename</span>
<span class="token keyword">import</span> fortyTwo <span class="token keyword">from</span> <span class="token string">&#39;./fortyTwo&#39;</span><span class="token punctuation">;</span> <span class="token comment">// camelCase export/import/filename</span>
<span class="token keyword">import</span> insideDirectory <span class="token keyword">from</span> <span class="token string">&#39;./insideDirectory&#39;</span><span class="token punctuation">;</span> <span class="token comment">// camelCase export/import/directory name/implicit &quot;index&quot;</span>
<span class="token comment">// ^ supports both insideDirectory.js and insideDirectory/index.js</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u5F53\u4F60-export-default-\u4E00\u4E2A\u51FD\u6570\u65F6-\u51FD\u6570\u540D\u7528\u5C0F\u9A7C\u5CF0-\u6587\u4EF6\u540D\u9700\u8981\u548C\u51FD\u6570\u540D\u4E00\u81F4\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5F53\u4F60-export-default-\u4E00\u4E2A\u51FD\u6570\u65F6-\u51FD\u6570\u540D\u7528\u5C0F\u9A7C\u5CF0-\u6587\u4EF6\u540D\u9700\u8981\u548C\u51FD\u6570\u540D\u4E00\u81F4\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5F53\u4F60 export-default \u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u51FD\u6570\u540D\u7528\u5C0F\u9A7C\u5CF0\uFF0C\u6587\u4EF6\u540D\u9700\u8981\u548C\u51FD\u6570\u540D\u4E00\u81F4\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">makeStyleGuide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> makeStyleGuide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u5F53\u4F60-export-\u4E00\u4E2A\u7ED3\u6784\u4F53-\u7C7B-\u5355\u4F8B-\u51FD\u6570\u5E93-\u5BF9\u8C61-\u65F6\u7528\u5927\u9A7C\u5CF0\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5F53\u4F60-export-\u4E00\u4E2A\u7ED3\u6784\u4F53-\u7C7B-\u5355\u4F8B-\u51FD\u6570\u5E93-\u5BF9\u8C61-\u65F6\u7528\u5927\u9A7C\u5CF0\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5F53\u4F60 export \u4E00\u4E2A\u7ED3\u6784\u4F53/\u7C7B/\u5355\u4F8B/\u51FD\u6570\u5E93/\u5BF9\u8C61 \u65F6\u7528\u5927\u9A7C\u5CF0\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> AirbnbStyleGuide <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> AirbnbStyleGuide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u7B80\u79F0\u548C\u7F29\u5199\u5E94\u8BE5\u5168\u90E8\u5927\u5199\u6216\u5168\u90E8\u5C0F\u5199\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u7B80\u79F0\u548C\u7F29\u5199\u5E94\u8BE5\u5168\u90E8\u5927\u5199\u6216\u5168\u90E8\u5C0F\u5199\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u7B80\u79F0\u548C\u7F29\u5199\u5E94\u8BE5\u5168\u90E8\u5927\u5199\u6216\u5168\u90E8\u5C0F\u5199\u3002</h4><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u540D\u5B57\u90FD\u662F\u7ED9\u4EBA\u8BFB\u7684\uFF0C\u4E0D\u662F\u4E3A\u4E86\u53BB\u9002\u5E94\u8BA1\u7B97\u673A\u7B97\u6CD5\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> SmsContainer <span class="token keyword">from</span> <span class="token string">&#39;./containers/SmsContainer&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> HttpRequests <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> SMSContainer <span class="token keyword">from</span> <span class="token string">&#39;./containers/SMSContainer&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> HTTPRequests <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// also good</span>
<span class="token keyword">const</span> httpRequests <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">import</span> TextMessageContainer <span class="token keyword">from</span> <span class="token string">&#39;./containers/TextMessageContainer&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> requests <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u4F60\u53EF\u4EE5\u7528\u5168\u5927\u5199\u5B57\u6BCD\u8BBE\u7F6E\u9759\u6001\u53D8\u91CF-\u4ED6\u9700\u8981\u6EE1\u8DB3\u4E09\u4E2A\u6761\u4EF6\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4F60\u53EF\u4EE5\u7528\u5168\u5927\u5199\u5B57\u6BCD\u8BBE\u7F6E\u9759\u6001\u53D8\u91CF-\u4ED6\u9700\u8981\u6EE1\u8DB3\u4E09\u4E2A\u6761\u4EF6\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4F60\u53EF\u4EE5\u7528\u5168\u5927\u5199\u5B57\u6BCD\u8BBE\u7F6E\u9759\u6001\u53D8\u91CF\uFF0C\u4ED6\u9700\u8981\u6EE1\u8DB3\u4E09\u4E2A\u6761\u4EF6\u3002</h4><ol><li>\u5BFC\u51FA\u53D8\u91CF\uFF1B</li><li>\u662F <code>const</code> \u5B9A\u4E49\u7684\uFF0C \u4FDD\u8BC1\u4E0D\u80FD\u88AB\u6539\u53D8\uFF1B</li><li>\u8FD9\u4E2A\u53D8\u91CF\u662F\u53EF\u4FE1\u7684\uFF0C\u4ED6\u7684\u5B50\u5C5E\u6027\u90FD\u662F\u4E0D\u80FD\u88AB\u6539\u53D8\u7684\u3002</li></ol><blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u8FD9\u662F\u4E00\u4E2A\u9644\u52A0\u5DE5\u5177\uFF0C\u5E2E\u52A9\u5F00\u53D1\u8005\u53BB\u8FA8\u8BC6\u4E00\u4E2A\u53D8\u91CF\u662F\u4E0D\u662F\u4E0D\u53EF\u53D8\u7684\u3002UPPERCASE_VARIABLES \u80FD\u8BA9\u5F00\u53D1\u8005\u77E5\u9053\u4ED6\u80FD\u786E\u4FE1\u8FD9\u4E2A\u53D8\u91CF\uFF08\u4EE5\u53CA\u4ED6\u7684\u5C5E\u6027\uFF09\u662F\u4E0D\u4F1A\u53D8\u7684\u3002</p></blockquote><ul><li><p>\u5BF9\u4E8E\u6240\u6709\u7684 <code>const</code> \u53D8\u91CF\u5462\uFF1F \u2014\u2014 \u8FD9\u4E2A\u662F\u4E0D\u5FC5\u8981\u7684\u3002\u5927\u5199\u53D8\u91CF\u4E0D\u5E94\u8BE5\u5728\u540C\u4E00\u4E2A\u6587\u4EF6\u91CC\u5B9A\u4E49\u5E76\u4F7F\u7528\uFF0C \u5B83\u53EA\u80FD\u7528\u6765\u4F5C\u4E3A\u5BFC\u51FA\u53D8\u91CF\u3002</p></li><li><p>\u90A3\u5BFC\u51FA\u7684\u5BF9\u8C61\u5462\uFF1F \u2014\u2014 \u5927\u5199\u53D8\u91CF\u5904\u5728 <code>export</code> \u7684\u6700\u9AD8\u7EA7(\u4F8B\u5982\uFF1A<code>EXPORTED_OBJECT.key</code>) \u5E76\u4E14\u4ED6\u5305\u542B\u7684\u6240\u6709\u5B50\u5C5E\u6027\u90FD\u662F\u4E0D\u53EF\u53D8\u7684\u3002\uFF08\u8BD1\u8005\u6CE8\uFF1A\u5373\u5BFC\u51FA\u7684\u53D8\u91CF\u662F\u5168\u5927\u5199\u7684\uFF0C\u4F46\u4ED6\u7684\u5C5E\u6027\u4E0D\u7528\u5927\u5199\uFF09</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token constant">PRIVATE_VARIABLE</span> <span class="token operator">=</span> <span class="token string">&#39;should not be unnecessarily uppercased within a file&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">THING_TO_BE_CHANGED</span> <span class="token operator">=</span> <span class="token string">&#39;should obviously not be uppercased&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">export</span> <span class="token keyword">let</span> <span class="token constant">REASSIGNABLE_VARIABLE</span> <span class="token operator">=</span> <span class="token string">&#39;do not use let with uppercase variables&#39;</span><span class="token punctuation">;</span>


<span class="token comment">// ---</span>

<span class="token comment">// \u5141\u8BB8\u4F46\u4E0D\u591F\u8BED\u4E49\u5316</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> apiKey <span class="token operator">=</span> <span class="token string">&#39;SOMEKEY&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u66F4\u597D</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">API_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;SOMEKEY&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// ---</span>

<span class="token comment">// bad - \u4E0D\u5FC5\u8981\u7684\u5927\u5199\u952E\uFF0C\u6CA1\u6709\u589E\u52A0\u4EFB\u4F55\u8BED\u4E49</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MAPPING</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">KEY</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MAPPING</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-set-\u8BBF\u95EE\u5668" tabindex="-1"><a class="header-anchor" href="#get-set-\u8BBF\u95EE\u5668" aria-hidden="true">#</a> Get-Set \u8BBF\u95EE\u5668</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u4E0D\u9700\u8981\u4F7F\u7528\u5C5E\u6027\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4E0D\u9700\u8981\u4F7F\u7528\u5C5E\u6027\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4E0D\u9700\u8981\u4F7F\u7528\u5C5E\u6027\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002</h4><h4 id="\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528-javascript-\u7684-getters-setters-\u56E0\u4E3A\u4ED6\u4EEC\u4F1A\u4EA7\u751F\u526F\u4F5C\u7528-\u5E76\u4E14\u96BE\u4EE5\u6D4B\u8BD5\u3001\u7EF4\u62A4\u548C\u7406\u89E3\u3002\u76F8\u53CD\u7684-\u4F60\u53EF\u4EE5\u7528-getval-\u548C-setval-hello-\u53BB\u521B\u9020\u4F60\u81EA\u5DF1\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4E0D\u8981\u4F7F\u7528-javascript-\u7684-getters-setters-\u56E0\u4E3A\u4ED6\u4EEC\u4F1A\u4EA7\u751F\u526F\u4F5C\u7528-\u5E76\u4E14\u96BE\u4EE5\u6D4B\u8BD5\u3001\u7EF4\u62A4\u548C\u7406\u89E3\u3002\u76F8\u53CD\u7684-\u4F60\u53EF\u4EE5\u7528-getval-\u548C-setval-hello-\u53BB\u521B\u9020\u4F60\u81EA\u5DF1\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4E0D\u8981\u4F7F\u7528 JavaScript \u7684 getters/setters\uFF0C\u56E0\u4E3A\u4ED6\u4EEC\u4F1A\u4EA7\u751F\u526F\u4F5C\u7528\uFF0C\u5E76\u4E14\u96BE\u4EE5\u6D4B\u8BD5\u3001\u7EF4\u62A4\u548C\u7406\u89E3\u3002\u76F8\u53CD\u7684\uFF0C\u4F60\u53EF\u4EE5\u7528 <code>getVal()</code> \u548C <code>setVal(&#39;hello&#39;)</code> \u53BB\u521B\u9020\u4F60\u81EA\u5DF1\u7684\u8BBF\u95EE\u5668\u51FD\u6570\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Dragon</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">age</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Dragon</span> <span class="token punctuation">{</span>
  <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u5982\u679C\u5C5E\u6027-\u65B9\u6CD5\u662F-boolean-\u7528-isval-\u6216-hasval-\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u5982\u679C\u5C5E\u6027-\u65B9\u6CD5\u662F-boolean-\u7528-isval-\u6216-hasval-\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u5982\u679C\u5C5E\u6027/\u65B9\u6CD5\u662F <code>boolean</code>\uFF0C \u7528 <code>isVal()</code> \u6216 <code>hasVal()</code>\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dragon<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dragon<span class="token punctuation">.</span><span class="token function">hasAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u63A8\u8350\u3011\u7528-get-\u548C-set-\u51FD\u6570\u662F\u53EF\u4EE5\u7684-\u4F46\u662F\u8981\u4E00\u8D77\u7528\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u63A8\u8350\u3011\u7528-get-\u548C-set-\u51FD\u6570\u662F\u53EF\u4EE5\u7684-\u4F46\u662F\u8981\u4E00\u8D77\u7528\u3002" aria-hidden="true">#</a> <code>\u3010\u63A8\u8350\u3011</code>\u7528 <code>get()</code> \u548C <code>set()</code> \u51FD\u6570\u662F\u53EF\u4EE5\u7684\uFF0C\u4F46\u662F\u8981\u4E00\u8D77\u7528\u3002</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lightsaber <span class="token operator">=</span> options<span class="token punctuation">.</span>lightsaber <span class="token operator">||</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;lightsaber&#39;</span><span class="token punctuation">,</span> lightsaber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6" aria-hidden="true">#</a> \u4E8B\u4EF6</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u5F53\u4F20\u9012\u6570\u636E\u8F7D\u8377\u7ED9\u4E8B\u4EF6\u65F6-\u4E0D\u8BBA\u662F-dom-\u8FD8\u662F\u50CF-backbone-\u8FD9\u6837\u6709\u5F88\u591A\u5C5E\u6027\u7684\u4E8B\u4EF6-\u3002\u8FD9\u4F7F\u5F97\u540E\u7EED\u7684\u8D21\u732E\u8005-\u7A0B\u5E8F\u5458-\u5411\u8FD9\u4E2A\u4E8B\u4EF6\u6DFB\u52A0\u66F4\u591A\u7684\u6570\u636E\u65F6\u4E0D\u7528\u53BB\u627E\u6216\u8005\u66F4\u65B0\u6BCF\u4E2A\u5904\u7406\u5668\u3002\u4F8B\u5982" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5F53\u4F20\u9012\u6570\u636E\u8F7D\u8377\u7ED9\u4E8B\u4EF6\u65F6-\u4E0D\u8BBA\u662F-dom-\u8FD8\u662F\u50CF-backbone-\u8FD9\u6837\u6709\u5F88\u591A\u5C5E\u6027\u7684\u4E8B\u4EF6-\u3002\u8FD9\u4F7F\u5F97\u540E\u7EED\u7684\u8D21\u732E\u8005-\u7A0B\u5E8F\u5458-\u5411\u8FD9\u4E2A\u4E8B\u4EF6\u6DFB\u52A0\u66F4\u591A\u7684\u6570\u636E\u65F6\u4E0D\u7528\u53BB\u627E\u6216\u8005\u66F4\u65B0\u6BCF\u4E2A\u5904\u7406\u5668\u3002\u4F8B\u5982" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5F53\u4F20\u9012\u6570\u636E\u8F7D\u8377\u7ED9\u4E8B\u4EF6\u65F6\uFF08\u4E0D\u8BBA\u662F DOM \u8FD8\u662F\u50CF Backbone \u8FD9\u6837\u6709\u5F88\u591A\u5C5E\u6027\u7684\u4E8B\u4EF6\uFF09\u3002\u8FD9\u4F7F\u5F97\u540E\u7EED\u7684\u8D21\u732E\u8005\uFF08\u7A0B\u5E8F\u5458\uFF09\u5411\u8FD9\u4E2A\u4E8B\u4EF6\u6DFB\u52A0\u66F4\u591A\u7684\u6570\u636E\u65F6\u4E0D\u7528\u53BB\u627E\u6216\u8005\u66F4\u65B0\u6BCF\u4E2A\u5904\u7406\u5668\u3002\u4F8B\u5982\uFF1A</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;listingUpdated&#39;</span><span class="token punctuation">,</span> listing<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;listingUpdated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> listingID</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something with listingID</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// good</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;listingUpdated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">listingID</span><span class="token operator">:</span> listing<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;listingUpdated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something with data.listingID</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6807\u51C6\u5E93" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6\u5E93" aria-hidden="true">#</a> \u6807\u51C6\u5E93</h3>`,27),uh={href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects",target:"_blank",rel:"noopener noreferrer"},rh=s("\u6807\u51C6\u5E93"),dh=s("\u4E2D\u5305\u542B\u4E00\u4E9B\u529F\u80FD\u53D7\u635F\u4F46\u662F\u7531\u4E8E\u5386\u53F2\u539F\u56E0\u9057\u7559\u7684\u5DE5\u5177\u7C7B"),kh={id:"\u3010\u5F3A\u5236\u3011-\u7528-number-isnan-\u4EE3\u66FF\u5168\u5C40\u7684-isnan\u3002-eslint-no-restricted-globals",tabindex:"-1"},vh=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-number-isnan-\u4EE3\u66FF\u5168\u5C40\u7684-isnan\u3002-eslint-no-restricted-globals","aria-hidden":"true"},"#",-1),mh=s(),bh=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),hh=s(" \u7528 "),_h=n("code",null,"Number.isNaN",-1),gh=s(" \u4EE3\u66FF\u5168\u5C40\u7684 "),fh=n("code",null,"isNaN",-1),yh=s("\u3002 eslint: "),wh={href:"https://eslint.org/docs/rules/no-restricted-globals",target:"_blank",rel:"noopener noreferrer"},xh=n("code",null,"no-restricted-globals",-1),jh=t(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u5168\u5C40 <code>isNaN</code> \u5F3A\u5236\u628A\u975E\u6570\u5B57\u8F6C\u6210\u6570\u5B57\uFF0C \u7136\u540E\u5BF9\u4E8E\u4EFB\u4F55\u5F3A\u8F6C\u540E\u4E3A <code>NaN</code> \u7684\u53D8\u91CF\u90FD\u8FD4\u56DE <code>true</code> \u5982\u679C\u4F60\u60F3\u7528\u8FD9\u4E2A\u529F\u80FD\uFF0C\u5C31\u663E\u5F0F\u7684\u7528\u5B83\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;1.2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// good</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),qh={id:"\u3010\u5F3A\u5236\u3011-\u7528-number-isfinite-\u4EE3\u66FF-isfinite-eslint-no-restricted-globals",tabindex:"-1"},Sh=n("a",{class:"header-anchor",href:"#\u3010\u5F3A\u5236\u3011-\u7528-number-isfinite-\u4EE3\u66FF-isfinite-eslint-no-restricted-globals","aria-hidden":"true"},"#",-1),Nh=s(),Ah=n("code",null,"\u3010\u5F3A\u5236\u3011",-1),Oh=s(" \u7528 "),Ch=n("code",null,"Number.isFinite",-1),Ih=s(" \u4EE3\u66FF "),Th=n("code",null,"isFinite",-1),Bh=s(". eslint: "),Eh={href:"https://eslint.org/docs/rules/no-restricted-globals",target:"_blank",rel:"noopener noreferrer"},Lh=n("code",null,"no-restricted-globals",-1),zh=t(`<blockquote><p>Why? \u7406\u7531\u540C\u4E0A\uFF0C\u4F1A\u628A\u4E00\u4E2A\u975E\u6570\u5B57\u53D8\u91CF\u5F3A\u8F6C\u6210\u6570\u5B57\uFF0C\u7136\u540E\u505A\u5224\u65AD\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&#39;2e3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// good</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&#39;2e3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;2e3&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css\u89C4\u8303\u6307\u5357" tabindex="-1"><a class="header-anchor" href="#css\u89C4\u8303\u6307\u5357" aria-hidden="true">#</a> CSS\u89C4\u8303\u6307\u5357</h2><p><em>BEM\u7684\u610F\u601D\u5C31\u662F\u5757\uFF08block\uFF09\u3001\u5143\u7D20\uFF08element\uFF09\u3001\u4FEE\u9970\u7B26\uFF08modifier\uFF09,\u662F\u7531Yandex\u56E2\u961F\u63D0\u51FA\u7684\u4E00\u79CD\u524D\u7AEF\u547D\u540D\u65B9\u6CD5\u8BBA\u3002\u8FD9\u79CD\u5DE7\u5999\u7684\u547D\u540D\u65B9\u6CD5\u8BA9\u4F60\u7684CSS\u7C7B\u5BF9\u5176\u4ED6\u5F00\u53D1\u8005\u6765\u8BF4\u66F4\u52A0\u900F\u660E\u800C\u4E14\u66F4\u6709\u610F\u4E49\u3002BEM\u547D\u540D\u7EA6\u5B9A\u66F4\u52A0\u4E25\u683C\uFF0C\u800C\u4E14\u5305\u542B\u66F4\u591A\u7684\u4FE1\u606F\uFF0C\u5B83\u4EEC\u7528\u4E8E\u4E00\u4E2A\u56E2\u961F\u5F00\u53D1\u4E00\u4E2A\u8017\u65F6\u7684\u5927\u9879\u76EE</em></p><h3 id="\u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F" aria-hidden="true">#</a> \u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F\u5982\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F\u5982\u4E0B" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u547D\u540D\u7EA6\u5B9A\u7684\u6A21\u5F0F\u5982\u4E0B</h4><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>  <span class="token selector">.block</span> <span class="token punctuation">{</span>
     <span class="token comment">/*styles*/</span> 
  <span class="token punctuation">}</span> 
  
  <span class="token selector">.block__element</span> <span class="token punctuation">{</span> 
    <span class="token comment">/* styles */</span> 
  
  <span class="token punctuation">}</span>

  <span class="token selector">.block--modifier</span> <span class="token punctuation">{</span>
     <span class="token comment">/* styles */</span> 
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5757-1" tabindex="-1"><a class="header-anchor" href="#\u5757-1" aria-hidden="true">#</a> \u5757</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u5757\u5C31\u662F\u4E00\u4E2A\u7EC4\u4EF6-\u5982" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4E00\u4E2A\u5757\u5C31\u662F\u4E00\u4E2A\u7EC4\u4EF6-\u5982" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4E00\u4E2A\u5757\u5C31\u662F\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u5982\uFF1A</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- innerhtml --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u5E94\u7684css</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>  <span class="token selector">.form</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u9970\u7B26" aria-hidden="true">#</a> \u4FEE\u9970\u7B26</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u4FEE\u9970\u7B26\u662F\u6539\u53D8\u67D0\u4E2A\u5757\u7684\u5916\u89C2\u7684\u6807\u5FD7\u3002\u8981\u4F7F\u7528\u4FEE\u9970\u7B26-\u53EF\u4EE5\u5C06-modifier-\u6DFB\u52A0\u5230\u5757\u4E2D\u3002\u4ECE\u4E0A\u9762\u7684form\u793A\u4F8B\u7EE7\u7EED\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u4FEE\u9970\u7B26\u662F\u6539\u53D8\u67D0\u4E2A\u5757\u7684\u5916\u89C2\u7684\u6807\u5FD7\u3002\u8981\u4F7F\u7528\u4FEE\u9970\u7B26-\u53EF\u4EE5\u5C06-modifier-\u6DFB\u52A0\u5230\u5757\u4E2D\u3002\u4ECE\u4E0A\u9762\u7684form\u793A\u4F8B\u7EE7\u7EED\u547D\u540D" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u4FEE\u9970\u7B26\u662F\u6539\u53D8\u67D0\u4E2A\u5757\u7684\u5916\u89C2\u7684\u6807\u5FD7\u3002\u8981\u4F7F\u7528\u4FEE\u9970\u7B26\uFF0C\u53EF\u4EE5\u5C06 --modifier \u6DFB\u52A0\u5230\u5757\u4E2D\u3002\u4ECE\u4E0A\u9762\u7684form\u793A\u4F8B\u7EE7\u7EED\u547D\u540D</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form form--red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- innerhtml --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u5E94\u7684css</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>  <span class="token selector">.form</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 

  <span class="token selector">.form--red</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5143\u7D20" aria-hidden="true">#</a> \u5143\u7D20</h3><h4 id="\u3010\u5F3A\u5236\u3011-\u5143\u7D20\u662F\u5757\u7684\u5B50\u8282\u70B9\u3002\u4E3A\u4E86\u8868\u660E\u67D0\u4E2A\u4E1C\u897F\u662F\u4E00\u4E2A\u5143\u7D20-\u4F60\u9700\u8981\u5728\u5757\u540D\u540E\u6DFB\u52A0-element\u3002\u6240\u4EE5-\u5982\u679C\u4F60\u770B\u5230\u4E00\u4E2A\u50CF\u90A3\u6837\u7684\u540D\u5B57-\u6BD4\u5982-form-row-\u4F60\u5C06\u7ACB\u5373\u77E5\u9053-form-\u5757\u4E2D\u6709\u4E00\u4E2A-row-\u5143\u7D20\u3002" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u5143\u7D20\u662F\u5757\u7684\u5B50\u8282\u70B9\u3002\u4E3A\u4E86\u8868\u660E\u67D0\u4E2A\u4E1C\u897F\u662F\u4E00\u4E2A\u5143\u7D20-\u4F60\u9700\u8981\u5728\u5757\u540D\u540E\u6DFB\u52A0-element\u3002\u6240\u4EE5-\u5982\u679C\u4F60\u770B\u5230\u4E00\u4E2A\u50CF\u90A3\u6837\u7684\u540D\u5B57-\u6BD4\u5982-form-row-\u4F60\u5C06\u7ACB\u5373\u77E5\u9053-form-\u5757\u4E2D\u6709\u4E00\u4E2A-row-\u5143\u7D20\u3002" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u5143\u7D20\u662F\u5757\u7684\u5B50\u8282\u70B9\u3002\u4E3A\u4E86\u8868\u660E\u67D0\u4E2A\u4E1C\u897F\u662F\u4E00\u4E2A\u5143\u7D20\uFF0C\u4F60\u9700\u8981\u5728\u5757\u540D\u540E\u6DFB\u52A0 __element\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u4F60\u770B\u5230\u4E00\u4E2A\u50CF\u90A3\u6837\u7684\u540D\u5B57\uFF0C\u6BD4\u5982 form__row \uFF0C\u4F60\u5C06\u7ACB\u5373\u77E5\u9053 .form \u5757\u4E2D\u6709\u4E00\u4E2A row \u5143\u7D20\u3002</h4><blockquote><p>BEM \u5143\u7D20\u6709\u4E24\u4E2A\u4F18\u70B9\uFF1A</p><ol><li>\u4F60\u53EF\u4EE5\u8BA9 CSS \u7684\u4F18\u5148\u7EA7\u4FDD\u6301\u76F8\u5BF9\u6241\u5E73</li><li>\u4F60\u80FD\u7ACB\u5373\u77E5\u9053\u54EA\u4E9B\u4E1C\u897F\u662F\u4E00\u4E2A\u5B50\u5143\u7D20\u3002</li></ol></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form form--red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>form__row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u5E94\u7684css</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>  <span class="token selector">.form</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 

  <span class="token selector">.form--red</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.form__row</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>100%
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u3010\u5F3A\u5236\u3011-\u6C38\u8FDC\u4E0D\u5E94\u8BE5\u94FE\u5F0F\u547D\u540D-bem-\u5143\u7D20\u3002\u901A\u8FC7\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\u7ED5\u8FC7\u957F\u957F\u7684-bem-\u94FE\u5F0F\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F3A\u5236\u3011-\u6C38\u8FDC\u4E0D\u5E94\u8BE5\u94FE\u5F0F\u547D\u540D-bem-\u5143\u7D20\u3002\u901A\u8FC7\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\u7ED5\u8FC7\u957F\u957F\u7684-bem-\u94FE\u5F0F\u547D\u540D" aria-hidden="true">#</a> <code>\u3010\u5F3A\u5236\u3011</code> \u6C38\u8FDC\u4E0D\u5E94\u8BE5\u94FE\u5F0F\u547D\u540D BEM \u5143\u7D20\u3002\u901A\u8FC7\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\u7ED5\u8FC7\u957F\u957F\u7684 BEM \u94FE\u5F0F\u547D\u540D\uFF1A</h4><div class="custom-container danger"><p class="custom-container-title">\u8B66\u544A</p><ol><li><p>\u53EA\u628A\u5B50\u5B50\u5143\u7D20\u94FE\u63A5\u5230\u6709\u610F\u4E49\u7684</p></li><li><p>\u521B\u5EFA\u65B0\u7684\u5757\u6765\u4FDD\u5B58\u5143\u7D20</p></li></ol></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  <span class="token comment">&lt;!-- bad --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__row__input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- good \u94FE\u63A5\u5B59\u5143\u7D20\u5230\u5757--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- good \u521B\u5EFA\u65B0\u7684\u5757\u6765\u4FDD\u5B58\u5B59\u5143\u7D20--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row__input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*bad*/</span>
<span class="token selector">.form__row__input</span> <span class="token punctuation">{</span>
  <span class="token comment">/* styles */</span> 
<span class="token punctuation">}</span>

 <span class="token comment">/*good__\u94FE\u63A5\u5B59\u5143\u7D20\u5230\u5757*/</span>
<span class="token selector">.form__row</span> <span class="token punctuation">{</span>
  <span class="token comment">/* styles */</span> 
<span class="token punctuation">}</span>

<span class="token comment">/*good__\u94FE\u63A5\u5B59\u5143\u7D20\u5230\u5757*/</span>
<span class="token selector">.form__input</span> <span class="token punctuation">{</span> 
  <span class="token comment">/* styles */</span> 
<span class="token punctuation">}</span>

<span class="token comment">/*good__\u521B\u5EFA\u65B0\u7684\u5757\u6765\u4FDD\u5B58\u5B59\u5143\u7D20*/</span>
<span class="token selector">.row</span> <span class="token punctuation">{</span>
  <span class="token comment">/* styles */</span> 
<span class="token punctuation">}</span>

<span class="token comment">/*good__\u521B\u5EFA\u65B0\u7684\u5757\u6765\u4FDD\u5B58\u5B59\u5143\u7D20*/</span>
<span class="token selector">.row__input</span> <span class="token punctuation">{</span>
  <span class="token comment">/* styles */</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27);function Ph(Dh,Jh){const a=l("ExternalLinkIcon");return p(),c("div",null,[r,i(" more "),d,n("blockquote",null,[n("p",null,[k,n("a",v,[m,e(a)]),b])]),h,n("blockquote",null,[_,g,n("p",null,[f,n("a",y,[w,e(a)]),x])]),j,q,n("blockquote",null,[n("p",null,[S,N,n("a",A,[O,e(a)]),C,n("a",I,[T,e(a)]),B,n("a",E,[L,e(a)]),z,P,D])]),J,F,n("h4",M,[G,H,R,V,$,W,U,Y,n("a",Q,[X,e(a)]),K,n("a",Z,[nn,e(a)])]),sn,n("h4",an,[en,tn,on,pn,cn,ln,un,rn,n("a",dn,[kn,e(a)])]),vn,n("h4",mn,[bn,hn,_n,gn,n("a",fn,[yn,e(a)])]),wn,n("h4",xn,[jn,qn,Sn,Nn,n("a",An,[On,e(a)])]),Cn,n("h4",In,[Tn,Bn,En,Ln,n("a",zn,[Pn,e(a)])]),Dn,n("h4",Jn,[Fn,Mn,Gn,Hn,Rn,Vn,n("a",$n,[Wn,e(a)])]),Un,n("h4",Yn,[Qn,Xn,Kn,Zn,ns,ss,n("a",as,[es,ts,e(a)]),os,ps,cs,n("a",is,[ls,e(a)])]),us,n("h4",rs,[ds,ks,vs,ms,n("a",bs,[hs,e(a)])]),_s,n("h4",gs,[fs,ys,ws,xs,n("a",js,[qs,e(a)]),Ss]),Ns,n("h4",As,[Os,Cs,Is,Ts,Bs,Es,n("a",Ls,[zs,e(a)]),Ps]),Ds,n("h4",Js,[Fs,Ms,Gs,Hs,n("a",Rs,[Vs,e(a)]),$s]),Ws,n("h4",Us,[Ys,Qs,Xs,Ks,n("a",Zs,[na,e(a)]),sa,aa,ea]),ta,n("h4",oa,[pa,ca,ia,la,n("a",ua,[ra,e(a)]),da,n("a",ka,[va,e(a)])]),ma,n("h4",ba,[ha,_a,ga,fa,n("a",ya,[wa,e(a)])]),xa,n("h4",ja,[qa,Sa,Na,Aa,n("a",Oa,[Ca,e(a)])]),Ia,n("h4",Ta,[Ba,Ea,La,za,Pa,Da,n("a",Ja,[Fa,e(a)])]),Ma,n("h4",Ga,[Ha,Ra,Va,$a,n("a",Wa,[Ua,e(a)]),n("a",Ya,[Qa,e(a)])]),Xa,n("h4",Ka,[Za,ne,se,ae,n("a",ee,[te,e(a)])]),n("h4",oe,[pe,ce,n("a",ie,[le,e(a)])]),ue,n("h4",re,[de,ke,ve,me,n("a",be,[he,e(a)])]),_e,ge,n("blockquote",null,[n("p",null,[fe,n("a",ye,[we,e(a)]),xe])]),je,n("h4",qe,[Se,Ne,Ae,Oe,n("a",Ce,[Ie,e(a)])]),Te,n("h4",Be,[Ee,Le,ze,Pe,De,Je,Fe,Me,n("a",Ge,[He,e(a)])]),Re,n("h4",Ve,[$e,We,Ue,Ye,Qe,Xe,Ke,Ze,n("a",nt,[st,e(a)])]),at,n("h4",et,[tt,ot,pt,ct,n("a",it,[lt,e(a)])]),ut,n("h4",rt,[dt,kt,vt,mt,n("a",bt,[ht,e(a)])]),_t,n("h4",gt,[ft,yt,wt,xt,n("a",jt,[qt,e(a)]),n("a",St,[Nt,e(a)])]),At,n("h4",Ot,[Ct,It,Tt,Bt,n("a",Et,[Lt,e(a)])]),zt,n("h4",Pt,[Dt,Jt,Ft,Mt,n("a",Gt,[Ht,e(a)])]),Rt,n("h4",Vt,[$t,Wt,Ut,Yt,n("a",Qt,[Xt,e(a)])]),Kt,n("h4",Zt,[no,so,ao,eo,n("a",to,[oo,e(a)]),po,n("a",co,[io,e(a)])]),lo,n("h4",uo,[ro,ko,vo,mo,n("a",bo,[ho,e(a)]),_o,go,fo,n("a",yo,[wo,xo,e(a)]),jo,n("a",qo,[So,e(a)])]),No,n("h4",Ao,[Oo,Co,Io,To,n("a",Bo,[Eo,e(a)])]),Lo,n("h4",zo,[Po,Do,Jo,Fo,Mo,Go,Ho,Ro,Vo,$o,n("a",Wo,[Uo,e(a)])]),Yo,n("h4",Qo,[Xo,Ko,Zo,np,n("a",sp,[ap,e(a)])]),ep,n("h4",tp,[op,pp,cp,ip,n("a",lp,[up,e(a)])]),rp,n("h4",dp,[kp,vp,mp,bp,n("a",hp,[_p,e(a)])]),gp,n("h4",fp,[yp,wp,xp,jp,qp,Sp,n("a",Np,[Ap,e(a)])]),Op,n("h4",Cp,[Ip,Tp,Bp,Ep,Lp,zp,n("a",Pp,[Dp,e(a)])]),Jp,n("h4",Fp,[Mp,Gp,Hp,Rp,n("a",Vp,[$p,e(a)])]),Wp,n("h4",Up,[Yp,Qp,Xp,Kp,Zp,nc,n("a",sc,[ac,e(a)])]),ec,n("h4",tc,[oc,pc,cc,ic,lc,uc,n("a",rc,[dc,e(a)])]),kc,n("h4",vc,[mc,bc,hc,_c,gc,fc,n("a",yc,[wc,e(a)])]),xc,n("h4",jc,[qc,Sc,Nc,Ac,Oc,Cc,Ic,Tc,n("a",Bc,[Ec,Lc,e(a)]),n("a",zc,[Pc,e(a)])]),Dc,n("h4",Jc,[Fc,Mc,Gc,Hc,n("a",Rc,[Vc,e(a)])]),$c,n("h4",Wc,[Uc,Yc,Qc,Xc,n("a",Kc,[Zc,e(a)])]),ni,n("h4",si,[ai,ei,ti,oi,pi,ci,n("a",ii,[li,ui,e(a)]),ri]),di,n("h4",ki,[vi,mi,bi,hi,_i,gi,fi,yi,n("a",wi,[xi,ji,e(a)]),n("a",qi,[Si,e(a)])]),Ni,n("h4",Ai,[Oi,Ci,Ii,Ti,Bi,Ei,Li,zi,n("a",Pi,[Di,e(a)])]),Ji,n("h4",Fi,[Mi,Gi,Hi,Ri,n("a",Vi,[$i,e(a)])]),Wi,n("h4",Ui,[Yi,Qi,Xi,Ki,Zi,nl,sl,al,n("a",el,[tl,e(a)])]),ol,n("h4",pl,[cl,il,ll,ul,rl,dl,n("a",kl,[vl,ml,e(a)]),bl,n("a",hl,[_l,gl,e(a)]),fl]),yl,n("h4",wl,[xl,jl,ql,Sl,n("a",Nl,[Al,e(a)])]),Ol,n("h4",Cl,[Il,Tl,Bl,El,Ll,zl,Pl,Dl,n("a",Jl,[Fl,e(a)]),Ml,n("a",Gl,[Hl,e(a)]),Rl]),Vl,n("p",null,[$l,n("a",Wl,[Ul,e(a)]),Yl,n("a",Ql,[Xl,e(a)]),Kl]),Zl,n("h4",nu,[su,au,eu,tu,ou,pu,cu,iu,lu,uu,ru,du,n("a",ku,[vu,e(a)])]),mu,n("p",null,[bu,n("a",hu,[_u,e(a)]),gu]),n("h4",fu,[yu,n("a",wu,[xu,e(a)]),ju]),qu,n("h4",Su,[Nu,Au,Ou,Cu,n("a",Iu,[Tu,e(a)])]),Bu,n("h4",Eu,[Lu,zu,Pu,Du,n("a",Ju,[Fu,e(a)])]),Mu,n("h4",Gu,[Hu,Ru,Vu,$u,Wu,Uu,Yu,Qu,Xu,Ku,Zu,nr,n("a",sr,[ar,e(a)])]),er,n("h4",tr,[or,pr,cr,ir,n("a",lr,[ur,e(a)])]),rr,n("h4",dr,[kr,vr,mr,br,hr,_r,gr,fr,yr,wr,n("a",xr,[jr,e(a)])]),qr,n("h4",Sr,[Nr,n("a",Ar,[Or,e(a)])]),Cr,n("h4",Ir,[Tr,Br,Er,Lr,n("a",zr,[Pr,e(a)])]),Dr,n("h4",Jr,[Fr,Mr,Gr,Hr,n("a",Rr,[Vr,e(a)])]),$r,n("h4",Wr,[Ur,Yr,Qr,Xr,n("a",Kr,[Zr,e(a)])]),nd,n("h4",sd,[ad,ed,td,od,pd,cd,id,ld,n("a",ud,[rd,e(a)])]),dd,n("h4",kd,[vd,md,bd,hd,n("a",_d,[gd,e(a)])]),fd,n("h4",yd,[wd,xd,jd,qd,n("a",Sd,[Nd,e(a)])]),Ad,n("h4",Od,[Cd,Id,Td,Bd,n("a",Ed,[Ld,e(a)]),n("a",zd,[Pd,e(a)])]),Dd,n("h4",Jd,[Fd,Md,Gd,Hd,n("a",Rd,[Vd,e(a)])]),$d,n("h4",Wd,[Ud,Yd,Qd,Xd,n("a",Kd,[Zd,e(a)])]),nk,n("h4",sk,[ak,ek,tk,ok,n("a",pk,[ck,e(a)])]),ik,n("h4",lk,[uk,rk,dk,kk,n("a",vk,[mk,e(a)])]),bk,n("h4",hk,[_k,gk,fk,yk,n("a",wk,[xk,e(a)])]),jk,n("h4",qk,[Sk,Nk,Ak,Ok,n("a",Ck,[Ik,e(a)]),Tk,n("a",Bk,[Ek,e(a)])]),Lk,n("h4",zk,[Pk,Dk,Jk,Fk,Mk,Gk,Hk,Rk,n("a",Vk,[$k,e(a)])]),Wk,n("h4",Uk,[Yk,Qk,Xk,Kk,Zk,nv,sv,av,n("a",ev,[tv,e(a)])]),ov,n("h4",pv,[cv,iv,lv,uv,n("a",rv,[dv,e(a)])]),kv,n("h4",vv,[mv,bv,hv,_v,n("a",gv,[fv,e(a)])]),yv,n("h4",wv,[xv,jv,qv,Sv,Nv,Av,Ov,Cv,n("a",Iv,[Tv,e(a)])]),Bv,n("h4",Ev,[Lv,zv,Pv,Dv,n("a",Jv,[Fv,e(a)])]),n("h4",Mv,[Gv,Hv,Rv,Vv,n("a",$v,[Wv,e(a)])]),Uv,n("h4",Yv,[Qv,Xv,Kv,Zv,n("a",nm,[sm,e(a)])]),am,n("h4",em,[tm,om,pm,cm,im,lm,n("a",um,[rm,e(a)])]),n("blockquote",null,[n("p",null,[dm,n("a",km,[vm,e(a)]),mm])]),bm,n("h4",hm,[_m,gm,fm,ym,n("a",wm,[xm,e(a)])]),jm,n("h4",qm,[Sm,Nm,Am,Om,Cm,Im,Tm,Bm,Em,Lm,n("a",zm,[Pm,e(a)])]),Dm,n("h4",Jm,[Fm,Mm,Gm,Hm,Rm,Vm,n("a",$m,[Wm,e(a)]),Um]),Ym,n("h4",Qm,[Xm,Km,Zm,nb,sb,ab,n("a",eb,[tb,e(a)]),ob,n("a",pb,[cb,e(a)]),ib,n("a",lb,[ub,e(a)]),rb]),db,n("h4",kb,[vb,mb,bb,hb,n("a",_b,[gb,e(a)])]),fb,n("h4",yb,[wb,xb,jb,qb,n("a",Sb,[Nb,e(a)])]),Ab,n("h4",Ob,[Cb,Ib,Tb,Bb,n("a",Eb,[Lb,e(a)])]),zb,n("h4",Pb,[Db,Jb,Fb,Mb,n("a",Gb,[Hb,e(a)])]),Rb,n("h4",Vb,[$b,Wb,Ub,Yb,n("a",Qb,[Xb,e(a)])]),Kb,n("h4",Zb,[nh,sh,ah,eh,th,oh,n("a",ph,[ch,e(a)]),ih]),lh,n("p",null,[n("a",uh,[rh,e(a)]),dh]),n("h4",kh,[vh,mh,bh,hh,_h,gh,fh,yh,n("a",wh,[xh,e(a)])]),jh,n("h4",qh,[Sh,Nh,Ah,Oh,Ch,Ih,Th,Bh,n("a",Eh,[Lh,e(a)])]),zh])}const Gh=o(u,[["render",Ph],["__file","index.html.vue"]]);export{Gh as default};
