(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{815:function(v,_,e){"use strict";e.r(_);var o=e(16),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("组件在前端开发中越来越重要了，开发者更细分、聚焦于"),e("code",[v._v("组件层面")]),v._v("的开发，然后像搭积木一样完成"),e("code",[v._v("应用功能")]),v._v("。组件库可以"),e("code",[v._v("统一管理组件")]),v._v("，输出"),e("code",[v._v("文档")]),v._v("，能提升组件"),e("code",[v._v("复用性")]),v._v("、避免重复造轮子。赶快搭建自己的组件库吧，这瓜保甜！")]),v._v(" "),e("p",[v._v("补充在线演示地址：组件库最终版本在线演示地址。")]),v._v(" "),e("h2",{attrs:{id:"需求背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求背景"}},[v._v("#")]),v._v(" 需求背景")]),v._v(" "),e("p",[v._v("虽然业界已经有很多成熟优秀的"),e("code",[v._v("ui库")]),v._v("可以供我们使用，也为我们解决了很多问题。但是基础的东西总是不能满足所有业务场景，更多时候我们需要"),e("code",[v._v("扩展功能")]),v._v("来"),e("code",[v._v("满足业务")]),v._v("的需求，好比 "),e("code",[v._v("table")]),v._v(" 需要自定列这样的～相信这也是很多小伙伴开发时候的场景。")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("跨项目复用")]),v._v("。很多时候为了方便，只是基于当前项目对组件进行二次封装（反正我是这样干的哈哈），然后做其他项目遇到同样场景时，要么"),e("code",[v._v("copy")]),v._v("（经常忘记之前封装在哪个项目里了🌚）、要么重新干一个...总是缺少一个"),e("code",[v._v("统筹")]),v._v("的地方，复用很不方便。")]),v._v(" "),e("li",[e("code",[v._v("组件使用文档")]),v._v("。文档产出对于一线开发来说可能相对比较欠缺，因为大家都忙于撸业务，文档这种奢侈品能省一点是一点。这样导致一个问题就是自己封装的组件别人"),e("code",[v._v("不会用")]),v._v("、"),e("code",[v._v("不知道在哪里用")]),v._v("，甚至"),e("code",[v._v("不知道")]),v._v("有这么个东西。")]),v._v(" "),e("li",[e("code",[v._v("跨团队共建发展")]),v._v("。大多B端系统都是以 "),e("code",[v._v("element")]),v._v(" 、 "),e("code",[v._v("antd")]),v._v(" 等ui框架为主，基于各种业务场景，基本都会有自己团队的"),e("code",[v._v("二次封装")]),v._v("。其实类似的功能扩展肯定会有的，如果有组件库把组件都集中起来，就能减少很多重复造轮子的劳动力了！")])]),v._v(" "),e("h2",{attrs:{id:"项目架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目架构"}},[v._v("#")]),v._v(" 项目架构")]),v._v(" "),e("h3",{attrs:{id:"monorepo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo"}},[v._v("#")]),v._v(" Monorepo")]),v._v(" "),e("p",[v._v("整个工程的代码组织采用 "),e("code",[v._v("Monorepo")]),v._v(" 的组织方式，使用工具 "),e("code",[v._v("pnpm + workspace")]),v._v(" 来实现。所以全部项目都是放在一个仓库里的，包括"),e("code",[v._v("文档")]),v._v("、"),e("code",[v._v("组件")]),v._v("。\n工程具体分为以下几块，以"),e("code",[v._v("文档")]),v._v("和"),e("code",[v._v("组件库")]),v._v("为两大类进行分块：")]),v._v(" "),e("ol",[e("li",[v._v("文档工程（docs）\n"),e("ul",[e("li",[v._v("安装指引")]),v._v(" "),e("li",[v._v("组件使用文档（elm、elp、antd）")]),v._v(" "),e("li",[v._v("组件开发文档")])])]),v._v(" "),e("li",[v._v("组件库（packages）\n"),e("ul",[e("li",[v._v("element-plus")]),v._v(" "),e("li",[v._v("element-ui")]),v._v(" "),e("li",[v._v("ant-design")]),v._v(" "),e("li",[v._v("voice-components")])])])]),v._v(" "),e("p",[v._v("其中 "),e("code",[v._v("voice-components")]),v._v(" 笔者是打算用来做 "),e("code",[v._v("adapt层")]),v._v(" 用的，因为文档工具用了 "),e("code",[v._v("VitePress")]),v._v("（后面会讲），它只能支持 "),e("code",[v._v("vue3")]),v._v(" 的组件，所以 "),e("code",[v._v("vue2")]),v._v(" 、 "),e("code",[v._v("react")]),v._v(" 的组件需要做一层适配，这一块是预留的，暂时可以不关注。")])])}),[],!1,null,null,null);_.default=c.exports}}]);