(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{968:function(t,e,n){"use strict";n.r(e);var s=n(36),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"什么是渐进式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是渐进式"}},[t._v("#")]),t._v(" 什么是渐进式")]),t._v(" "),n("p",[t._v("先使用Vue的核心库，再根据你的需要的功能再去逐渐增加加相应的插件。")]),t._v(" "),n("ul",[n("li",[t._v("渐进式代表的含义是：主张最少，")]),t._v(" "),n("li",[t._v("渐进式的含义，我的理解是：没有多做职责之外的事。")])]),t._v(" "),n("p",[t._v("Vue的核心的功能，是一个视图模板引擎，但这不是说Vue就不能成为一个框架。\n在声明式渲染（视图模板引擎）的基础上，我们可以通过添加组件系统、客户端路由、大规模状态管理来构建一个完整的框架。\n更重要的是，这些功能相互独立，你可以在核心功能的基础上任意选用其他的部件，不一定要全部整合在一起。\n可以看到，所说的“渐进式”，其实就是Vue的使用方式，同时也体现了Vue的设计的理念。")])])}),[],!1,null,null,null);e.default=r.exports}}]);