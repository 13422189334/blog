(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{816:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是-lru"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-lru"}},[t._v("#")]),t._v(" 什么是 LRU？")]),t._v(" "),a("p",[a("code",[t._v("LRU")]),t._v(" 英文全称是 "),a("code",[t._v("Least Recently Used")]),t._v("，英译过来就是 "),a("code",[t._v("最近最少使用")]),t._v(" 的意思。")]),t._v(" "),a("h3",{attrs:{id:"百度百科"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百度百科"}},[t._v("#")]),t._v(" 百度百科")]),t._v(" "),a("p",[t._v("LRU 是一种常用的页面置换算法，选择 "),a("code",[t._v("最近")]),t._v(" "),a("code",[t._v("最久")]),t._v(" "),a("code",[t._v("未使用")]),t._v(" 的页面予以"),a("code",[t._v("淘汰")]),t._v("。")]),t._v(" "),a("p",[t._v("该算法赋予"),a("code",[t._v("每个页面")]),t._v("一个"),a("code",[t._v("访问字段")]),t._v("，用来记录一个页面自上次被访问以来所 "),a("code",[t._v("经历的时间t")]),t._v("，当须淘汰一个页面时，选择现有页面中其 "),a("code",[t._v("t")]),t._v(" 值最大的，即"),a("code",[t._v("最近最少使用")]),t._v("的页面予以淘汰。")]),t._v(" "),a("h3",{attrs:{id:"通俗的解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通俗的解释"}},[t._v("#")]),t._v(" 通俗的解释")]),t._v(" "),a("p",[t._v("假如我们有一块"),a("code",[t._v("内存")]),t._v("，专门用来缓存我们"),a("code",[t._v("最近访问")]),t._v("的网页，访问一个"),a("code",[t._v("新网页")]),t._v("，我们就会往内存中添加一个"),a("code",[t._v("网页地址")]),t._v("，随着网页的不断增加，内存存满了，这个时候我们就需要考虑删除一些网页了。这个时候我们找到内存中"),a("code",[t._v("最早访问")]),t._v("的那个网页地址，然后把它"),a("code",[t._v("删掉")]),t._v("。\n这一整个过程就可以称之为 L"),a("code",[t._v("RU")]),t._v(" 算法。")]),t._v(" "),a("p",[t._v("虽然上面的解释比较好懂了，但是我们还有很多地方没有考虑到，比如如下几点：")]),t._v(" "),a("ul",[a("li",[t._v("当我们访问内存中"),a("code",[t._v("已经存在")]),t._v("的"),a("code",[t._v("网址")]),t._v("，那么该网址是否需要"),a("code",[t._v("更新")]),t._v("在内存中的"),a("code",[t._v("存储顺序")]),t._v("。")]),t._v(" "),a("li",[t._v("当我们内存中还没有数据的时候，是否需要执行删除操作。")])]),t._v(" "),a("h2",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),a("p",[a("code",[t._v("LRU")]),t._v(" 算法使用的场景非常多，这里简单举几个例子即可：")]),t._v(" "),a("ol",[a("li",[t._v("操作系统底层的内存管理，其中就包括有 LRU 算法")]),t._v(" "),a("li",[t._v("我们常见的缓存服务，比如 redis 等等")]),t._v(" "),a("li",[t._v("浏览器的最近浏览记录存储，如下图：")])]),t._v(" "),a("p",[t._v("总之 LRU 算法的运用场景还是蛮多的，所以我们很有必要掌握它。")]),t._v(" "),a("h2",{attrs:{id:"梳理-lru-思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#梳理-lru-思路"}},[t._v("#")]),t._v(" 梳理 LRU 思路")]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ol",[a("li",[t._v("需要一块"),a("code",[t._v("有限")]),t._v("的"),a("code",[t._v("存储空间")]),t._v("，因为无限的化就没必要使用 "),a("code",[t._v("LRU")]),t._v(" 算法"),a("code",[t._v("删除数据")]),t._v("了。")]),t._v(" "),a("li",[a("code",[t._v("存储空间")]),t._v("里面存储的数据需要是"),a("code",[t._v("有序的")]),t._v("，因为必须要"),a("code",[t._v("顺序")]),t._v("来"),a("code",[t._v("删除数据")]),t._v("，所以可以考虑使用 "),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("Map")]),t._v(" 数据结构来存储。")]),t._v(" "),a("li",[t._v("能够"),a("code",[t._v("删除")]),t._v("或者"),a("code",[t._v("添加")]),t._v("以及"),a("code",[t._v("获取")]),t._v("到这块存储空间中的"),a("code",[t._v("指定数据")]),t._v("。")]),t._v(" "),a("li",[t._v("存储空间"),a("code",[t._v("存满")]),t._v("之后，在添加数据时，会自动删除时间"),a("code",[t._v("最久远")]),t._v("的那条数据。")])]),t._v(" "),a("h3",{attrs:{id:"实现需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现需求"}},[t._v("#")]),t._v(" 实现需求")]),t._v(" "),a("ol",[a("li",[t._v("实现一个 "),a("code",[t._v("LRUCache")]),t._v(" 类型，用来充当"),a("code",[t._v("存储空间")])]),t._v(" "),a("li",[t._v("采用 "),a("code",[t._v("Map")]),t._v(" 数据结构"),a("code",[t._v("存储数据")]),t._v("，因为它的存取时间复杂度为 "),a("code",[t._v("O(1)")]),t._v("，数组为 "),a("code",[t._v("O(n)")])]),t._v(" "),a("li",[t._v("实现 "),a("code",[t._v("get")]),t._v(" 和 "),a("code",[t._v("set")]),t._v(" 方法，用来"),a("code",[t._v("获取")]),t._v("和"),a("code",[t._v("添加")]),t._v("数据")]),t._v(" "),a("li",[t._v("存储空间有"),a("code",[t._v("长度限制")]),t._v("，所以"),a("code",[t._v("无需")]),t._v("提供"),a("code",[t._v("删除方法")]),t._v("，存储满之后，自动删除最久远的那条数据")]),t._v(" "),a("li",[t._v("当使用 "),a("code",[t._v("get")]),t._v(" 获取数据后，该条数据需要"),a("code",[t._v("更新")]),t._v("到"),a("code",[t._v("最前面")])])]),t._v(" "),a("p",[t._v("现在已经把 "),a("code",[t._v("LRU")]),t._v(" 算法的特点以及实现思路列了出来，那么接下来就去实现它吧！")]),t._v(" "),a("h2",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("首先我们定义一个 "),a("code",[t._v("LRUCache")]),t._v(" 类，封装所有的方法和变量。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRUCache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("lenght")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lenght"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储数据，通过键值对的方式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上段代码只是最简单的一个架子，我们需要去实现具体的 "),a("code",[t._v("get")]),t._v(" 和 "),a("code",[t._v("set")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRUCache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("lenght")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lenght"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储数据，通过键值对的方式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果超出了容量，则需要删除最久的数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" delKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未找到")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取元素")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除元素")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新插入元素")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上段代码中实现实现了 "),a("code",[t._v("get")]),t._v(" 和 "),a("code",[t._v("set")]),t._v(" 方法，下面说一下这两个方法的"),a("code",[t._v("实现思路")]),t._v("：")]),t._v(" "),a("p",[a("code",[t._v("set")]),t._v(" 方法：往 "),a("code",[t._v("map")]),t._v(" 里面"),a("code",[t._v("添加")]),t._v("新数据，如果添加的数据"),a("code",[t._v("存在")]),t._v("了，则"),a("code",[t._v("先删除")]),t._v("该条数据，然后"),a("code",[t._v("再添加")]),t._v("。如果添加数据后"),a("code",[t._v("超长")]),t._v("了，则需要删除"),a("code",[t._v("最久远")]),t._v("的一条数据。"),a("code",[t._v("data.keys().next().value")]),t._v(" 便是获取最后一条数据的意思。\n"),a("code",[t._v("get")]),t._v(" 方法：首先从 "),a("code",[t._v("map")]),t._v(" 对象中"),a("code",[t._v("拿出")]),t._v("该条数据，然后"),a("code",[t._v("删除")]),t._v("该条数据，最后再重新"),a("code",[t._v("插入")]),t._v("该条数据，确保将该条数据移动到"),a("code",[t._v("最前面")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),a("p",[t._v("存储数据 set：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lruCache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRUCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小猪课堂'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'height'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("176")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'weight'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  LRUCache {length: 5, data: Map(5)}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    data: Map(5)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Entries]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        0: {"name" => "小猪课堂"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        1: {"age" => 22}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        2: {"sex" => "男"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        3: {"height" => 176}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        4: {"weight" => "100"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      size: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Prototype]]: Map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    length: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    [[Prototype]]: Object")]),t._v("\n")])])]),a("p",[t._v("继续插入数据，此时会超长，代码如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("lruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grade'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  LRUCache {length: 5, data: Map(5)}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    data: Map(5)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Entries]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        0: {"age" => 22}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        1: {"sex" => "男"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        2: {"height" => 176}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        3: {"weight" => "100"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        4: {"grade" => "10000"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      size: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Prototype]]: Map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    length: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    [[Prototype]]: Object")]),t._v("\n")])])]),a("p",[t._v("此时我们发现存储时间最久的 name 已经被移除了，新插入的数据变为了最前面的一个。")]),t._v(" "),a("p",[t._v("我们使用 "),a("code",[t._v("get")]),t._v(" 获取数据，代码如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("lruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lruCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  LRUCache {length: 5, data: Map(5)}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    data: Map(5)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Entries]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        0: {"age" => 22}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        1: {"height" => 176}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        2: {"weight" => "100"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        3: {"grade" => "10000"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        4: {"sex" => "男"}')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      size: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      [[Prototype]]: Map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    length: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    [[Prototype]]: Object")]),t._v("\n")])])]),a("p",[t._v("我们发现此时 sex 字段已经跑到最前面去了。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("code",[t._v("LRU")]),t._v(" 算法其实逻辑非常的简单，明白了原理之后实现起来非常的简单。")]),t._v(" "),a("p",[t._v("最主要的是需要使用什么"),a("code",[t._v("数据结构")]),t._v("来"),a("code",[t._v("存储数据")]),t._v("，因为 "),a("code",[t._v("map")]),t._v(" 的存取非常快，所以采用了它，当然数组其实也可以实现的。还有一些小伙伴使用链表来实现 "),a("code",[t._v("LRU")]),t._v("，这当然也是可以的。")])])}),[],!1,null,null,null);s.default=e.exports}}]);