import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,b as t}from"./app.a9ce305a.js";const e={},p=t(`<p>\u6BD4\u5982\u6709\u7236\u7EC4\u4EF6 Parent \u548C\u5B50\u7EC4\u4EF6 Child\uFF0C\u5982\u679C\u7236\u7EC4\u4EF6\u76D1\u542C\u5230\u5B50\u7EC4\u4EF6\u6302\u8F7D mounted \u5C31\u505A\u4E00\u4E9B\u903B\u8F91\u5904\u7406\uFF0C\u5E38\u89C4\u7684\u5199\u6CD5\u53EF\u80FD\u5982\u4E0B\uFF1A</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>// Parent.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">@mounted</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

// Child.vue
mounted() {
  this.$emit(&quot;mounted&quot;);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5916\uFF0C\u8FD8\u6709\u4E00\u79CD\u7279\u522B\u7B80\u5355\u7684\u65B9\u5F0F\uFF0C\u5B50\u7EC4\u4EF6\u4E0D\u9700\u8981\u4EFB\u4F55\u5904\u7406\uFF0C\u53EA\u9700\u8981\u5728\u7236\u7EC4\u4EF6\u5F15\u7528\u7684\u65F6\u5019\u901A\u8FC7@hook \u6765\u76D1\u542C\u5373\u53EF\uFF0C@hook\u4E5F\u53EF\u4EE5\u76D1\u542C\u5176\u5B83\u7684\u751F\u547D\u5468\u671F\u4E8B\u4EF6,\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name"><span class="token namespace">@hook:</span>mounted</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name"><span class="token namespace">@hook:</span>updated</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u539F\u7406\u5728vue\u6E90\u7801\u7684 <code>/src/core/instance/lifecycle.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6BCF\u4E2A\u751F\u547D\u5468\u671F\u540E\u90FD\u4F1A\u8C03\u7528 callHook(&#39;xxx&#39;) \u5982\u4E0B</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">callHook</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">hook</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_hasHookEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;hook:&#39;</span> <span class="token operator">+</span> hook<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
