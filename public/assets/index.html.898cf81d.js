import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,b as p}from"./app.289de5ca.js";const t={},e=p(`<h2 id="\u4E8C\u5206\u67E5\u627E\u7406\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E\u7406\u8BBA" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E\u7406\u8BBA</h2><p>\u4E8C\u5206\u67E5\u627E\u4E5F\u79F0\u6298\u534A\u67E5\u627E\uFF08Binary Search\uFF09\uFF0C\u5B83\u662F\u4E00\u79CD\u6548\u7387\u8F83\u9AD8\u7684\u67E5\u627E\u65B9\u6CD5\u3002\u4F46\u662F\uFF0C\u6298\u534A\u67E5\u627E\u8981\u6C42\u7EBF\u6027\u8868\u5FC5\u987B\u91C7\u7528 \u987A\u5E8F\u5B58\u50A8\u7ED3\u6784 \uFF0C\u800C\u4E14\u8868\u4E2D\u5143\u7D20\u6309\u5173\u952E\u5B57\u6709\u5E8F\u6392\u5217\u3002</p><p>\u9996\u5148\uFF0C\u5047\u8BBE\u8868\u4E2D\u5143\u7D20\u662F\u6309\u5347\u5E8F\u6392\u5217\uFF0C\u5C06\u8868\u4E2D\u95F4\u4F4D\u7F6E\u8BB0\u5F55\u7684 \u5173\u952E\u5B57 \u4E0E\u67E5\u627E\u5173\u952E\u5B57\u6BD4\u8F83\uFF0C\u5982\u679C\u4E24\u8005\u76F8\u7B49\uFF0C\u5219\u67E5\u627E\u6210\u529F\uFF1B\u5426\u5219\u5229\u7528\u4E2D\u95F4\u4F4D\u7F6E \u8BB0\u5F55 \u5C06\u8868\u5206\u6210\u524D\u3001\u540E\u4E24\u4E2A\u5B50\u8868\uFF0C\u5982\u679C\u4E2D\u95F4\u4F4D\u7F6E\u8BB0\u5F55\u7684\u5173\u952E\u5B57\u5927\u4E8E\u67E5\u627E\u5173\u952E\u5B57\uFF0C\u5219\u8FDB\u4E00\u6B65\u67E5\u627E\u524D\u4E00\u5B50\u8868\uFF0C\u5426\u5219\u8FDB\u4E00\u6B65\u67E5\u627E\u540E\u4E00\u5B50\u8868\u3002\u91CD\u590D\u4EE5\u4E0A\u8FC7\u7A0B\uFF0C\u76F4\u5230\u627E\u5230\u6EE1\u8DB3\u6761\u4EF6\u7684 \u8BB0\u5F55 \uFF0C\u4F7F\u67E5\u627E\u6210\u529F\uFF0C\u6216\u76F4\u5230\u5B50\u8868\u4E0D\u5B58\u5728\u4E3A\u6B62\uFF0C\u6B64\u65F6\u67E5\u627E\u4E0D\u6210\u529F\u3002</p><p>\u4E8C\u5206\u67E5\u627E\u662F\u6211\u4EEC\u964D\u4F4E\u7B97\u6CD5\u590D\u6742\u5EA6\u7684\u4E3B\u8981\u624B\u6BB5\u4E4B\u4E00\uFF0C\u53EA\u8981\u6211\u4EEC\u53EF\u4EE5\u9898\u76EE\u4E2D\u5B58\u5728\uFF1A</p><ul><li>\u6709\u5E8F</li><li>\u67E5\u627E</li></ul><p>\u4E24\u4E2A\u56E0\u7D20\uFF0C\u5C31\u53EF\u4EE5\u7528\u4E8C\u5206\u67E5\u627E\u964D\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6\u3002</p><p>\u5728\u6700\u5F00\u59CB\u7684\u9636\u6BB5\uFF0C\u4E8C\u5206\u67E5\u627E\u7684\u96BE\u70B9\u5728\u4E8E\u8BC6\u522B\u6709\u5E8F\u548C\u67E5\u627E\u3002\u540E\u9762\u7684\u96BE\u70B9\u5728\u4E8E\u5982\u679C\u901A\u8FC7\u5EFA\u6A21\u624B\u6BB5\u628A\u9898\u76EE\u7684\u6570\u636E\u53D8\u5F97\u5B58\u5728\u6709\u5E8F\u548C\u67E5\u627E\u3002</p><h2 id="\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u65B9\u5F0F" aria-hidden="true">#</a> \u65B9\u5F0F</h2><p>\u4E8C\u5206\u67E5\u627E\u7684\u7CBE\u9AD3\u5C31\u662F 3 \u70B9\uFF1A</p><ol><li>\u76EE\u6807\u503C\u5C0F\u4E8E\u67E5\u627E\u503C\u65F6\u600E\u4E48\u529E</li><li>\u76EE\u6807\u503C\u7B49\u4E8E\u67E5\u627E\u503C\u65F6\u600E\u4E48\u529E</li><li>\u76EE\u6807\u503C\u5927\u4E8E\u67E5\u627E\u503C\u65F6\u600E\u4E48\u529E</li></ol><p>\u4E8C\u5206\u67E5\u627E\u8FD9\u4E48\u770B\u5C31\u6210\u4E3A\u4E86\u586B\u7A7A\u9898\u3002</p><p>\u4E8C\u5206\u67E5\u627E\u7684\u4F5C\u7528\u5C31\u662F\u5728 Logn \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5185\u627E\u5230\u60F3\u8981\u7684\u6570\u636E\u3002\u5171\u6709 5 \u79CD\u7C7B\u578B\u7684\u4E8C\u5206\u67E5\u627E\u65B9\u5F0F\uFF1A</p><ul><li>\u6570\u636E\u65E0\u91CD\u590D\u67E5\u627E\u6570\u636E</li><li>\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u5C0F\u4E8E\u8BE5\u6570\u7684\u6700\u540E\u4E00\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E</li><li>\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E</li><li>\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E</li><li>\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u8BE5\u6570\u7684\u6570\u5B57\u7684\u4F4D\u7F6E</li></ul><p>\u4E0B\u9762\u9488\u5BF9\u8FD9\u4E94\u7C7B\u8FDB\u884C\u4EE3\u7801\u4ECB\u7ECD\u3002</p><h2 id="\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5206\u7C7B" aria-hidden="true">#</a> \u5206\u7C7B</h2><h3 id="\u7B2C\u4E00\u7C7B-\u6570\u636E\u65E0\u91CD\u590D\u67E5\u627E\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u7C7B-\u6570\u636E\u65E0\u91CD\u590D\u67E5\u627E\u6570\u636E" aria-hidden="true">#</a> \u7B2C\u4E00\u7C7B - \u6570\u636E\u65E0\u91CD\u590D\u67E5\u627E\u6570\u636E</h3><p>\u4F4D\u7F6E\uFF1A0 1 2 3 4 5 6 7 8 9</p><p>\u6570\u636E\uFF1A1 2 3 4 5 6 7 8 9 10</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E8C\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u5C0F\u4E8E\u8BE5\u6570\u7684\u6700\u540E\u4E00\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u5C0F\u4E8E\u8BE5\u6570\u7684\u6700\u540E\u4E00\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> \u7B2C\u4E8C\u7C7B - \u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u5C0F\u4E8E\u8BE5\u6570\u7684\u6700\u540E\u4E00\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E</h3><p>\u4F4D\u7F6E\uFF1A0 1 2 3 4 5 6 7 8 9</p><p>\u6570\u636E\uFF1A1 1 2 2 3 3 3 3 4 4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E09\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> \u7B2C\u4E09\u7C7B - \u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E</h3><p>\u4F4D\u7F6E\uFF1A0 1 2 3 4 5 6 7 8 9</p><p>\u6570\u636E\uFF1A1 1 2 2 3 3 3 3 4 4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u56DB\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> \u7B2C\u56DB\u7C7B - \u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u8BE5\u6570\u5B57\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E</h3><p>\u4F4D\u7F6E\uFF1A0 1 2 3 4 5 6 7 8 9</p><p>\u6570\u636E\uFF1A1 1 2 2 3 3 3 3 4 4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E94\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u8BE5\u6570\u7684\u6570\u5B57\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E94\u7C7B-\u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u8BE5\u6570\u7684\u6570\u5B57\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> \u7B2C\u4E94\u7C7B - \u6570\u636E\u6709\u91CD\u590D\u67E5\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u8BE5\u6570\u7684\u6570\u5B57\u7684\u4F4D\u7F6E</h3><p>\u4F4D\u7F6E\uFF1A0 1 2 3 4 5 6 7 8 9</p><p>\u6570\u636E\uFF1A1 1 2 2 3 3 3 3 4 4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u6218" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u6218" aria-hidden="true">#</a> \u5B9E\u6218</h2><p>\u9898\u76EE\u6765\u81EA\u529B\u6263\u3002</p><h3 id="\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" aria-hidden="true">#</a> \u641C\u7D22\u63D2\u5165\u4F4D\u7F6E</h3><p>\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E</p><div class="custom-container info"><p class="custom-container-title">Tips</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u6392\u5E8F\u6570\u7EC4\u548C\u4E00\u4E2A\u76EE\u6807\u503C\uFF0C\u5728\u6570\u7EC4\u4E2D\u627E\u5230\u76EE\u6807\u503C\uFF0C\u5E76\u8FD4\u56DE\u5176\u7D22\u5F15\u3002\u5982\u679C\u76EE\u6807\u503C\u4E0D\u5B58\u5728\u4E8E\u6570\u7EC4\u4E2D\uFF0C\u8FD4\u56DE\u5B83\u5C06\u4F1A\u88AB\u6309\u987A\u5E8F\u63D2\u5165\u7684\u4F4D\u7F6E\u3002</p><p>\u8BF7\u5FC5\u987B\u4F7F\u7528\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(log n) \u7684\u7B97\u6CD5\u3002</p></div><p><code>\u793A\u4F8B 1</code></p><p>\u8F93\u5165: nums = [1,3,5,6], target = 5</p><p>\u8F93\u51FA: 2</p><p><code>\u793A\u4F8B 2</code></p><p>\u8F93\u5165: nums = [1,3,5,6], target = 2</p><p>\u8F93\u51FA: 1</p><p><code>\u793A\u4F8B 3</code></p><p>\u8F93\u5165: nums = [1,3,5,6], target = 7</p><p>\u8F93\u51FA: 4</p><h4 id="\u601D\u8DEF\u4E0E\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF\u4E0E\u7B97\u6CD5" aria-hidden="true">#</a> \u601D\u8DEF\u4E0E\u7B97\u6CD5</h4><p>\u5047\u8BBE\u9898\u610F\u662F\u53EB\u4F60\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u5BFB\u627E\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u76EE\u6807\u503C\uFF0C\u90A3\u4E48\u8BAD\u7EC3\u6709\u7D20\u7684\u8BFB\u8005\u80AF\u5B9A\u7ACB\u9A6C\u5C31\u80FD\u60F3\u5230\u5229\u7528\u4E8C\u5206\u6CD5\u5728 O(\\log n)O(logn) \u7684\u65F6\u95F4\u5185\u627E\u5230\u662F\u5426\u5B58\u5728\u76EE\u6807\u503C\u3002\u4F46\u8FD9\u9898\u8FD8\u591A\u4E86\u4E2A\u989D\u5916\u7684\u6761\u4EF6\uFF0C\u5373\u5982\u679C\u4E0D\u5B58\u5728\u6570\u7EC4\u4E2D\u7684\u65F6\u5019\u9700\u8981\u8FD4\u56DE\u6309\u987A\u5E8F\u63D2\u5165\u7684\u4F4D\u7F6E\uFF0C\u90A3\u6211\u4EEC\u8FD8\u80FD\u7528\u4E8C\u5206\u6CD5\u4E48\uFF1F\u7B54\u6848\u662F\u53EF\u4EE5\u7684\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u7A0D\u4F5C\u4FEE\u6539\u5373\u53EF\u3002</p><p>\u8003\u8651\u8FD9\u4E2A\u63D2\u5165\u7684\u4F4D\u7F6E pos\uFF0C\u5B83\u6210\u7ACB\u7684\u6761\u4EF6\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>nums<span class="token punctuation">[</span>pos\u2212<span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> target \u2264 nums<span class="token punctuation">[</span>pos<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2D nums \u4EE3\u8868\u6392\u5E8F\u6570\u7EC4\u3002\u7531\u4E8E\u5982\u679C\u5B58\u5728\u8FD9\u4E2A\u76EE\u6807\u503C\uFF0C\u6211\u4EEC\u8FD4\u56DE\u7684\u7D22\u5F15\u4E5F\u662F pos\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5C06\u4E24\u4E2A\u6761\u4EF6\u5408\u5E76\u5F97\u51FA\u6700\u540E\u7684\u76EE\u6807\uFF1A\u300C\u5728\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4\u4E2D\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E target \u7684\u4E0B\u6807\u300D\u3002</p><p>\u95EE\u9898\u8F6C\u5316\u5230\u8FD9\u91CC\uFF0C\u76F4\u63A5\u5957\u7528\u4E8C\u5206\u6CD5\u5373\u53EF\uFF0C\u5373\u4E0D\u65AD\u7528\u4E8C\u5206\u6CD5\u903C\u8FD1\u67E5\u627E\u7B2C\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E target \u7684\u4E0B\u6807 \u3002\u4E0B\u6587\u7ED9\u51FA\u7684\u4EE3\u7801\u662F\u7B14\u8005\u4E60\u60EF\u7684\u4E8C\u5206\u5199\u6CD5\uFF0Cans \u521D\u503C\u8BBE\u7F6E\u4E3A\u6570\u7EC4\u957F\u5EA6\u53EF\u4EE5\u7701\u7565\u8FB9\u754C\u6761\u4EF6\u7684\u5224\u65AD\uFF0C\u56E0\u4E3A\u5B58\u5728\u4E00\u79CD\u60C5\u51B5\u662F target \u5927\u4E8E\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u6570\uFF0C\u6B64\u65F6\u9700\u8981\u63D2\u5165\u5230\u6570\u7EC4\u957F\u5EA6\u7684\u4F4D\u7F6E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">searchInsert</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u5355\u4E00\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u5355\u4E00\u5143\u7D20" aria-hidden="true">#</a> \u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u5355\u4E00\u5143\u7D20</h3><div class="custom-container info"><p class="custom-container-title">Tips</p><p>\u7ED9\u4F60\u4E00\u4E2A\u4EC5\u7531\u6574\u6570\u7EC4\u6210\u7684\u6709\u5E8F\u6570\u7EC4\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u5143\u7D20\u90FD\u4F1A\u51FA\u73B0\u4E24\u6B21\uFF0C\u552F\u6709\u4E00\u4E2A\u6570\u53EA\u4F1A\u51FA\u73B0\u4E00\u6B21\u3002</p><p>\u8BF7\u4F60\u627E\u51FA\u5E76\u8FD4\u56DE\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u90A3\u4E2A\u6570\u3002</p><p>\u4F60\u8BBE\u8BA1\u7684\u89E3\u51B3\u65B9\u6848\u5FC5\u987B\u6EE1\u8DB3 O(log n) \u65F6\u95F4\u590D\u6742\u5EA6\u548C O(1) \u7A7A\u95F4\u590D\u6742\u5EA6\u3002</p></div><p><code>\u793A\u4F8B 1</code></p><p>\u8F93\u5165: nums = [1,1,2,3,3,4,4,8,8]</p><p>\u8F93\u51FA: 2</p><p><code>\u793A\u4F8B 2</code></p><p>\u8F93\u5165: nums = [3,3,7,7,10,11,11]</p><p>\u8F93\u51FA: 10</p><h4 id="\u601D\u8DEF\u4E0E\u7B97\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF\u4E0E\u7B97\u6CD5-1" aria-hidden="true">#</a> \u601D\u8DEF\u4E0E\u7B97\u6CD5</h4><p>\u56E0\u4E3A\u627E\u51FA\u552F\u4E00\u4E00\u4E2A\u6CA1\u6709\u91CD\u590D\u7684\u6570\uFF0C\u4E14\u5176\u4ED6\u76F8\u540C\u7684\u6570\u53EA\u6709\u4E24\u4E2A\uFF0C\u6240\u4EE5\u5229\u7528\u4E8C\u5206\u67E5\u627E\u65F6\uFF0C\u6839\u636E mid \u548C\u5B83\u7684\u524D\u540E\u6765\u8FDB\u884C\u5224\u65AD\u3002</p><p>\u90A3\u4E48\u600E\u4E48\u77E5\u9053\u4E0D\u91CD\u590D\u7684\u5728 mid \u7684\u5DE6\u8FB9\u8FD8\u662F\u53F3\u8FB9\u5462\uFF1F</p><p>\u6839\u636E mid \u7684\u5DE6\u4FA7\u548C\u53F3\u4FA7\u4E2A\u6570\u6765\u5224\u65AD\uFF0C\u56E0\u4E3A mid \u6307\u7684\u662F\u4E0B\u6807\u3002</p><ul><li><p>\u5047\u8BBE mid \u662F\u5076\u6570\uFF0C\u5219\u524D\u9762\u6709 <code>2 * n</code> \u7684\u6570\uFF0C\u5982\u679C <code>nums[mid] == nums[mid - 1]</code>\uFF0C\u5219\u4EE3\u8868\u5DE6\u4FA7\u5FC5\u6709\u4E0D\u91CD\u590D\u7684\u6570\uFF0C\u56E0\u4E3A\u524D\u9762\u539F\u672C\u6709 <code>2 * n</code> \u7684\u6570\uFF0C\u5219\u5047\u8BBE\u6B63\u597D\u5B58\u5728 <code>n / 2</code> \u4E2A\u91CD\u590D\u7684\u6570\uFF0C\u4F46\u662F\u663E\u7136 <code>nums[mid] == nums[mid - 1]</code>\uFF0C\u6240\u4EE5\u5DE6\u4FA7\u5FC5\u6709\u552F\u4E00\u7684\u6570\u3002\uFF080 - mid \u4E4B\u95F4\u4E0D\u53D6 mid \u662F\u5076\u6570\uFF0C\u53D6\u4E86 mid \u5219\u662F\u5947\u6570\uFF0C\u5947\u6570\u4E4B\u95F4\u80AF\u5B9A\u6709\u4E00\u4E2A\u552F\u4E00\u7684\u6570\uFF09</p></li><li><p>\u5047\u8BBE mid \u662F\u5947\u6570\uFF0C\u5219\u524D\u9762\u6709 <code>2 * n - 1</code> \u4E2A\u6570\uFF0C\u5982\u679C <code>nums[mid] == nums[mid - 1]</code>\uFF0C\u5219\u4EE3\u8868\u53F3\u4FA7\u7684\u5FC5\u6709\u4E0D\u91CD\u590D\u7684\u6570\uFF0C\u56E0\u4E3A\u524D\u9762\u539F\u672C\u6709 <code>2 * n - 1</code> \u7684\u6570\uFF0C\u5219\u5047\u8BBE\u6B63\u597D\u5B58\u5728 2 \u4E2A\u91CD\u590D\u7684\u6570 + \u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u6570\uFF0C\u4F46\u662F\u663E\u7136 <code>nums[mid] == nums[mid - 1]</code>\uFF0C\u6240\u4EE5\u53F3\u4FA7\u5FC5\u6709\u552F\u4E00\u7684\u6570\u3002\uFF080 - mid \u4E4B\u95F4\u4E0D\u53D6 mid \u662F\u5947\u6570\uFF0C\u53D6\u4E86 mid \u5219\u662F\u5076\u6570\uFF0C\u5076\u6570\u4E4B\u95F4\u4E0D\u5B58\u5728\u552F\u4E00\u7684\u6570\uFF0C\u6240\u4EE5\u53EA\u6709\u53F3\u4FA7\u6709\uFF09</p></li><li><p><code>nums[mid] == nums[mid + 1]</code> \u540C\u7406 ......</p></li></ul><p>\u5982\u679C\u6700\u7EC8 <code>mid</code> \u662F <code>0</code> \u6216\u8005 <code>nums.length - 1</code>\uFF0C\u5219 <code>0</code> \u6216\u8005 <code>nums.length - 1</code> \u5C31\u662F\u552F\u4E00\u6570\u7684\u4E0B\u6807\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">singleNonDuplicate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>mid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>mid <span class="token operator">==</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// mid \u6307\u7684\u662F\u4E0B\u6807\uFF0C\u5982\u679C mid \u662F\u5076\u6570\uFF08\u5219 mid \u524D\u9762\u4E00\u5B9A\u6709 2 * n \u4E2A\u6570\uFF09\uFF0C\u5219 mid \u5DE6\u8FB9\u7684\u6570\u5B57\u4E00\u5B9A\u662F\u552F\u4E00\u7684\uFF0C\u5982 nums = [1, 1, 2, 3, 3, 5, 5, 8, 8]</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> 
                <span class="token comment">// \u5982\u679C mid \u662F\u5947\u6570\uFF08\u5219 mid \u524D\u9762\u4E00\u5B9A\u6709 2 * n - 1 \u4E2A\u6570\uFF09\uFF0C\u5219 mid \u53F3\u8FB9\u7684\u6570\u5B57\u4E00\u5B9A\u662F\u552F\u4E00\u7684</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> 
                    left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C mid \u662F\u5076\u6570\uFF08\u5219 mid \u524D\u9762\u4E00\u5B9A\u6709 2 * n \u4E2A\u6570\uFF09\uFF0C\u5219 mid \u53F3\u8FB9\u7684\u6570\u5B57\u4E00\u5B9A\u662F\u552F\u4E00\u7684\uFF0C\u56E0\u4E3A\u6EE1\u8DB3\u4E86 nums[mid] == nums[mid + 1]</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5982\u679C mid \u662F\u5947\u6570\uFF08\u5219 mid \u524D\u9762\u4E00\u5B9A\u6709 2 * n - 1 \u4E2A\u6570\uFF09\uFF0C\u5219 mid \u5DE6\u8FB9\u7684\u6570\u5B57\u4E00\u5B9A\u662F\u552F\u4E00\u7684</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> 
                    right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,71),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","index.html.vue"]]);export{k as default};
