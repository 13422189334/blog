import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,f as o,a as n,e as c,b as a}from"./app.289de5ca.js";const l="/assets/algorithm/priorityTraversal/pt_000.jpg",i={},u=n("h2",{id:"\u6DF1\u5EA6\u4F18\u5148\u904D\u5386",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6DF1\u5EA6\u4F18\u5148\u904D\u5386","aria-hidden":"true"},"#"),c(" \u6DF1\u5EA6\u4F18\u5148\u904D\u5386")],-1),k=n("p",null,"\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF08Depth First Search\uFF0C\u7B80\u79F0 DFS\uFF09\u5C31\u662F\u627E\u51C6\u4E00\u6761\u8DEF\u4E0D\u505C\u6DF1\u5165\u7684\u641C\u7D22\u65B9\u6CD5\uFF0C \u5F53\u53D1\u73B0\u8FD9\u6761\u8DEF\u8D70\u4E0D\u901A\u7684\u65F6\u5019\u5C31\u4F1A\u56DE\u9000\u5230\u4E0A\u4E00\u4E2A\u63A2\u7D22\u7684\u8282\u70B9\uFF0C\u5982\u679C\u4E0A\u4E00\u4E2A\u8282\u70B9\u5B58\u5728\u6CA1\u6709\u63A2\u7D22\u7684\u5206\u652F\uFF0C\u4FBF\u7EE7\u7EED\u63A2\u7D22\u82E5\u6CA1\u6709\u5219\u7EE7\u7EED\u56DE\u9000\u3002 \u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u5C31\u6709\u70B9\u50CF\u4E8C\u53C9\u6811\u4E2D\u7684\u524D\u5E8F\u904D\u5386\u3001\u4E2D\u5E8F\u904D\u5386\u548C\u540E\u5E8F\u904D\u5386\u3002",-1),r=n("p",null,"\u5B83\u7684\u7279\u70B9\u662F\u4E0D\u649E\u5357\u5899\u4E0D\u56DE\u5934\uFF0C\u5148\u8D70\u5B8C\u4E00\u6761\u8DEF\uFF0C\u518D\u6362\u4E00\u6761\u8DEF\u7EE7\u7EED\u8D70\u3002",-1),d=n("p",null,"\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u7684\u5173\u952E\u5C31\u5728\u4E8E\u5982\u4F55\u627E\u5230\u5DF2\u7ECF\u63A2\u7D22\u8FC7\u8282\u70B9\u7684\u4E0A\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E5F\u5C31\u662F\u5982\u4F55\u56DE\u6EAF\u3002",-1),v=n("p",null,[n("img",{src:l,alt:"pt_000"})],-1),m=n("ul",null,[n("li",null,"\u4ECE\u6839\u8282\u70B9 1 \u5F00\u59CB\u904D\u5386\uFF0C\u5B83\u76F8\u90BB\u7684\u8282\u70B9\u6709 2\uFF0C3\uFF0C4\uFF0C\u5148\u904D\u5386\u8282\u70B9 2\uFF0C\u518D\u904D\u5386 2 \u7684\u5B50\u8282\u70B9 5\uFF0C\u7136\u540E\u518D\u904D\u5386 5 \u7684\u5B50\u8282\u70B9 9"),n("li",null,"\u6B64\u65F6 2 \u4EE5\u53CA\u4E0B\u9762\u7684\u8282\u70B9\u904D\u5386\u5B8C\u540E\uFF0C\u56DE\u5230\u6839\u8282\u70B9 1\uFF0C\u7EE7\u7EED\u904D\u5386 3\uFF0C6\uFF0C10\uFF0C7"),n("li",null,"\u6B64\u65F6 3 \u4EE5\u53CA\u4E0B\u9762\u7684\u8282\u70B9\u904D\u5386\u5B8C\u540E\uFF0C\u56DE\u5230\u6839\u8282\u70B9 1\uFF0C\u7EE7\u7EED\u904D\u5386 4\uFF0C8"),n("li",null,"\u5B8C\u6574\u7684\u904D\u5386\u987A\u5E8F\u56FE\u5982\u4E0B\uFF1A")],-1),h=["src"],b=n("p",null,"\u53E6\u4E00\u4E2A\u5229\u7528\u6808\u7684\u52A8\u56FE\u63CF\u8FF0\uFF1A",-1),f=["src"],_=a(`<h3 id="\u9012\u5F52\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u5B9E\u73B0" aria-hidden="true">#</a> \u9012\u5F52\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;DFS \u904D\u5386\uFF0C\u8FD9\u91CC\u5E94\u8BE5\u5B58\u8282\u70B9\uFF0C\u5982\uFF1Alist.add(root)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u904D\u5386\u5DE6\u8282\u70B9 </span>
  <span class="token function">preOrderRecur</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u904D\u5386\u53F3\u8282\u70B9 </span>
  <span class="token function">preOrderRecur</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5B9E\u73B0" aria-hidden="true">#</a> \u8FED\u4EE3\u5B9E\u73B0</h3><p>\u6839\u636E\u6DF1\u5EA6\u4F18\u5148\u7B97\u6CD5\u7684\u7279\u6027\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6808\u5148\u5165\u540E\u51FA\u7684\u7279\u6027\u5B9E\u73B0\u3002</p><p>\u5C06\u63A2\u7D22\u8FC7\u7684\u70B9\u5B58\u5165\u6808\u5185\uFF0C\u9047\u5230\u8D70\u4E0D\u901A\u7684\u65F6\u5019\u5C06\u6808\u9876\u5143\u7D20\u51FA\u6808\u56DE\u5230\u4E0A\u4E00\u4E2A\u5143\u7D20\uFF0C\u5B9E\u73B0\u56DE\u6EAF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token class-name">TreeNode</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;DFS \u904D\u5386\uFF0C\u8FD9\u91CC\u5E94\u8BE5\u5B58\u8282\u70B9\uFF0C\u5982\uFF1Alist.add(node)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u96BE\u53D1\u73B0\uFF0C\u4E0A\u9762\u7684\u56FE\u8FD9\u5C31\u662F\u6811\u7684\u524D\u5E8F\u904D\u5386\uFF0C\u5B9E\u9645\u4E0A\u4E0D\u7BA1\u662F\u524D\u5E8F\u904D\u5386\uFF0C\u8FD8\u662F\u4E2D\u5E8F\u904D\u5386\uFF0C\u4EA6\u6216\u662F\u540E\u5E8F\u904D\u5386\uFF0C\u90FD\u5C5E\u4E8E\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u3002</p><p>\u8BE6\u7EC6\u5173\u4E8E DFS \u7684\u524D\u5E8F\u904D\u5386\u3001\u4E2D\u5E8F\u904D\u5386\u3001\u540E\u5E8F\u904D\u5386\u7684\u8BB2\u89E3\uFF0C\u8BF7\u770B \u4E8C\u53C9\u6811\u904D\u5386\u3002</p><h2 id="\u5E7F\u5EA6\u4F18\u5148\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u5EA6\u4F18\u5148\u904D\u5386" aria-hidden="true">#</a> \u5E7F\u5EA6\u4F18\u5148\u904D\u5386</h2><p>\u5E7F\u5EA6\u4F18\u5148\u904D\u5386\uFF08Breath First Search\uFF0C\u7B80\u79F0 BFS\uFF09\u4E00\u5C42\u4E00\u5C42\u904D\u5386\uFF0C\u6BCF\u4E00\u5C42\u5F97\u5230\u7684\u6240\u6709\u65B0\u8282\u70B9\uFF0C\u8981\u7528\u961F\u5217\u5B58\u50A8\u8D77\u6765\u4EE5\u5907\u4E0B\u4E00\u5C42\u904D\u5386\u7684\u65F6\u5019\u518D\u904D\u5386\u3002</p>`,10),g=["src"],y=n("p",null,"\u53EF\u4EE5\u770B\u51FA\uFF0C\u904D\u5386\u7684\u987A\u5E8F\u5148\u662F 2\uFF0C3\uFF0C4\uFF0C\u63A5\u7740\u662F 5\uFF0C6\uFF0C7\uFF0C8\uFF0C\u6700\u540E\u662F 9\uFF0C10\u3002\u5C5E\u4E8E\u4E00\u5C42\u4E00\u5C42\u904D\u5386\u3002",-1),w=n("p",null,"\u53E6\u4E00\u4E2A\u5229\u7528\u961F\u5217\u7684\u52A8\u56FE\u63CF\u8FF0\uFF1A",-1),S=["src"],N=a(`<p>\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u7528\u7684\u662F\u6808\uFF0C\u800C\u5E7F\u5EA6\u4F18\u5148\u904D\u5386\u8981\u7528\u961F\u5217\u6765\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">return</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> 
  <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span> 
 
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token class-name">Node</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BFS \u904D\u5386\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u5B58\u8282\u70B9\uFF0C\u5982 list.add(node)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token class-name">Node</span> left <span class="token operator">=</span> node<span class="token punctuation">.</span>left<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
    <span class="token class-name">Node</span> right <span class="token operator">=</span> node<span class="token punctuation">.</span>right<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function j(s,q){return p(),e("div",null,[u,k,r,d,v,o(" more "),m,n("img",{src:s.$withBase("/assets/algorithm/priorityTraversal/pt_001.jpg")},null,8,h),b,n("img",{src:s.$withBase("/assets/algorithm/priorityTraversal/pt_002.gif")},null,8,f),_,n("img",{src:s.$withBase("/assets/algorithm/priorityTraversal/pt_003.gif")},null,8,g),y,w,n("img",{src:s.$withBase("/assets/algorithm/priorityTraversal/pt_004.gif")},null,8,S),N])}const x=t(i,[["render",j],["__file","index.html.vue"]]);export{x as default};
