export const data = JSON.parse("{\"key\":\"v-eeb01270\",\"path\":\"/React/Hooks/\",\"title\":\"浅谈12个Hooks\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"浅谈12个Hooks\",\"date\":\"2022-06-27T10:14:21.000Z\",\"permalink\":\"/React/Hooks/\",\"author\":\"小杜杜 - 掘金\",\"category\":[\"React\"],\"tag\":[\"React\"],\"summary\":\"# 前言\\nReact Hooks的发布已经有三年多了，它给函数式组件带来了生命周期，现如今，Hooks逐渐取代class组件，相信各位 React 开发的小伙伴已经深有体会，然而你真的完全掌握hooks了吗？知道如何去做一个好的自定义hooks吗？\\n我们知道React Hooks有useState设置变量，useEffect副作用，useRef来获取元素的所有属性，还有useMemo、useCallback来做性能优化，当然还有一个自定义Hooks，来创造出你所想要的Hooks\\n接下来我们来看看以下几个问题，问问自己，是否全都知道：\\n\\nHooks的由来是什么？\\nuseRef的高级用法是什么？\\nuseMemo 和 useCallback 是怎么做优化的？\\n一个好的自定义Hooks该如何设计？\\n如何做一个不需要useState就可以直接修改属性并刷新视图的自定义Hooks？\\n如何做一个可以监听任何事件的自定义Hooks？\\n\\n如果你对以上问题有疑问，有好奇，那么这篇文章应该能够帮助到你～\\n本文将会以介绍自定义Hooks来解答上述问题，并结合 TS，ahooks中的钩子，以案列的形式去演示\\n注：这里讲解的自定义钩子可能会和 ahooks上的略有不同，不会考虑过多的情况，如果用于项目，建议直接使用ahooks上的钩子～\\n\\n\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://jin-shaohui.gitee.io/React/Hooks/\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"繁华中自律，落魄中自愈\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"浅谈12个Hooks\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"小杜杜 - 掘金\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"React\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-06-27T10:14:21.000Z\"}]]},\"excerpt\":\"<h2 id=\\\"前言\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#前言\\\" aria-hidden=\\\"true\\\">#</a> 前言</h2>\\n<p><code v-pre>React Hooks</code>的发布已经有三年多了，它给函数式组件带来了<strong>生命周期</strong>，现如今，<code v-pre>Hooks</code>逐渐取代<code v-pre>class</code>组件，相信各位 <code v-pre>React</code> 开发的小伙伴已经深有体会，然而你真的完全掌握hooks了吗？知道如何去做一个好的自定义hooks吗？</p>\\n<p>我们知道<code v-pre>React Hooks</code>有<code v-pre>useState</code>设置变量，<code v-pre>useEffect</code>副作用，<code v-pre>useRef</code>来获取元素的所有属性，还有<code v-pre>useMemo</code>、<code v-pre>useCallback</code>来做性能优化，当然还有一个<code v-pre>自定义Hooks</code>，来创造出你所想要的<code v-pre>Hooks</code></p>\\n<p>接下来我们来看看以下几个问题，问问自己，是否全都知道：</p>\\n<ul>\\n<li>Hooks的由来是什么？</li>\\n<li><code v-pre>useRef</code>的高级用法是什么？</li>\\n<li><code v-pre>useMemo</code> 和 <code v-pre>useCallback</code> 是怎么做优化的？</li>\\n<li>一个好的自定义Hooks该如何设计？</li>\\n<li>如何做一个不需要<code v-pre>useState</code>就可以直接修改属性并刷新视图的自定义Hooks？</li>\\n<li>如何做一个可以监听任何事件的自定义Hooks？</li>\\n</ul>\\n<p>如果你对以上问题有疑问，有好奇，那么这篇文章应该能够帮助到你～</p>\\n<p>本文将会以介绍<strong>自定义Hooks</strong>来解答上述问题，并结合 <strong>TS</strong>，<strong>ahooks</strong>中的钩子，以案列的形式去演示</p>\\n<p>注：这里讲解的自定义钩子可能会和 <code v-pre>ahooks</code>上的略有不同，不会考虑过多的情况，如果用于项目，建议直接使用<code v-pre>ahooks</code>上的钩子～</p>\\n<p><img src=\\\"/assets/knowledge/frontEnd/react/hooks/reactHooks.jpg\\\" alt=\\\"reactHooks\\\"></p>\\n\",\"headers\":[{\"level\":2,\"title\":\"前言\",\"slug\":\"前言\",\"children\":[]},{\"level\":2,\"title\":\"自定义Hooks是什么？\",\"slug\":\"自定义hooks是什么\",\"children\":[{\"level\":3,\"title\":\"如何设计一个自定义Hooks\",\"slug\":\"如何设计一个自定义hooks\",\"children\":[]},{\"level\":3,\"title\":\"通用模式\",\"slug\":\"通用模式\",\"children\":[]},{\"level\":3,\"title\":\"简单的小例子：usePow\",\"slug\":\"简单的小例子-usepow\",\"children\":[]}]},{\"level\":2,\"title\":\"玩转React Hooks\",\"slug\":\"玩转react-hooks\",\"children\":[{\"level\":3,\"title\":\"useMemo\",\"slug\":\"usememo\",\"children\":[]},{\"level\":3,\"title\":\"useCallback\",\"slug\":\"usecallback\",\"children\":[]},{\"level\":3,\"title\":\"useRef\",\"slug\":\"useref\",\"children\":[]},{\"level\":3,\"title\":\"useEffect\",\"slug\":\"useeffect\",\"children\":[]}]},{\"level\":2,\"title\":\"案例\",\"slug\":\"案例\",\"children\":[{\"level\":3,\"title\":\"案例1: useReactive\",\"slug\":\"案例1-usereactive\",\"children\":[]},{\"level\":3,\"title\":\"案例2: useEventListener\",\"slug\":\"案例2-useeventlistener\",\"children\":[]},{\"level\":3,\"title\":\"案例3: 有关时间的Hooks\",\"slug\":\"案例3-有关时间的hooks\",\"children\":[]}]}],\"readingTime\":{\"minutes\":22.04,\"words\":6612},\"copyright\":\"著作权归JSH所有\\n基于MIT协议\\n原文链接：https://jin-shaohui.gitee.io/React/Hooks/\",\"filePathRelative\":\"Knowledge/FrontEnd/React/Hooks/index.md\",\"localizedDate\":\"2022年6月27日\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
